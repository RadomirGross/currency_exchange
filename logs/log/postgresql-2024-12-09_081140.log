2024-12-09 08:11:40.107 UTC [28] LOG:  database system was shut down at 2024-12-09 08:11:39 UTC
2024-12-09 08:11:40.117 UTC [1] LOG:  database system is ready to accept connections
2024-12-09 08:12:53.471 UTC [46] LOG:  connection received: host=172.18.0.1 port=55062
2024-12-09 08:12:53.485 UTC [46] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:12:53.510 UTC [46] LOG:  duration: 0.197 ms
2024-12-09 08:12:53.510 UTC [46] LOG:  duration: 0.028 ms
2024-12-09 08:12:53.510 UTC [46] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:12:53.510 UTC [46] LOG:  duration: 0.035 ms
2024-12-09 08:12:53.511 UTC [46] LOG:  duration: 0.060 ms
2024-12-09 08:12:53.511 UTC [46] LOG:  duration: 0.005 ms
2024-12-09 08:12:53.511 UTC [46] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:12:53.512 UTC [46] LOG:  duration: 0.018 ms
2024-12-09 08:12:53.539 UTC [46] LOG:  duration: 0.656 ms
2024-12-09 08:12:53.539 UTC [46] LOG:  duration: 0.365 ms
2024-12-09 08:12:53.539 UTC [46] LOG:  execute <unnamed>: select version()
2024-12-09 08:12:53.539 UTC [46] LOG:  duration: 0.039 ms
2024-12-09 08:12:53.595 UTC [46] LOG:  duration: 0.020 ms
2024-12-09 08:12:53.595 UTC [46] LOG:  duration: 0.005 ms
2024-12-09 08:12:53.620 UTC [46] LOG:  duration: 0.652 ms
2024-12-09 08:12:53.620 UTC [46] LOG:  duration: 0.057 ms
2024-12-09 08:12:53.620 UTC [46] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2024-12-09 08:12:53.620 UTC [46] LOG:  duration: 0.154 ms
2024-12-09 08:12:53.657 UTC [46] LOG:  duration: 0.998 ms
2024-12-09 08:12:53.659 UTC [46] LOG:  duration: 1.964 ms
2024-12-09 08:12:53.659 UTC [46] LOG:  execute <unnamed>: SELECT e.typdelim FROM pg_catalog.pg_type t, pg_catalog.pg_type e WHERE t.oid = $1 and t.typelem = e.oid
2024-12-09 08:12:53.659 UTC [46] DETAIL:  parameters: $1 = '1003'
2024-12-09 08:12:53.659 UTC [46] LOG:  duration: 0.071 ms
2024-12-09 08:12:53.767 UTC [46] LOG:  duration: 0.152 ms
2024-12-09 08:12:53.767 UTC [46] LOG:  duration: 0.034 ms
2024-12-09 08:12:53.767 UTC [46] LOG:  execute <unnamed>: select current_database(), current_schema(), current_user
2024-12-09 08:12:53.767 UTC [46] LOG:  duration: 0.014 ms
2024-12-09 08:12:53.876 UTC [46] LOG:  duration: 2.145 ms
2024-12-09 08:12:53.876 UTC [46] LOG:  duration: 0.036 ms
2024-12-09 08:12:53.876 UTC [46] LOG:  execute <unnamed>: select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
2024-12-09 08:12:53.877 UTC [46] LOG:  duration: 0.403 ms
2024-12-09 08:12:53.953 UTC [46] LOG:  duration: 0.821 ms
2024-12-09 08:12:53.954 UTC [46] LOG:  duration: 1.211 ms
2024-12-09 08:12:53.954 UTC [46] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	where not datistemplate
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2024-12-09 08:12:53.954 UTC [46] LOG:  duration: 0.490 ms
2024-12-09 08:12:53.980 UTC [46] LOG:  duration: 0.237 ms
2024-12-09 08:12:53.981 UTC [46] LOG:  duration: 0.729 ms
2024-12-09 08:12:53.981 UTC [46] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:12:53.981 UTC [46] LOG:  duration: 0.463 ms
2024-12-09 08:12:53.989 UTC [46] LOG:  duration: 0.201 ms
2024-12-09 08:12:53.989 UTC [46] LOG:  duration: 0.338 ms
2024-12-09 08:12:53.989 UTC [46] LOG:  execute <unnamed>: SELECT n.nspname = ANY(current_schemas(true)), n.nspname, t.typname FROM pg_catalog.pg_type t JOIN pg_catalog.pg_namespace n ON t.typnamespace = n.oid WHERE t.oid = $1
2024-12-09 08:12:53.989 UTC [46] DETAIL:  parameters: $1 = '28'
2024-12-09 08:12:53.989 UTC [46] LOG:  duration: 0.040 ms
2024-12-09 08:12:53.992 UTC [46] LOG:  duration: 1.561 ms
2024-12-09 08:12:53.993 UTC [46] LOG:  duration: 0.355 ms
2024-12-09 08:12:53.993 UTC [46] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc, typtype   FROM pg_catalog.pg_type   LEFT   JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE typname = $1  ORDER BY sp.r, pg_type.oid DESC LIMIT 1
2024-12-09 08:12:53.993 UTC [46] DETAIL:  parameters: $1 = 'xid'
2024-12-09 08:12:53.993 UTC [46] LOG:  duration: 0.134 ms
2024-12-09 08:12:54.005 UTC [46] LOG:  duration: 1.323 ms
2024-12-09 08:12:54.006 UTC [46] LOG:  duration: 0.376 ms
2024-12-09 08:12:54.006 UTC [46] LOG:  execute <unnamed>: select R.oid::bigint as role_id, rolname as role_name,
	  rolsuper is_super, rolinherit is_inherit,
	  rolcreaterole can_createrole, rolcreatedb can_createdb,
	  rolcanlogin can_login, rolreplication /* false */ is_replication,
	  rolconnlimit conn_limit, rolvaliduntil valid_until,
	  rolbypassrls /* false */ bypass_rls, rolconfig config,
	  D.description
	from pg_catalog.pg_roles R
	  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
2024-12-09 08:12:54.006 UTC [46] LOG:  duration: 0.076 ms
2024-12-09 08:12:54.023 UTC [46] LOG:  duration: 0.143 ms
2024-12-09 08:12:54.024 UTC [46] LOG:  duration: 0.140 ms
2024-12-09 08:12:54.024 UTC [46] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	where not datistemplate
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2024-12-09 08:12:54.024 UTC [46] LOG:  duration: 0.052 ms
2024-12-09 08:12:54.034 UTC [46] LOG:  duration: 0.177 ms
2024-12-09 08:12:54.034 UTC [46] LOG:  duration: 0.232 ms
2024-12-09 08:12:54.034 UTC [46] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:12:54.034 UTC [46] LOG:  duration: 0.054 ms
2024-12-09 08:12:54.050 UTC [46] LOG:  duration: 0.134 ms
2024-12-09 08:12:54.050 UTC [46] LOG:  duration: 0.232 ms
2024-12-09 08:12:54.050 UTC [46] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:12:54.050 UTC [46] LOG:  duration: 0.052 ms
2024-12-09 08:12:54.066 UTC [46] LOG:  duration: 0.151 ms
2024-12-09 08:12:54.066 UTC [46] LOG:  duration: 0.163 ms
2024-12-09 08:12:54.066 UTC [46] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	where not datistemplate
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2024-12-09 08:12:54.066 UTC [46] LOG:  duration: 0.038 ms
2024-12-09 08:12:54.077 UTC [46] LOG:  duration: 0.157 ms
2024-12-09 08:12:54.077 UTC [46] LOG:  duration: 0.246 ms
2024-12-09 08:12:54.077 UTC [46] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:12:54.077 UTC [46] LOG:  duration: 0.051 ms
2024-12-09 08:12:54.088 UTC [46] LOG:  duration: 0.238 ms
2024-12-09 08:12:54.089 UTC [46] LOG:  duration: 0.317 ms
2024-12-09 08:12:54.089 UTC [46] LOG:  execute S_1: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:12:54.089 UTC [46] LOG:  duration: 0.042 ms
2024-12-09 08:12:54.108 UTC [46] LOG:  duration: 0.704 ms
2024-12-09 08:12:54.108 UTC [46] LOG:  duration: 0.070 ms
2024-12-09 08:12:54.108 UTC [46] LOG:  execute <unnamed>: select case
	  when pg_catalog.pg_is_in_recovery()
	    then $1
	  else
	    pg_catalog.txid_current()::varchar::bigint
	  end as current_txid
2024-12-09 08:12:54.108 UTC [46] DETAIL:  parameters: $1 = '0'
2024-12-09 08:12:54.108 UTC [46] LOG:  duration: 0.036 ms
2024-12-09 08:12:54.122 UTC [46] LOG:  duration: 0.425 ms
2024-12-09 08:12:54.122 UTC [46] LOG:  duration: 0.262 ms
2024-12-09 08:12:54.122 UTC [46] LOG:  execute <unnamed>: select L.transactionid::varchar::bigint as transaction_id
	from pg_catalog.pg_locks L
	where L.transactionid is not null
	order by pg_catalog.age(L.transactionid) desc
	limit 1
2024-12-09 08:12:54.122 UTC [46] LOG:  duration: 0.120 ms
2024-12-09 08:12:54.133 UTC [46] LOG:  duration: 0.399 ms
2024-12-09 08:12:54.133 UTC [46] LOG:  duration: 0.246 ms
2024-12-09 08:12:54.133 UTC [46] LOG:  execute <unnamed>: select usesuper
	from pg_user
	where usename = current_user
2024-12-09 08:12:54.134 UTC [46] LOG:  duration: 0.042 ms
2024-12-09 08:12:54.141 UTC [46] LOG:  duration: 0.165 ms
2024-12-09 08:12:54.142 UTC [46] LOG:  duration: 0.871 ms
2024-12-09 08:12:54.142 UTC [46] LOG:  execute <unnamed>: select lanname
	from pg_catalog.pg_language
	order by lanname
2024-12-09 08:12:54.142 UTC [46] LOG:  duration: 0.275 ms
2024-12-09 08:12:54.171 UTC [46] LOG:  duration: 0.461 ms
2024-12-09 08:12:54.182 UTC [46] LOG:  duration: 10.417 ms
2024-12-09 08:12:54.182 UTC [46] LOG:  execute <unnamed>: select distinct oid
	from pg_catalog.pg_am
	union
	select distinct oid
	from pg_catalog.pg_foreign_data_wrapper
	union
	select distinct oid
	from pg_catalog.pg_foreign_server
	union
	select distinct oid
	from pg_catalog.pg_extension
	
	union
	select distinct oid
	from pg_catalog.pg_user_mapping
	
2024-12-09 08:12:54.182 UTC [46] LOG:  duration: 0.721 ms
2024-12-09 08:12:54.208 UTC [46] LOG:  duration: 0.292 ms
2024-12-09 08:12:54.209 UTC [46] LOG:  duration: 0.095 ms
2024-12-09 08:12:54.209 UTC [46] LOG:  execute <unnamed>: select D.objoid id
	from pg_catalog.pg_description D
	where D.classoid in (
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
2024-12-09 08:12:54.210 UTC [46] LOG:  duration: 1.065 ms
2024-12-09 08:12:54.238 UTC [46] LOG:  duration: 0.173 ms
2024-12-09 08:12:54.238 UTC [46] LOG:  duration: 0.096 ms
2024-12-09 08:12:54.238 UTC [46] LOG:  execute <unnamed>: select pg_catalog.age($1::varchar::xid) as database_age
2024-12-09 08:12:54.238 UTC [46] DETAIL:  parameters: $1 = '0'
2024-12-09 08:12:54.238 UTC [46] LOG:  duration: 0.022 ms
2024-12-09 08:12:54.262 UTC [46] LOG:  duration: 2.299 ms
2024-12-09 08:12:54.264 UTC [46] LOG:  duration: 1.804 ms
2024-12-09 08:12:54.264 UTC [46] LOG:  execute <unnamed>: select A.oid as access_method_id,
	       A.xmin as state_number,
	       A.amname as access_method_name
	       ,
	       A.amhandler::oid as handler_id,
	       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
	       A.amtype as access_method_type
	       
	from pg_am A
	  join pg_proc P on A.amhandler::oid = P.oid
	  join pg_namespace N on P.pronamespace = N.oid
	  
	where pg_catalog.age(A.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:12:54.264 UTC [46] DETAIL:  parameters: $1 = '0'
2024-12-09 08:12:54.264 UTC [46] LOG:  duration: 0.496 ms
2024-12-09 08:12:54.295 UTC [46] LOG:  duration: 0.509 ms
2024-12-09 08:12:54.297 UTC [46] LOG:  duration: 1.579 ms
2024-12-09 08:12:54.297 UTC [46] LOG:  execute <unnamed>: select fdw.oid as id,
	       fdw.xmin as state_number,
	       fdw.fdwname as name,
	       pr.proname as handler,
	       nspc.nspname as handler_schema,
	       pr2.proname as validator,
	       nspc2.nspname as validator_schema,
	       fdw.fdwoptions as options,
	       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
	from pg_catalog.pg_foreign_data_wrapper fdw
	     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
	     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
	     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
	     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
	  where pg_catalog.age(fdw.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:12:54.297 UTC [46] DETAIL:  parameters: $1 = '0'
2024-12-09 08:12:54.297 UTC [46] LOG:  duration: 0.065 ms
2024-12-09 08:12:54.317 UTC [46] LOG:  duration: 0.365 ms
2024-12-09 08:12:54.317 UTC [46] LOG:  duration: 0.239 ms
2024-12-09 08:12:54.317 UTC [46] LOG:  execute <unnamed>: select srv.oid as id,
	       srv.srvfdw as fdw_id,
	       srv.xmin as state_number,
	       srv.srvname as name,
	       srv.srvtype as type,
	       srv.srvversion as version,
	       srv.srvoptions as options,
	       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
	from pg_catalog.pg_foreign_server srv
	  where pg_catalog.age(srv.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:12:54.317 UTC [46] DETAIL:  parameters: $1 = '0'
2024-12-09 08:12:54.317 UTC [46] LOG:  duration: 0.043 ms
2024-12-09 08:12:54.345 UTC [46] LOG:  duration: 0.494 ms
2024-12-09 08:12:54.345 UTC [46] LOG:  duration: 0.567 ms
2024-12-09 08:12:54.345 UTC [46] LOG:  execute <unnamed>: select pg_extension.oid as id,
	       pg_extension.xmin as state_number,
	       extname as name,
	       extversion as version,
	       extnamespace as schema_id,
	       nspname as schema_name,
	       array(select target
	             from pg_extension_update_paths(extname)
	             where source = extversion and path is not null) as available_updates
	from pg_catalog.pg_extension
	  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
	where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:12:54.345 UTC [46] DETAIL:  parameters: $1 = '0'
2024-12-09 08:12:54.348 UTC [46] LOG:  duration: 2.729 ms
2024-12-09 08:12:54.357 UTC [46] LOG:  duration: 0.132 ms
2024-12-09 08:12:54.357 UTC [46] LOG:  duration: 0.285 ms
2024-12-09 08:12:54.357 UTC [46] LOG:  execute <unnamed>: SELECT e.typdelim FROM pg_catalog.pg_type t, pg_catalog.pg_type e WHERE t.oid = $1 and t.typelem = e.oid
2024-12-09 08:12:54.357 UTC [46] DETAIL:  parameters: $1 = '1009'
2024-12-09 08:12:54.357 UTC [46] LOG:  duration: 0.063 ms
2024-12-09 08:12:54.372 UTC [46] LOG:  duration: 0.482 ms
2024-12-09 08:12:54.372 UTC [46] LOG:  duration: 0.145 ms
2024-12-09 08:12:54.372 UTC [46] LOG:  execute <unnamed>: select D.objoid id, case
	    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
	    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
	    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
	    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
	    
	  end as kind,
	  D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	where classoid in (
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
	and pg_catalog.age(D.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:12:54.372 UTC [46] DETAIL:  parameters: $1 = '0'
2024-12-09 08:12:54.373 UTC [46] LOG:  duration: 0.706 ms
2024-12-09 08:12:54.395 UTC [46] LOG:  duration: 0.710 ms
2024-12-09 08:12:54.397 UTC [46] LOG:  duration: 1.291 ms
2024-12-09 08:12:54.397 UTC [46] LOG:  execute <unnamed>: select 'sequence' as dependent_kind,
	       'table' as owner_kind,
	       D.objid as dependent_id,
	       D.refobjid as owner_id,
	       D.refobjsubid as owner_subobject_id
	from pg_depend D
	  join pg_class C_SEQ on D.objid = C_SEQ.oid
	  join pg_class C_TAB on D.refobjid = C_TAB.oid
	where C_SEQ.relkind = 'S'
	  and C_TAB.relkind = 'r'
	  and D.refobjsubid <> 0
	  and (D.deptype = 'a' or D.deptype = 'i')
2024-12-09 08:12:54.404 UTC [46] LOG:  duration: 7.143 ms
2024-12-09 08:12:54.442 UTC [46] LOG:  duration: 0.110 ms
2024-12-09 08:12:54.442 UTC [46] LOG:  duration: 0.013 ms
2024-12-09 08:12:54.442 UTC [46] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:12:54.442 UTC [46] LOG:  duration: 0.026 ms
2024-12-09 08:13:11.359 UTC [48] LOG:  connection received: host=172.18.0.1 port=40004
2024-12-09 08:13:11.389 UTC [48] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:13:11.411 UTC [48] LOG:  duration: 0.085 ms
2024-12-09 08:13:11.411 UTC [48] LOG:  duration: 0.006 ms
2024-12-09 08:13:11.411 UTC [48] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:13:11.411 UTC [48] LOG:  duration: 0.014 ms
2024-12-09 08:13:11.412 UTC [48] LOG:  duration: 0.021 ms
2024-12-09 08:13:11.412 UTC [48] LOG:  duration: 0.007 ms
2024-12-09 08:13:11.412 UTC [48] LOG:  execute <unnamed>: SET application_name = ''
2024-12-09 08:13:11.412 UTC [48] LOG:  duration: 0.026 ms
2024-12-09 08:13:11.448 UTC [48] LOG:  duration: 0.185 ms
2024-12-09 08:13:11.448 UTC [48] LOG:  duration: 0.047 ms
2024-12-09 08:13:11.448 UTC [48] LOG:  execute <unnamed>: select version()
2024-12-09 08:13:11.448 UTC [48] LOG:  duration: 0.031 ms
2024-12-09 08:13:11.478 UTC [48] LOG:  duration: 0.085 ms
2024-12-09 08:13:11.478 UTC [48] LOG:  duration: 0.006 ms
2024-12-09 08:13:11.478 UTC [48] LOG:  execute <unnamed>: SET application_name = 'IntelliJ IDEA 2024.3'
2024-12-09 08:13:11.478 UTC [48] LOG:  duration: 0.015 ms
2024-12-09 08:13:11.563 UTC [48] LOG:  duration: 0.018 ms
2024-12-09 08:13:11.563 UTC [48] LOG:  duration: 0.005 ms
2024-12-09 08:13:11.606 UTC [48] LOG:  duration: 0.170 ms
2024-12-09 08:13:11.606 UTC [48] LOG:  duration: 0.034 ms
2024-12-09 08:13:11.606 UTC [48] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2024-12-09 08:13:11.606 UTC [48] LOG:  duration: 0.031 ms
2024-12-09 08:13:11.682 UTC [48] LOG:  duration: 0.085 ms
2024-12-09 08:13:11.682 UTC [48] LOG:  duration: 0.031 ms
2024-12-09 08:13:11.682 UTC [48] LOG:  execute <unnamed>: select current_database(), current_schema(), current_user
2024-12-09 08:13:11.682 UTC [48] LOG:  duration: 0.013 ms
2024-12-09 08:13:11.746 UTC [48] LOG:  duration: 0.314 ms
2024-12-09 08:13:11.747 UTC [48] LOG:  duration: 0.043 ms
2024-12-09 08:13:11.747 UTC [48] LOG:  execute <unnamed>: select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
2024-12-09 08:13:11.747 UTC [48] LOG:  duration: 0.088 ms
2024-12-09 08:13:11.820 UTC [48] LOG:  duration: 0.783 ms
2024-12-09 08:13:11.821 UTC [48] LOG:  duration: 0.349 ms
2024-12-09 08:13:11.821 UTC [48] LOG:  execute <unnamed>: select L.transactionid::varchar::bigint as transaction_id
	from pg_catalog.pg_locks L
	where L.transactionid is not null
	order by pg_catalog.age(L.transactionid) desc
	limit 1
2024-12-09 08:13:11.821 UTC [48] LOG:  duration: 0.110 ms
2024-12-09 08:13:11.839 UTC [48] LOG:  duration: 0.422 ms
2024-12-09 08:13:11.840 UTC [48] LOG:  duration: 0.056 ms
2024-12-09 08:13:11.840 UTC [48] LOG:  execute <unnamed>: select case
	  when pg_catalog.pg_is_in_recovery()
	    then null
	  else
	    (pg_catalog.txid_current() % 4294967296)::varchar::bigint
	  end as current_txid
2024-12-09 08:13:11.840 UTC [48] LOG:  duration: 0.024 ms
2024-12-09 08:13:11.858 UTC [48] LOG:  duration: 0.379 ms
2024-12-09 08:13:11.859 UTC [48] LOG:  duration: 0.378 ms
2024-12-09 08:13:11.859 UTC [48] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       datistemplate as is_template,
	       datallowconn as allow_connections,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2024-12-09 08:13:11.859 UTC [48] LOG:  duration: 0.090 ms
2024-12-09 08:13:11.884 UTC [48] LOG:  duration: 0.060 ms
2024-12-09 08:13:11.884 UTC [48] LOG:  duration: 0.006 ms
2024-12-09 08:13:11.884 UTC [48] LOG:  execute <unnamed>: show DateStyle
2024-12-09 08:13:11.884 UTC [48] LOG:  duration: 0.026 ms
2024-12-09 08:13:11.898 UTC [48] LOG:  duration: 1.088 ms
2024-12-09 08:13:11.898 UTC [48] LOG:  duration: 0.411 ms
2024-12-09 08:13:11.898 UTC [48] LOG:  execute <unnamed>: select name, is_dst from pg_catalog.pg_timezone_names
	union distinct
	select abbrev as name, is_dst from pg_catalog.pg_timezone_abbrevs
2024-12-09 08:13:12.026 UTC [48] LOG:  duration: 127.877 ms
2024-12-09 08:13:12.068 UTC [48] LOG:  duration: 0.744 ms
2024-12-09 08:13:12.069 UTC [48] LOG:  duration: 0.665 ms
2024-12-09 08:13:12.069 UTC [48] LOG:  execute <unnamed>: select R.oid::bigint as role_id, rolname as role_name,
	  rolsuper is_super, rolinherit is_inherit,
	  rolcreaterole can_createrole, rolcreatedb can_createdb,
	  rolcanlogin can_login, rolreplication /* false */ is_replication,
	  rolconnlimit conn_limit, rolvaliduntil valid_until,
	  rolbypassrls /* false */ bypass_rls, rolconfig config,
	  D.description
	from pg_catalog.pg_roles R
	  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
2024-12-09 08:13:12.070 UTC [48] LOG:  duration: 0.197 ms
2024-12-09 08:13:12.094 UTC [48] LOG:  duration: 0.387 ms
2024-12-09 08:13:12.096 UTC [48] LOG:  duration: 1.710 ms
2024-12-09 08:13:12.096 UTC [48] LOG:  execute <unnamed>: select member id, roleid role_id, admin_option
	          from pg_catalog.pg_auth_members order by id, roleid::text
2024-12-09 08:13:12.097 UTC [48] LOG:  duration: 0.576 ms
2024-12-09 08:13:12.124 UTC [48] LOG:  duration: 1.560 ms
2024-12-09 08:13:12.125 UTC [48] LOG:  duration: 0.871 ms
2024-12-09 08:13:12.125 UTC [48] LOG:  execute <unnamed>: select T.oid::bigint as id, T.spcname as name,
	       T.xmin as state_number, pg_catalog.pg_get_userbyid(T.spcowner) as owner,
	       pg_catalog.pg_tablespace_location(T.oid) /* null */ as location,
	       T.spcoptions /* null */ as options,
	       D.description as comment
	from pg_catalog.pg_tablespace T
	  left join pg_catalog.pg_shdescription D on D.objoid = T.oid
	--  where pg_catalog.age(T.xmin) <= #TXAGE
2024-12-09 08:13:12.125 UTC [48] LOG:  duration: 0.051 ms
2024-12-09 08:13:12.140 UTC [48] LOG:  duration: 1.093 ms
2024-12-09 08:13:12.141 UTC [48] LOG:  duration: 1.206 ms
2024-12-09 08:13:12.141 UTC [48] LOG:  execute <unnamed>: SELECT typinput='pg_catalog.array_in'::regproc as is_array, typtype, typname, pg_type.oid   FROM pg_catalog.pg_type   LEFT JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE pg_type.oid = $1  ORDER BY sp.r, pg_type.oid DESC
2024-12-09 08:13:12.141 UTC [48] DETAIL:  parameters: $1 = '28'
2024-12-09 08:13:12.142 UTC [48] LOG:  duration: 0.104 ms
2024-12-09 08:13:12.159 UTC [48] LOG:  duration: 0.208 ms
2024-12-09 08:13:12.159 UTC [48] LOG:  duration: 0.184 ms
2024-12-09 08:13:12.159 UTC [48] LOG:  execute <unnamed>: select T.oid as object_id,
	                 T.spcacl as acl
	          from pg_catalog.pg_tablespace T 
	          union all
	          select T.oid as object_id,
	                 T.datacl as acl
	          from pg_catalog.pg_database T 
2024-12-09 08:13:12.159 UTC [48] LOG:  duration: 0.044 ms
2024-12-09 08:13:12.168 UTC [48] LOG:  duration: 0.305 ms
2024-12-09 08:13:12.168 UTC [48] LOG:  duration: 0.334 ms
2024-12-09 08:13:12.168 UTC [48] LOG:  execute <unnamed>: SELECT typinput='pg_catalog.array_in'::regproc as is_array, typtype, typname, pg_type.oid   FROM pg_catalog.pg_type   LEFT JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE pg_type.oid = $1  ORDER BY sp.r, pg_type.oid DESC
2024-12-09 08:13:12.168 UTC [48] DETAIL:  parameters: $1 = '1034'
2024-12-09 08:13:12.168 UTC [48] LOG:  duration: 0.087 ms
2024-12-09 08:13:12.170 UTC [48] LOG:  duration: 0.244 ms
2024-12-09 08:13:12.171 UTC [48] LOG:  duration: 0.249 ms
2024-12-09 08:13:12.171 UTC [48] LOG:  execute <unnamed>: SELECT e.typdelim FROM pg_catalog.pg_type t, pg_catalog.pg_type e WHERE t.oid = $1 and t.typelem = e.oid
2024-12-09 08:13:12.171 UTC [48] DETAIL:  parameters: $1 = '1034'
2024-12-09 08:13:12.171 UTC [48] LOG:  duration: 0.033 ms
2024-12-09 08:13:12.173 UTC [48] LOG:  duration: 0.265 ms
2024-12-09 08:13:12.174 UTC [48] LOG:  duration: 0.407 ms
2024-12-09 08:13:12.174 UTC [48] LOG:  execute <unnamed>: SELECT e.oid, n.nspname = ANY(current_schemas(true)), n.nspname, e.typname FROM pg_catalog.pg_type t JOIN pg_catalog.pg_type e ON t.typelem = e.oid JOIN pg_catalog.pg_namespace n ON t.typnamespace = n.oid WHERE t.oid = $1
2024-12-09 08:13:12.174 UTC [48] DETAIL:  parameters: $1 = '1034'
2024-12-09 08:13:12.174 UTC [48] LOG:  duration: 0.049 ms
2024-12-09 08:13:12.175 UTC [48] LOG:  duration: 0.234 ms
2024-12-09 08:13:12.176 UTC [48] LOG:  duration: 0.342 ms
2024-12-09 08:13:12.176 UTC [48] LOG:  execute <unnamed>: SELECT typinput='pg_catalog.array_in'::regproc as is_array, typtype, typname, pg_type.oid   FROM pg_catalog.pg_type   LEFT JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE pg_type.oid = $1  ORDER BY sp.r, pg_type.oid DESC
2024-12-09 08:13:12.176 UTC [48] DETAIL:  parameters: $1 = '1033'
2024-12-09 08:13:12.176 UTC [48] LOG:  duration: 0.076 ms
2024-12-09 08:13:12.202 UTC [48] LOG:  duration: 0.332 ms
2024-12-09 08:13:12.202 UTC [48] LOG:  duration: 0.432 ms
2024-12-09 08:13:12.202 UTC [48] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	order by case when nspname = pg_catalog.current_schema() then -1::bigint else N.oid::bigint end
2024-12-09 08:13:12.203 UTC [48] LOG:  duration: 0.508 ms
2024-12-09 08:13:12.219 UTC [48] LOG:  duration: 0.233 ms
2024-12-09 08:13:12.220 UTC [48] LOG:  duration: 0.330 ms
2024-12-09 08:13:12.220 UTC [48] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	order by case when nspname = pg_catalog.current_schema() then -1::bigint else N.oid::bigint end
2024-12-09 08:13:12.220 UTC [48] LOG:  duration: 0.086 ms
2024-12-09 08:13:12.234 UTC [48] LOG:  duration: 0.335 ms
2024-12-09 08:13:12.235 UTC [48] LOG:  duration: 0.189 ms
2024-12-09 08:13:12.235 UTC [48] LOG:  execute <unnamed>: select usesuper
	from pg_user
	where usename = current_user
2024-12-09 08:13:12.235 UTC [48] LOG:  duration: 0.038 ms
2024-12-09 08:13:12.248 UTC [48] LOG:  duration: 0.224 ms
2024-12-09 08:13:12.249 UTC [48] LOG:  duration: 0.910 ms
2024-12-09 08:13:12.249 UTC [48] LOG:  execute <unnamed>: select t.oid as id,
	       t.xmin as state_number,
	       t.evtname as name,
	       t.evtevent as event,
	       t.evtfoid as routine_id,
	       pg_catalog.pg_get_userbyid(t.evtowner) as owner,
	       t.evttags as tags,
	       case when t.evtenabled = 'D' then 1 else 0 end as is_disabled
	from pg_catalog.pg_event_trigger t
	--  where pg_catalog.age(t.xmin) <= #TXAGE
2024-12-09 08:13:12.249 UTC [48] LOG:  duration: 0.015 ms
2024-12-09 08:13:12.260 UTC [48] LOG:  duration: 0.340 ms
2024-12-09 08:13:12.261 UTC [48] LOG:  duration: 0.695 ms
2024-12-09 08:13:12.261 UTC [48] LOG:  execute <unnamed>: select fdw.oid as id,
	       fdw.xmin as state_number,
	       fdw.fdwname as name,
	       pr.proname as handler,
	       nspc.nspname as handler_schema,
	       pr2.proname as validator,
	       nspc2.nspname as validator_schema,
	       fdw.fdwoptions as options,
	       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
	from pg_catalog.pg_foreign_data_wrapper fdw
	     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
	     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
	     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
	     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
	  --  where pg_catalog.age(fdw.xmin) <= #TXAGE
2024-12-09 08:13:12.261 UTC [48] LOG:  duration: 0.040 ms
2024-12-09 08:13:12.275 UTC [48] LOG:  duration: 0.275 ms
2024-12-09 08:13:12.276 UTC [48] LOG:  duration: 0.150 ms
2024-12-09 08:13:12.276 UTC [48] LOG:  execute <unnamed>: select srv.oid as id,
	       srv.srvfdw as fdw_id,
	       srv.xmin as state_number,
	       srv.srvname as name,
	       srv.srvtype as type,
	       srv.srvversion as version,
	       srv.srvoptions as options,
	       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
	from pg_catalog.pg_foreign_server srv
	  --  where pg_catalog.age(srv.xmin) <= #TXAGE
2024-12-09 08:13:12.276 UTC [48] LOG:  duration: 0.020 ms
2024-12-09 08:13:12.290 UTC [48] LOG:  duration: 0.174 ms
2024-12-09 08:13:12.291 UTC [48] LOG:  duration: 0.201 ms
2024-12-09 08:13:12.291 UTC [48] LOG:  execute <unnamed>: select oid as id,
	       umserver as server_id,
	       case when umuser = 0 then null else pg_catalog.pg_get_userbyid(umuser) end as user,
	       umoptions as options
	from pg_catalog.pg_user_mapping
	--  where pg_catalog.age(xmin) <= #TXAGE
	order by server_id
2024-12-09 08:13:12.291 UTC [48] LOG:  duration: 0.033 ms
2024-12-09 08:13:12.304 UTC [48] LOG:  duration: 0.309 ms
2024-12-09 08:13:12.305 UTC [48] LOG:  duration: 0.532 ms
2024-12-09 08:13:12.305 UTC [48] LOG:  execute <unnamed>: select A.oid as access_method_id,
	       A.xmin as state_number,
	       A.amname as access_method_name
	       ,
	       A.amhandler::oid as handler_id,
	       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
	       A.amtype as access_method_type
	       
	from pg_am A
	  join pg_proc P on A.amhandler::oid = P.oid
	  join pg_namespace N on P.pronamespace = N.oid
	  
	--  where pg_catalog.age(A.xmin) <= #TXAGE
2024-12-09 08:13:12.305 UTC [48] LOG:  duration: 0.712 ms
2024-12-09 08:13:12.328 UTC [48] LOG:  duration: 1.763 ms
2024-12-09 08:13:12.328 UTC [48] LOG:  duration: 0.549 ms
2024-12-09 08:13:12.328 UTC [48] LOG:  execute <unnamed>: select E.oid        as id,
	       E.xmin       as state_number,
	       extname      as name,
	       extversion   as version,
	       extnamespace as schema_id,
	       nspname      as schema_name
	       ,
	       array(select unnest
	             from unnest(available_versions)
	             where unnest > extversion) as available_updates
	       
	from pg_catalog.pg_extension E
	       join pg_namespace N on E.extnamespace = N.oid
	       left join (select name, array_agg(version) as available_versions
	                  from pg_available_extension_versions()
	                  group by name) V on E.extname = V.name
	       
	--  where pg_catalog.age(E.xmin) <= #TXAGE
2024-12-09 08:13:12.351 UTC [48] LOG:  duration: 22.593 ms
2024-12-09 08:13:12.362 UTC [48] LOG:  duration: 0.379 ms
2024-12-09 08:13:12.363 UTC [48] LOG:  duration: 1.190 ms
2024-12-09 08:13:12.363 UTC [48] LOG:  execute <unnamed>: select l.oid as id, l.xmin state_number, lanname as name, lanpltrusted as trusted,
	       h.proname as handler, hs.nspname as handlerSchema,
	       i.proname as inline, isc.nspname as inlineSchema,
	       v.proname as validator, vs.nspname as validatorSchema
	from pg_catalog.pg_language l
	    left join pg_catalog.pg_proc h on h.oid = lanplcallfoid
	    left join pg_catalog.pg_namespace hs on hs.oid = h.pronamespace
	    left join pg_catalog.pg_proc i on i.oid = laninline
	    left join pg_catalog.pg_namespace isc on isc.oid = i.pronamespace
	    left join pg_catalog.pg_proc v on v.oid = lanvalidator
	    left join pg_catalog.pg_namespace vs on vs.oid = v.pronamespace
	--  where pg_catalog.age(l.xmin) <= #TXAGE
	order by lanname
2024-12-09 08:13:12.364 UTC [48] LOG:  duration: 0.510 ms
2024-12-09 08:13:12.380 UTC [48] LOG:  duration: 0.387 ms
2024-12-09 08:13:12.380 UTC [48] LOG:  duration: 0.109 ms
2024-12-09 08:13:12.380 UTC [48] LOG:  execute <unnamed>: select D.objoid id, case
	    when 'pg_catalog.pg_event_trigger'::regclass = classoid then 'T'
	    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
	    when 'pg_catalog.pg_cast'::regclass = classoid then 'C'
	    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
	    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
	    when 'pg_catalog.pg_language'::regclass = classoid then 'L'
	    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
	    
	  end as kind,
	  D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	where classoid in (
	  'pg_catalog.pg_event_trigger'::regclass,
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_cast'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass,
	  'pg_catalog.pg_language'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
	--  and pg_catalog.age(D.xmin) <= #TXAGE
2024-12-09 08:13:12.381 UTC [48] LOG:  duration: 0.570 ms
2024-12-09 08:13:12.399 UTC [48] LOG:  duration: 0.215 ms
2024-12-09 08:13:12.399 UTC [48] LOG:  duration: 0.166 ms
2024-12-09 08:13:12.399 UTC [48] LOG:  execute <unnamed>: select T.oid as object_id,
	                 T.fdwacl as acl
	          from pg_catalog.pg_foreign_data_wrapper T 
	          union all
	          select T.oid as object_id,
	                 T.lanacl as acl
	          from pg_catalog.pg_language T 
	          union all
	          select T.oid as object_id,
	                 T.nspacl as acl
	          from pg_catalog.pg_namespace T 
	          union all
	          select T.oid as object_id,
	                 T.srvacl as acl
	          from pg_catalog.pg_foreign_server T 
	          
2024-12-09 08:13:12.399 UTC [48] LOG:  duration: 0.045 ms
2024-12-09 08:13:12.415 UTC [48] LOG:  duration: 0.354 ms
2024-12-09 08:13:12.417 UTC [48] LOG:  duration: 2.166 ms
2024-12-09 08:13:12.417 UTC [48] LOG:  execute <unnamed>: select C.oid,
	       C.xmin as state_number,
	       C.castsource as castsource_id,
	       pg_catalog.quote_ident(SN.nspname) || '.' || pg_catalog.quote_ident(S.typname) as castsource_name,
	       C.casttarget as casttarget_id,
	       pg_catalog.quote_ident(TN.nspname) || '.' || pg_catalog.quote_ident(T.typname) as casttarget_name,
	       C.castfunc as castfunc_id,
	       pg_catalog.quote_ident(FN.nspname) || '.' || pg_catalog.quote_ident(F.proname) as castfunc_name,
	       C.castcontext,
	       C.castmethod
	from pg_cast C
	     left outer join pg_proc F on C.castfunc::oid = F.oid
	     left outer join pg_namespace FN on F.pronamespace = FN.oid
	     join pg_type S on C.castsource::oid = S.oid
	     join pg_namespace SN on S.typnamespace = SN.oid
	     join pg_type T on C.casttarget::oid = T.oid
	     join pg_namespace TN on T.typnamespace = TN.oid
	--  where pg_catalog.age(C.xmin) <= #TXAGE
2024-12-09 08:13:12.423 UTC [48] LOG:  duration: 5.353 ms
2024-12-09 08:13:12.465 UTC [48] LOG:  duration: 0.267 ms
2024-12-09 08:13:12.465 UTC [48] LOG:  duration: 0.269 ms
2024-12-09 08:13:12.465 UTC [48] LOG:  execute <unnamed>: select E.oid   as extension_id,
	       D.objid as member_id
	from pg_extension E join pg_depend D
	  on E.oid = D.refobjid and
	     D.refclassid = 'pg_extension'::regclass::oid
	where D.deptype = 'e'
	order by extension_id
2024-12-09 08:13:12.466 UTC [48] LOG:  duration: 0.861 ms
2024-12-09 08:13:12.508 UTC [48] LOG:  duration: 1.802 ms
2024-12-09 08:13:12.533 UTC [48] LOG:  duration: 25.038 ms
2024-12-09 08:13:12.533 UTC [48] LOG:  execute <unnamed>: with saved_age as (select greatest(pg_catalog.age($1::varchar::xid), pg_catalog.age($2::varchar::xid)) as "value")
	     select bool_or(C.last_tx <= SA."value") as has_changes from
	     (
	       (select min(least(pg_catalog.age(T.xmin), pg_catalog.age(D.xmin))) as last_tx
	    from pg_catalog.pg_type T
	      left join pg_catalog.pg_description D on T.oid = D.objoid
	    where T.typnamespace = $3::oid)
	union all
	(select min(least(pg_catalog.age(T.xmin), pg_catalog.age(D.xmin))) as last_tx
	    from pg_catalog.pg_class T
	      left join pg_catalog.pg_description D on T.oid = D.objoid
	    where T.relnamespace = $4::oid)
	union all
	(select min(least(pg_catalog.age(T.xmin), pg_catalog.age(D.xmin))) as last_tx
	    from pg_catalog.pg_proc T
	      left join pg_catalog.pg_description D on T.oid = D.objoid
	    where T.pronamespace = $5::oid)
	union all
	(select min(least(pg_catalog.age(T.xmin), pg_catalog.age(D.xmin))) as last_tx
	    from pg_catalog.pg_operator T
	      left join pg_catalog.pg_description D on T.oid = D.objoid
	    where T.oprnamespace = $6::oid)
	union all
	(select min(least(pg_catalog.age(T.xmin), pg_catalog.age(D.xmin))) as last_tx
	    from pg_catalog.pg_constraint T
	      left join pg_catalog.pg_description D on T.oid = D.objoid
	    where T.connamespace = $7::oid)
	union all
	select min(pg_catalog.age(A.xmin)) as last_tx
	        from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
	        where K.relnamespace = $8::oid
	union all
	(select min(pg_catalog.age(IX.xmin)) as last_tx
	        from pg_catalog.pg_index IX join pg_catalog.pg_class IC on IC.oid = IX.indrelid
	        where IC.relnamespace = $9::oid)
	union all
	(select min(least(pg_catalog.age(RU.xmin), pg_catalog.age(D.xmin))) as last_tx
	        from pg_catalog.pg_rewrite RU join pg_catalog.pg_class RC on RC.oid = RU.ev_class
	          left join pg_catalog.pg_description D on D.objoid = RU.oid
	        where RC.relnamespace = $10::oid)
	union all
	(select min(least(pg_catalog.age(TG.xmin), pg_catalog.age(D.xmin))) as last_tx
	        from pg_catalog.pg_trigger TG join pg_catalog.pg_class TC on TC.oid = TG.tgrelid
	          left join pg_catalog.pg_description D on D.objoid = TG.oid
	        where TC.relnamespace = $11::oid)
	union all
	(select min(least(pg_catalog.age(T.xmin), pg_catalog.age(D.xmin))) as last_tx
	    from pg_catalog.pg_opclass T
	      left join pg_catalog.pg_description D on T.oid = D.objoid
	    where T.opcnamespace = $12::oid)
	union all
	(select min(least(pg_catalog.age(T.xmin), pg_catalog.age(D.xmin))) as last_tx
	    from pg_catalog.pg_opfamily T
	      left join pg_catalog.pg_description D on T.oid = D.objoid
	    where T.opfnamespace = $13::oid)
	union all
	(select min(pg_catalog.age(O.xmin)) from pg_catalog.pg_amop O
	       left join pg_catalog.pg_opfamily F on O.amopfamily = F.oid
	       left join pg_catalog.pg_depend D on D.classid = 'pg_amop'::regclass and O.oid = D.objid and D.objsubid = 0
	       left join pg_catalog.pg_opclass C on D.refclassid = 'pg_opclass'::regclass and C.oid = D.refobjid and D.refobjsubid = 0
	       where C.opcnamespace = $14 or C.opcnamespace is null and F.opfnamespace = $15)
	union all
	(select min(pg_catalog.age(P.xmin)) from pg_catalog.pg_amproc P
	       left join pg_catalog.pg_opfamily F on P.amprocfamily = F.oid
	       where F.opfnamespace = $16)
	union all
	(select min(pg_catalog.age(E.xmin)) as last_tx
	        from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
	        where T.typnamespace = $17::oid)
	union all
	(select min(least(pg_catalog.age(T.xmin), pg_catalog.age(D.xmin))) as last_tx
	    from pg_catalog.pg_collation T
	      left join pg_catalog.pg_description D on T.oid = D.objoid
	    where T.collnamespace = $18::oid)
	union all
	(select min(least(pg_catalog.age(P.xmin), pg_catalog.age(D.xmin))) as last_tx
	        from pg_catalog.pg_policy P join pg_catalog.pg_class C on C.oid = P.polrelid
	          left join pg_catalog.pg_description D on D.objoid = P.oid
	        where C.relnamespace = $19::oid)
	     ) C, saved_age SA
	     where sa.value >= 0
	    
2024-12-09 08:13:12.533 UTC [48] DETAIL:  parameters: $1 = '0', $2 = '524', $3 = '2200', $4 = '2200', $5 = '2200', $6 = '2200', $7 = '2200', $8 = '2200', $9 = '2200', $10 = '2200', $11 = '2200', $12 = '2200', $13 = '2200', $14 = '2200', $15 = '2200', $16 = '2200', $17 = '2200', $18 = '2200', $19 = '2200'
2024-12-09 08:13:12.536 UTC [48] LOG:  duration: 2.607 ms
2024-12-09 08:13:12.552 UTC [48] LOG:  duration: 0.247 ms
2024-12-09 08:13:12.552 UTC [48] LOG:  duration: 0.112 ms
2024-12-09 08:13:12.552 UTC [48] LOG:  execute <unnamed>: select oid
	from pg_catalog.pg_class
	where relkind = 'S'
	  and relnamespace = $1::oid
2024-12-09 08:13:12.552 UTC [48] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:12.552 UTC [48] LOG:  duration: 0.090 ms
2024-12-09 08:13:12.567 UTC [48] LOG:  duration: 0.331 ms
2024-12-09 08:13:12.567 UTC [48] LOG:  duration: 0.408 ms
2024-12-09 08:13:12.568 UTC [48] LOG:  execute <unnamed>: select cls.xmin as sequence_state_number,
	       sq.seqrelid as sequence_id,
	       cls.relname as sequence_name,
	       pg_catalog.format_type(sq.seqtypid, null) as data_type,
	       sq.seqstart as start_value,
	       sq.seqincrement as inc_value,
	       sq.seqmin as min_value,
	       sq.seqmax as max_value,
	       sq.seqcache as cache_size,
	       sq.seqcycle as cycle_option,
	       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
	from pg_catalog.pg_sequence sq
	    join pg_class cls on sq.seqrelid = cls.oid
	    where cls.relnamespace = $1::oid
	        and pg_catalog.age(cls.xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647)
2024-12-09 08:13:12.568 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0'
2024-12-09 08:13:12.568 UTC [48] LOG:  duration: 0.165 ms
2024-12-09 08:13:12.582 UTC [48] LOG:  duration: 0.143 ms
2024-12-09 08:13:12.582 UTC [48] LOG:  duration: 0.118 ms
2024-12-09 08:13:12.582 UTC [48] LOG:  execute <unnamed>: select oid
	from pg_catalog.pg_type
	where typnamespace = $1::oid
2024-12-09 08:13:12.582 UTC [48] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:12.582 UTC [48] LOG:  duration: 0.102 ms
2024-12-09 08:13:12.597 UTC [48] LOG:  duration: 0.601 ms
2024-12-09 08:13:12.598 UTC [48] LOG:  duration: 0.766 ms
2024-12-09 08:13:12.598 UTC [48] LOG:  execute <unnamed>: select T.oid as type_id,
	       T.xmin as type_state_number,
	       T.typname as type_name,
	       T.typtype as type_sub_kind,
	       T.typcategory as type_category,
	       T.typrelid as class_id,
	       T.typbasetype as base_type_id,
	       case when T.typtype in ('c','e') then null
	            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
	       T.typndims as dimensions_number,
	       T.typdefault as default_expression,
	       T.typnotnull as mandatory,
	       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
	from pg_catalog.pg_type T
	         left outer join pg_catalog.pg_class C
	             on T.typrelid = C.oid
	where T.typnamespace = $1::oid
	  and pg_catalog.age(T.xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647)
	  and (T.typtype in ('d','e') or
	       C.relkind = 'c'::"char" or
	       (T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A')) or
	       T.typtype = 'p' and not T.typisdefined)
	order by 1
2024-12-09 08:13:12.598 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0'
2024-12-09 08:13:12.598 UTC [48] LOG:  duration: 0.209 ms
2024-12-09 08:13:12.609 UTC [48] LOG:  duration: 0.155 ms
2024-12-09 08:13:12.610 UTC [48] LOG:  duration: 0.112 ms
2024-12-09 08:13:12.610 UTC [48] LOG:  execute <unnamed>: select oid from pg_catalog.pg_class C
	where relkind in ('r', 'm', 'v', 'p', 'f')
	  and relnamespace = $1::oid
2024-12-09 08:13:12.610 UTC [48] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:12.610 UTC [48] LOG:  duration: 0.089 ms
2024-12-09 08:13:12.620 UTC [48] LOG:  duration: 0.368 ms
2024-12-09 08:13:12.622 UTC [48] LOG:  duration: 1.376 ms
2024-12-09 08:13:12.622 UTC [48] LOG:  execute <unnamed>: select T.relkind as table_kind,
	       T.relname as table_name,
	       T.oid as table_id,
	       T.xmin as table_state_number,
	       false /* T.relhasoids */ as table_with_oids,
	       T.reltablespace as tablespace_id,
	       T.reloptions as options,
	       T.relpersistence as persistence,
	       (select pg_catalog.array_agg(inhparent::bigint order by inhseqno)::varchar from pg_catalog.pg_inherits where T.oid = inhrelid) as ancestors,
	       (select pg_catalog.array_agg(inhrelid::bigint order by inhrelid)::varchar from pg_catalog.pg_inherits where T.oid = inhparent) as successors,
	       T.relispartition /* false */ as is_partition,
	       pg_catalog.pg_get_partkeydef(T.oid) /* null */ as partition_key,
	       pg_catalog.pg_get_expr(T.relpartbound, T.oid) /* null */ as partition_expression,
	       T.relam am_id,
	       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
	from pg_catalog.pg_class T
	where relnamespace = $1::oid
	  and relkind in ('r', 'm', 'v', 'f', 'p')
	  and pg_catalog.age(T.xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647)
	order by table_kind, table_id
2024-12-09 08:13:12.622 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0'
2024-12-09 08:13:12.622 UTC [48] LOG:  duration: 0.654 ms
2024-12-09 08:13:12.635 UTC [48] LOG:  duration: 0.257 ms
2024-12-09 08:13:12.636 UTC [48] LOG:  duration: 0.928 ms
2024-12-09 08:13:12.636 UTC [48] LOG:  execute <unnamed>: select ft.ftrelid as table_id,
	       srv.srvname as table_server,
	       ft.ftoptions as table_options,
	       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
	from pg_catalog.pg_foreign_table ft
	     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
	     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
	where cls.relnamespace = $1::oid
	  and pg_catalog.age(ft.xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647)
	order by table_id
2024-12-09 08:13:12.636 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0'
2024-12-09 08:13:12.636 UTC [48] LOG:  duration: 0.079 ms
2024-12-09 08:13:12.645 UTC [48] LOG:  duration: 0.630 ms
2024-12-09 08:13:12.647 UTC [48] LOG:  duration: 1.331 ms
2024-12-09 08:13:12.647 UTC [48] LOG:  execute <unnamed>: with schema_procs as (select prorettype, proargtypes, proallargtypes
	                      from pg_catalog.pg_proc
	                      where pronamespace = $1::oid
	                        and pg_catalog.age(xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647)  ),
	     schema_opers as (select oprleft, oprright, oprresult
	                      from pg_catalog.pg_operator
	                      where oprnamespace = $3::oid
	                        and pg_catalog.age(xmin) <= coalesce(nullif(greatest(pg_catalog.age($4::varchar::xid), -1), -1), 2147483647)  ),
	     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
	                           from pg_catalog.pg_aggregate A
	                           join pg_catalog.pg_proc P
	                             on A.aggfnoid = P.oid
	                           where P.pronamespace = $5::oid
	                           and (pg_catalog.age(A.xmin) <= coalesce(nullif(greatest(pg_catalog.age($6::varchar::xid), -1), -1), 2147483647) or pg_catalog.age(P.xmin) <= coalesce(nullif(greatest(pg_catalog.age($7::varchar::xid), -1), -1), 2147483647)) ),
	     schema_arg_types as ( select prorettype as type_id
	                           from schema_procs
	                           union
	                           select distinct unnest(proargtypes) as type_id
	                           from schema_procs
	                           union
	                           select distinct unnest(proallargtypes) as type_id
	                           from schema_procs
	                           union
	                           select oprleft as type_id
	                           from schema_opers
	                           where oprleft is not null
	                           union
	                           select oprright as type_id
	                           from schema_opers
	                           where oprright is not null
	                           union
	                           select oprresult as type_id
	                           from schema_opers
	                           where oprresult is not null
	                           union
	                           select aggtranstype::oid as type_id
	                           from schema_aggregates
	                           union
	                           select aggmtranstype::oid as type_id
	                           from schema_aggregates
	                           
	                           )
	select type_id, pg_catalog.format_type(type_id, null) as type_spec
	from schema_arg_types
	where type_id <> 0
2024-12-09 08:13:12.647 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0', $3 = '2200', $4 = '0', $5 = '2200', $6 = '0', $7 = '0'
2024-12-09 08:13:12.647 UTC [48] LOG:  duration: 0.535 ms
2024-12-09 08:13:12.656 UTC [48] LOG:  duration: 0.150 ms
2024-12-09 08:13:12.656 UTC [48] LOG:  duration: 0.088 ms
2024-12-09 08:13:12.656 UTC [48] LOG:  execute <unnamed>: select oid
	from pg_catalog.pg_proc
	where prokind != 'a'/* not proisagg*/ and pronamespace = $1::oid
2024-12-09 08:13:12.656 UTC [48] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:12.657 UTC [48] LOG:  duration: 0.394 ms
2024-12-09 08:13:12.665 UTC [48] LOG:  duration: 0.365 ms
2024-12-09 08:13:12.666 UTC [48] LOG:  duration: 1.066 ms
2024-12-09 08:13:12.666 UTC [48] LOG:  execute <unnamed>: with languages as (select oid as lang_oid, lanname as lang
	                   from pg_catalog.pg_language),
	     routines as (select proname as r_name,
	                         prolang as lang_oid,
	                         oid as r_id,
	                         xmin as r_state_number,
	                         proargnames as arg_names,
	                         proargmodes as arg_modes,
	                         proargtypes::int[] as in_arg_types,
	                         proallargtypes::int[] as all_arg_types,
	                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
	                         provariadic as arg_variadic_id,
	                         prorettype as ret_type_id,
	                         proretset as ret_set,
	                         prokind /* case when proiswindow then 'w'
	                                                when proisagg then 'a'
	                                                else 'f'
	                                           end */ as kind,
	                         provolatile as volatile_kind,
	                         proisstrict as is_strict,
	                         prosecdef as is_security_definer,
	                         proconfig as configuration_parameters,
	                         procost as cost,
	                         pg_catalog.pg_get_userbyid(proowner) as "owner",
	                         prorows as rows ,
	                         proleakproof as is_leakproof  ,
	                         proparallel as concurrency_kind 
	                  from pg_catalog.pg_proc
	                  where pronamespace = $1::oid
	                    and not (prokind = 'a') /* proisagg */
	                    and pg_catalog.age(xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647) )
	select *
	from routines natural join languages
2024-12-09 08:13:12.666 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0'
2024-12-09 08:13:12.667 UTC [48] LOG:  duration: 0.197 ms
2024-12-09 08:13:12.677 UTC [48] LOG:  duration: 0.143 ms
2024-12-09 08:13:12.677 UTC [48] LOG:  duration: 0.093 ms
2024-12-09 08:13:12.677 UTC [48] LOG:  execute <unnamed>: select oid
	from pg_catalog.pg_proc
	where prokind = 'a'/* proisagg*/ and pronamespace = $1::oid
2024-12-09 08:13:12.677 UTC [48] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:12.678 UTC [48] LOG:  duration: 0.379 ms
2024-12-09 08:13:12.687 UTC [48] LOG:  duration: 0.375 ms
2024-12-09 08:13:12.688 UTC [48] LOG:  duration: 0.439 ms
2024-12-09 08:13:12.688 UTC [48] LOG:  execute <unnamed>: select P.oid as aggregate_id,
	       P.xmin as state_number,
	       P.proname as aggregate_name,
	       P.proargnames as arg_names,
	       P.proargmodes as arg_modes,
	       P.proargtypes::int[] as in_arg_types,
	       P.proallargtypes::int[] as all_arg_types,
	       A.aggtransfn::oid as transition_function_id,
	       A.aggtransfn::regproc::text as transition_function_name,
	       A.aggtranstype as transition_type,
	       A.aggfinalfn::oid as final_function_id,
	       case when A.aggfinalfn::oid = 0 then null else A.aggfinalfn::regproc::varchar end as final_function_name,
	       case when A.aggfinalfn::oid = 0 then 0 else P.prorettype end as final_return_type,
	       A.agginitval as initial_value,
	       A.aggsortop as sort_operator_id,
	       case when A.aggsortop = 0 then null else A.aggsortop::regoper::varchar end as sort_operator_name,
	       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
	       ,
	       A.aggfinalextra as final_extra,
	       A.aggtransspace as state_size,
	       A.aggmtransfn::oid as moving_transition_id,
	       case when A.aggmtransfn::oid = 0 then null else A.aggmtransfn::regproc::varchar end as moving_transition_name,
	       A.aggminvtransfn::oid as inverse_transition_id,
	       case when A.aggminvtransfn::oid = 0 then null else A.aggminvtransfn::regproc::varchar end as inverse_transition_name,
	       A.aggmtranstype::oid as moving_state_type,
	       A.aggmtransspace as moving_state_size,
	       A.aggmfinalfn::oid as moving_final_id,
	       case when A.aggmfinalfn::oid = 0 then null else A.aggmfinalfn::regproc::varchar end as moving_final_name,
	       A.aggmfinalextra as moving_final_extra,
	       A.aggminitval as moving_initial_value,
	       A.aggkind as aggregate_kind,
	       A.aggnumdirectargs as direct_args
	       
	       ,
	       A.aggcombinefn::oid as combine_function_id,
	       case when A.aggcombinefn::oid = 0 then null else A.aggcombinefn::regproc::varchar end as combine_function_name,
	       A.aggserialfn::oid as serialization_function_id,
	       case when A.aggserialfn::oid = 0 then null else A.aggserialfn::regproc::varchar end as serialization_function_name,
	       A.aggdeserialfn::oid as deserialization_function_id,
	       case when A.aggdeserialfn::oid = 0 then null else A.aggdeserialfn::regproc::varchar end as deserialization_function_name,
	       P.proparallel as concurrency_kind
	       
	from pg_catalog.pg_aggregate A
	join pg_catalog.pg_proc P
	  on A.aggfnoid = P.oid
	where P.pronamespace = $1::oid
	and (pg_catalog.age(A.xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647) or pg_catalog.age(P.xmin) <= coalesce(nullif(greatest(pg_catalog.age($3::varchar::xid), -1), -1), 2147483647))
	order by P.oid
2024-12-09 08:13:12.688 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0', $3 = '0'
2024-12-09 08:13:12.688 UTC [48] LOG:  duration: 0.389 ms
2024-12-09 08:13:12.698 UTC [48] LOG:  duration: 0.144 ms
2024-12-09 08:13:12.698 UTC [48] LOG:  duration: 0.094 ms
2024-12-09 08:13:12.698 UTC [48] LOG:  execute <unnamed>: select oid
	from pg_catalog.pg_operator
	where oprnamespace = $1::oid
2024-12-09 08:13:12.698 UTC [48] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:12.698 UTC [48] LOG:  duration: 0.113 ms
2024-12-09 08:13:12.709 UTC [48] LOG:  duration: 0.223 ms
2024-12-09 08:13:12.709 UTC [48] LOG:  duration: 0.156 ms
2024-12-09 08:13:12.709 UTC [48] LOG:  execute <unnamed>: select O.oid as op_id,
	       O.xmin as state_number,
	       oprname as op_name,
	       oprkind as op_kind,
	       oprleft as arg_left_type_id,
	       oprright as arg_right_type_id,
	       oprresult as arg_result_type_id,
	       oprcode::oid as main_id,
	       oprcode::varchar as main_name,
	       oprrest::oid as restrict_id,
	       oprrest::varchar as restrict_name,
	       oprjoin::oid as join_id,
	       oprjoin::varchar as join_name,
	       oprcom::oid as com_id,
	       oprcom::regoper::varchar as com_name,
	       oprnegate::oid as neg_id,
	       oprnegate::regoper::varchar as neg_name,
	       oprcanmerge as merges,
	       oprcanhash as hashes,
	       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
	from pg_catalog.pg_operator O
	where oprnamespace = $1::oid
	  and pg_catalog.age(xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647)
2024-12-09 08:13:12.709 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0'
2024-12-09 08:13:12.709 UTC [48] LOG:  duration: 0.050 ms
2024-12-09 08:13:12.719 UTC [48] LOG:  duration: 0.126 ms
2024-12-09 08:13:12.719 UTC [48] LOG:  duration: 0.115 ms
2024-12-09 08:13:12.719 UTC [48] LOG:  execute <unnamed>: select oid from pg_catalog.pg_collation
	where collnamespace = $1::oid
2024-12-09 08:13:12.719 UTC [48] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:12.719 UTC [48] LOG:  duration: 0.080 ms
2024-12-09 08:13:12.729 UTC [48] LOG:  duration: 0.221 ms
2024-12-09 08:13:12.729 UTC [48] LOG:  duration: 0.182 ms
2024-12-09 08:13:12.729 UTC [48] LOG:  execute <unnamed>: select oid as id,
	       xmin as state_number,
	       collname as name,
	       collcollate as lc_collate,
	       collctype as lc_ctype,
	       pg_catalog.pg_get_userbyid(collowner) as "owner"
	from pg_catalog.pg_collation
	where collnamespace = $1::oid
	  and pg_catalog.age(xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647)
2024-12-09 08:13:12.729 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0'
2024-12-09 08:13:12.729 UTC [48] LOG:  duration: 0.063 ms
2024-12-09 08:13:12.739 UTC [48] LOG:  duration: 0.083 ms
2024-12-09 08:13:12.740 UTC [48] LOG:  duration: 0.077 ms
2024-12-09 08:13:12.740 UTC [48] LOG:  execute <unnamed>: select oid
	from pg_catalog.pg_opclass
	where opcnamespace = $1::oid
2024-12-09 08:13:12.740 UTC [48] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:12.740 UTC [48] LOG:  duration: 0.037 ms
2024-12-09 08:13:12.749 UTC [48] LOG:  duration: 0.202 ms
2024-12-09 08:13:12.749 UTC [48] LOG:  duration: 0.213 ms
2024-12-09 08:13:12.749 UTC [48] LOG:  execute <unnamed>: select O.oid as id,
	       O.xmin as state_number,
	       opcname as name,
	       opcintype::regtype::varchar as in_type,
	       case when opckeytype = 0 then null else opckeytype::regtype::varchar end as key_type,
	       opcdefault as is_default,
	       opcfamily as family_id,
	       opfname as family,
	       opcmethod as access_method_id,
	       pg_catalog.pg_get_userbyid(O.opcowner) as "owner"
	from pg_catalog.pg_opclass O join pg_catalog.pg_opfamily F on F.oid = opcfamily
	where opcnamespace = $1::oid
	  and pg_catalog.age(O.xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647)
2024-12-09 08:13:12.749 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0'
2024-12-09 08:13:12.749 UTC [48] LOG:  duration: 0.038 ms
2024-12-09 08:13:12.760 UTC [48] LOG:  duration: 0.097 ms
2024-12-09 08:13:12.760 UTC [48] LOG:  duration: 0.088 ms
2024-12-09 08:13:12.760 UTC [48] LOG:  execute <unnamed>: select oid
	from pg_catalog.pg_opfamily
	where opfnamespace = $1::oid
2024-12-09 08:13:12.760 UTC [48] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:12.760 UTC [48] LOG:  duration: 0.037 ms
2024-12-09 08:13:12.769 UTC [48] LOG:  duration: 0.163 ms
2024-12-09 08:13:12.770 UTC [48] LOG:  duration: 0.112 ms
2024-12-09 08:13:12.770 UTC [48] LOG:  execute <unnamed>: select O.oid as id,
	       O.xmin as state_number,
	       opfname as name,
	       opfmethod as access_method_id,
	       pg_catalog.pg_get_userbyid(O.opfowner) as "owner"
	from pg_catalog.pg_opfamily O
	where opfnamespace = $1::oid
	  and pg_catalog.age(xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647)
2024-12-09 08:13:12.770 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0'
2024-12-09 08:13:12.770 UTC [48] LOG:  duration: 0.024 ms
2024-12-09 08:13:12.778 UTC [48] LOG:  duration: 0.150 ms
2024-12-09 08:13:12.778 UTC [48] LOG:  duration: 0.237 ms
2024-12-09 08:13:12.778 UTC [48] LOG:  execute <unnamed>: select pg_amop.oid
	from pg_catalog.pg_amop
	         join pg_catalog.pg_opfamily on pg_opfamily.oid = amopfamily
	where opfnamespace = $1::oid
2024-12-09 08:13:12.778 UTC [48] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:12.778 UTC [48] LOG:  duration: 0.052 ms
2024-12-09 08:13:12.788 UTC [48] LOG:  duration: 0.385 ms
2024-12-09 08:13:12.789 UTC [48] LOG:  duration: 0.938 ms
2024-12-09 08:13:12.789 UTC [48] LOG:  execute <unnamed>: select O.oid as id,
	       O.amopstrategy as strategy,
	       O.amopopr as op_id,
	       O.amopopr::regoperator::varchar as op_sig,
	       O.amopsortfamily /* null */ as sort_family_id,
	       SF.opfname /* null */ as sort_family,
	       O.amopfamily as family_id,
	       C.oid as class_id
	from pg_catalog.pg_amop O
	    left join pg_opfamily F on O.amopfamily = F.oid
	    left join pg_opfamily SF on O.amopsortfamily = SF.oid
	    left join pg_depend D on D.classid = 'pg_amop'::regclass and O.oid = D.objid and D.objsubid = 0
	    left join pg_opclass C on D.refclassid = 'pg_opclass'::regclass and C.oid = D.refobjid and D.refobjsubid = 0
	where C.opcnamespace = $1::oid or C.opcnamespace is null and F.opfnamespace = $2::oid
	  and pg_catalog.age(O.xmin) <= coalesce(nullif(greatest(pg_catalog.age($3::varchar::xid), -1), -1), 2147483647)
	order by C.oid, F.oid
2024-12-09 08:13:12.789 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '2200', $3 = '0'
2024-12-09 08:13:12.790 UTC [48] LOG:  duration: 0.413 ms
2024-12-09 08:13:12.799 UTC [48] LOG:  duration: 0.180 ms
2024-12-09 08:13:12.799 UTC [48] LOG:  duration: 0.263 ms
2024-12-09 08:13:12.799 UTC [48] LOG:  execute <unnamed>: select pg_amproc.oid
	from pg_catalog.pg_amproc
	         join pg_catalog.pg_opfamily on pg_opfamily.oid = amprocfamily
	where opfnamespace = $1::oid
2024-12-09 08:13:12.799 UTC [48] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:12.799 UTC [48] LOG:  duration: 0.040 ms
2024-12-09 08:13:12.812 UTC [48] LOG:  duration: 0.316 ms
2024-12-09 08:13:12.814 UTC [48] LOG:  duration: 1.425 ms
2024-12-09 08:13:12.814 UTC [48] LOG:  execute <unnamed>: select P.oid as id,
	       P.amprocnum as num,
	       P.amproc::oid as proc_id,
	       P.amproc::regprocedure::varchar as proc_sig,
	       P.amproclefttype::regtype::varchar as left_type,
	       P.amprocrighttype::regtype::varchar as right_type,
	       P.amprocfamily as family_id,
	       C.oid as class_id
	from pg_catalog.pg_amproc P
	    left join pg_opfamily F on P.amprocfamily = F.oid
	    left join pg_depend D on D.classid = 'pg_amproc'::regclass and P.oid = D.objid and D.objsubid = 0
	    left join pg_opclass C on D.refclassid = 'pg_opclass'::regclass and C.oid = D.refobjid and D.refobjsubid = 0
	where C.opcnamespace = $1::oid or C.opcnamespace is null and F.opfnamespace = $2::oid
	  and pg_catalog.age(P.xmin) <= coalesce(nullif(greatest(pg_catalog.age($3::varchar::xid), -1), -1), 2147483647)
	order by C.oid, F.oid
2024-12-09 08:13:12.814 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '2200', $3 = '0'
2024-12-09 08:13:12.814 UTC [48] LOG:  duration: 0.334 ms
2024-12-09 08:13:12.824 UTC [48] LOG:  duration: 1.017 ms
2024-12-09 08:13:12.825 UTC [48] LOG:  duration: 1.262 ms
2024-12-09 08:13:12.825 UTC [48] LOG:  execute <unnamed>: with T as ( select distinct
	                  T.oid as table_id, T.relname as table_name
	            from pg_catalog.pg_class T
	                 , pg_catalog.pg_attribute A
	            where T.relnamespace = $1::oid
	              and T.relkind in ('r', 'm', 'v', 'f', 'p')
	              and (pg_catalog.age(A.xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647) or pg_catalog.age(T.xmin) <= coalesce(nullif(greatest(pg_catalog.age($3::varchar::xid), -1), -1), 2147483647))
	              and A.attrelid = T.oid
	            )
	select T.table_id,
	       C.attnum as column_position,
	       C.attname as column_name,
	       C.xmin as column_state_number,
	       C.atttypmod as type_mod,
	       C.attndims as dimensions_number,
	       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
	       C.atttypid as type_id,
	       C.attnotnull as mandatory,
	       pg_catalog.pg_get_expr(D.adbin, T.table_id) /* D.adsrc */ as column_default_expression,
	       not C.attislocal as column_is_inherited,
	       C.attfdwoptions as options,
	       C.attisdropped as column_is_dropped,
	       C.attidentity /* null */ as identity_kind,
	       C.attgenerated /* null */ as generated
	from T
	  join pg_catalog.pg_attribute C on T.table_id = C.attrelid
	  left join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
	where attnum > 0
	order by table_id, attnum
2024-12-09 08:13:12.825 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0', $3 = '0'
2024-12-09 08:13:12.825 UTC [48] LOG:  duration: 0.297 ms
2024-12-09 08:13:12.844 UTC [48] LOG:  duration: 0.205 ms
2024-12-09 08:13:12.844 UTC [48] LOG:  duration: 0.296 ms
2024-12-09 08:13:12.844 UTC [48] LOG:  execute <unnamed>: select IX.indexrelid
	from pg_catalog.pg_index IX,
	     pg_catalog.pg_class IC
	where IC.oid = IX.indrelid
	  and IC.relnamespace = $1::oid
2024-12-09 08:13:12.844 UTC [48] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:12.845 UTC [48] LOG:  duration: 0.192 ms
2024-12-09 08:13:12.861 UTC [48] LOG:  duration: 0.503 ms
2024-12-09 08:13:12.862 UTC [48] LOG:  duration: 1.018 ms
2024-12-09 08:13:12.863 UTC [48] LOG:  execute <unnamed>: select tab.oid               table_id,
	       tab.relkind           table_kind,
	       ind_stor.relname      index_name,
	       ind_head.indexrelid   index_id,
	       ind_stor.xmin         state_number,
	       ind_head.indisunique  is_unique,
	       ind_head.indisprimary is_primary,
	       pg_catalog.pg_get_expr(ind_head.indpred, ind_head.indrelid) as condition,
	       (select pg_catalog.array_agg(inhparent::bigint order by inhseqno)::varchar from pg_catalog.pg_inherits where ind_stor.oid = inhrelid) as ancestors,
	       ind_stor.reltablespace tablespace_id,
	       opcmethod as access_method_id
	from pg_catalog.pg_class tab
	         join pg_catalog.pg_index ind_head
	              on ind_head.indrelid = tab.oid
	         join pg_catalog.pg_class ind_stor
	              on tab.relnamespace = ind_stor.relnamespace and ind_stor.oid = ind_head.indexrelid
	         left join pg_catalog.pg_opclass on pg_opclass.oid = ANY(indclass)
	where tab.relnamespace = $1::oid
	        and tab.relkind in ('r', 'm', 'v', 'p')
	        and ind_stor.relkind in ('i', 'I')
	and pg_catalog.age(ind_stor.xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647)
2024-12-09 08:13:12.863 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0'
2024-12-09 08:13:12.863 UTC [48] LOG:  duration: 0.389 ms
2024-12-09 08:13:12.878 UTC [48] LOG:  duration: 0.698 ms
2024-12-09 08:13:12.879 UTC [48] LOG:  duration: 1.123 ms
2024-12-09 08:13:12.879 UTC [48] LOG:  execute <unnamed>: select ind_head.indexrelid index_id,
	       k col_idx,
	       k <= indnkeyatts /* true */ in_key,
	       ind_head.indkey[k-1] column_position,
	       ind_head.indoption[k-1] column_options,
	       ind_head.indcollation[k-1] /* null */ as collation,
	       colln.nspname /* null */ as collation_schema,
	       collname /* null */ as collation_str,
	       ind_head.indclass[k-1] as opclass,
	       case when opcdefault then null else opcn.nspname end as opclass_schema,
	       case when opcdefault then null else opcname end as opclass_str,
	       case
	           when indexprs is null then null
	           when ind_head.indkey[k-1] = 0 then chr(27) || pg_catalog.pg_get_indexdef(ind_head.indexrelid, k::int, true)
	           else pg_catalog.pg_get_indexdef(ind_head.indexrelid, k::int, true)
	       end as expression,
	       amcanorder can_order
	from pg_catalog.pg_index /* (select *, pg_catalog.generate_subscripts(indkey::int[], 1) + 1 k from pg_catalog.pg_index) */ ind_head
	         join pg_catalog.pg_class ind_stor
	              on ind_stor.oid = ind_head.indexrelid
	cross join unnest(ind_head.indkey) with ordinality u(u, k)
	left join pg_catalog.pg_collation
	on pg_collation.oid = ind_head.indcollation[k-1]
	left join pg_catalog.pg_namespace colln on collnamespace = colln.oid
	cross join pg_catalog.pg_indexam_has_property(ind_stor.relam, 'can_order') amcanorder /* left join pg_catalog.pg_am am on ind_stor.relam = am.oid*/
	         left join pg_catalog.pg_opclass
	                   on pg_opclass.oid = ind_head.indclass[k-1]
	         left join pg_catalog.pg_namespace opcn on opcnamespace = opcn.oid
	where ind_stor.relnamespace = $1::oid
	  and ind_stor.relkind in ('i', 'I')
	and pg_catalog.age(ind_stor.xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647)
	order by index_id, k
2024-12-09 08:13:12.879 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0'
2024-12-09 08:13:12.880 UTC [48] LOG:  duration: 1.453 ms
2024-12-09 08:13:12.899 UTC [48] LOG:  duration: 0.202 ms
2024-12-09 08:13:12.899 UTC [48] LOG:  duration: 0.142 ms
2024-12-09 08:13:12.899 UTC [48] LOG:  execute <unnamed>: select oid
	from pg_catalog.pg_constraint
	where conrelid != 0 and connamespace = $1::oid
2024-12-09 08:13:12.899 UTC [48] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:12.899 UTC [48] LOG:  duration: 0.024 ms
2024-12-09 08:13:12.913 UTC [48] LOG:  duration: 0.441 ms
2024-12-09 08:13:12.914 UTC [48] LOG:  duration: 0.665 ms
2024-12-09 08:13:12.914 UTC [48] LOG:  execute <unnamed>: select T.oid table_id,
	       relkind table_kind,
	       C.oid::bigint con_id,
	       C.xmin::varchar::bigint con_state_id,
	       conname con_name,
	       contype con_kind,
	       conkey con_columns,
	       conindid index_id,
	       confrelid ref_table_id,
	       condeferrable is_deferrable,
	       condeferred is_init_deferred,
	       confupdtype on_update,
	       confdeltype on_delete,
	      connoinherit no_inherit,
	      pg_catalog.pg_get_expr(conbin, T.oid) /* consrc */ con_expression,
	       confkey ref_columns,
	       conexclop::int[] excl_operators,
	       array(select unnest::regoper::varchar from unnest(conexclop)) excl_operators_str
	from pg_catalog.pg_constraint C
	         join pg_catalog.pg_class T
	              on C.conrelid = T.oid
	   where relkind in ('r', 'v', 'f', 'p')
	     and relnamespace = $1::oid
	     and contype in ('p', 'u', 'f', 'c', 'x')
	     and connamespace = $2::oid
	and pg_catalog.age(T.xmin) <= coalesce(nullif(greatest(pg_catalog.age($3::varchar::xid), -1), -1), 2147483647) or pg_catalog.age(c.xmin) <= coalesce(nullif(greatest(pg_catalog.age($4::varchar::xid), -1), -1), 2147483647)
2024-12-09 08:13:12.914 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '2200', $3 = '0', $4 = '0'
2024-12-09 08:13:12.914 UTC [48] LOG:  duration: 0.181 ms
2024-12-09 08:13:12.938 UTC [48] LOG:  duration: 0.240 ms
2024-12-09 08:13:12.938 UTC [48] LOG:  duration: 0.418 ms
2024-12-09 08:13:12.938 UTC [48] LOG:  execute <unnamed>: select RU.oid
	from pg_catalog.pg_rewrite RU,
	     pg_catalog.pg_class RC
	where RC.oid = RU.ev_class
	  and RC.relnamespace = $1::oid
	  and not RU.rulename = '_RETURN'
2024-12-09 08:13:12.938 UTC [48] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:12.938 UTC [48] LOG:  duration: 0.121 ms
2024-12-09 08:13:12.951 UTC [48] LOG:  duration: 0.296 ms
2024-12-09 08:13:12.952 UTC [48] LOG:  duration: 0.364 ms
2024-12-09 08:13:12.952 UTC [48] LOG:  execute <unnamed>: select R.ev_class as table_id,
	       R.oid as rule_id,
	       R.xmin as rule_state_number,
	       R.rulename as rule_name,
	       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
	       R.ev_enabled as rule_fire_mode,
	       R.is_instead as rule_is_instead
	from pg_catalog.pg_rewrite R
	where R.ev_class in (select oid
	                     from pg_catalog.pg_class
	                     where relnamespace = $1::oid)
	  and pg_catalog.age(R.xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647)
	  and R.rulename != '_RETURN'::name
	order by R.ev_class::bigint, ev_type
2024-12-09 08:13:12.952 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0'
2024-12-09 08:13:12.952 UTC [48] LOG:  duration: 0.156 ms
2024-12-09 08:13:12.965 UTC [48] LOG:  duration: 0.133 ms
2024-12-09 08:13:12.965 UTC [48] LOG:  duration: 0.206 ms
2024-12-09 08:13:12.965 UTC [48] LOG:  execute <unnamed>: select P.oid from pg_catalog.pg_policy P
	  join pg_catalog.pg_class C on polrelid = C.oid
	where relnamespace = $1::oid
2024-12-09 08:13:12.965 UTC [48] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:12.965 UTC [48] LOG:  duration: 0.101 ms
2024-12-09 08:13:12.975 UTC [48] LOG:  duration: 0.256 ms
2024-12-09 08:13:12.976 UTC [48] LOG:  duration: 0.364 ms
2024-12-09 08:13:12.976 UTC [48] LOG:  execute <unnamed>: select
	       P.oid id,
	       P.xmin as state_number,
	       polname policyname,
	       polrelid table_id,
	       polpermissive /* true */ as permissive,
	       polroles roles,
	       polcmd cmd,
	       pg_get_expr(polqual, polrelid) qual,
	       pg_get_expr(polwithcheck, polrelid) with_check
	from pg_catalog.pg_policy P
	       join pg_catalog.pg_class C on polrelid = C.oid
	where relnamespace = $1::oid
	  and pg_catalog.age(P.xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647)
	order by polrelid
2024-12-09 08:13:12.976 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0'
2024-12-09 08:13:12.976 UTC [48] LOG:  duration: 0.132 ms
2024-12-09 08:13:12.995 UTC [48] LOG:  duration: 0.138 ms
2024-12-09 08:13:12.995 UTC [48] LOG:  duration: 0.192 ms
2024-12-09 08:13:12.995 UTC [48] LOG:  execute <unnamed>: select TG.oid
	from pg_catalog.pg_trigger TG,
	     pg_catalog.pg_class TC
	where TC.oid = TG.tgrelid
	  and TC.relnamespace = $1::oid
2024-12-09 08:13:12.995 UTC [48] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:12.995 UTC [48] LOG:  duration: 0.090 ms
2024-12-09 08:13:13.009 UTC [48] LOG:  duration: 0.397 ms
2024-12-09 08:13:13.009 UTC [48] LOG:  duration: 0.304 ms
2024-12-09 08:13:13.009 UTC [48] LOG:  execute <unnamed>: select T.tgrelid as table_id,
	       T.oid as trigger_id,
	       T.xmin as trigger_state_number,
	       T.tgname as trigger_name,
	       T.tgfoid as function_id,
	       pg_catalog.encode(T.tgargs, 'escape') as function_args,
	       T.tgtype as bits,
	       T.tgdeferrable as is_deferrable,
	       T.tginitdeferred as is_init_deferred,
	       T.tgenabled as trigger_fire_mode,
	       T.tgattr as columns,
	       T.tgconstraint != 0 as is_constraint,
	       T.tgoldtable /* null */ as old_table_name,
	       T.tgnewtable /* null */ as new_table_name,
	       pg_catalog.pg_get_triggerdef(T.oid, true) as source_code
	from pg_catalog.pg_trigger T
	where T.tgrelid in (select oid
	                    from pg_catalog.pg_class
	                    where relnamespace = $1::oid)
	  and pg_catalog.age(T.xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647)
	  and not T.tgisinternal
2024-12-09 08:13:13.009 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0'
2024-12-09 08:13:13.010 UTC [48] LOG:  duration: 0.122 ms
2024-12-09 08:13:13.022 UTC [48] LOG:  duration: 0.614 ms
2024-12-09 08:13:13.024 UTC [48] LOG:  duration: 2.402 ms
2024-12-09 08:13:13.025 UTC [48] LOG:  execute <unnamed>: select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
	from pg_catalog.pg_description D
	  join pg_catalog.pg_class C on D.objoid = C.oid
	where C.relnamespace = $1::oid and C.relkind != 'c' and D.classoid = 'pg_catalog.pg_class'::regclass
	group by D.objoid
	union all
	select T.oid id, pg_catalog.array_agg(D.objsubid)
	from pg_catalog.pg_description D
	  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
	  left join pg_catalog.pg_class C on T.typrelid = C.oid
	where T.typnamespace = $2::oid and (C.relkind = 'c' or C.relkind is null)
	group by T.oid
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_constraint C on D.objoid = C.oid
	where C.connamespace = $3::oid and D.classoid = 'pg_catalog.pg_constraint'::regclass
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_trigger T on T.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = T.tgrelid
	where C.relnamespace = $4::oid and D.classoid = 'pg_catalog.pg_trigger'::regclass
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_rewrite R on R.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = R.ev_class
	where C.relnamespace = $5::oid and D.classoid = 'pg_catalog.pg_rewrite'::regclass
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_proc P on P.oid = D.objoid
	where P.pronamespace = $6::oid and D.classoid = 'pg_catalog.pg_proc'::regclass
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_operator O on O.oid = D.objoid
	where O.oprnamespace = $7::oid and D.classoid = 'pg_catalog.pg_operator'::regclass
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_opclass O on O.oid = D.objoid
	where O.opcnamespace = $8::oid and D.classoid = 'pg_catalog.pg_opclass'::regclass
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_opfamily O on O.oid = D.objoid
	where O.opfnamespace = $9::oid and D.classoid = 'pg_catalog.pg_opfamily'::regclass
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_collation C on C.oid = D.objoid
	where C.collnamespace = $10::oid and D.classoid = 'pg_catalog.pg_collation'::regclass
	
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_policy P on P.oid = D.objoid
	  join pg_catalog.pg_class C on P.polrelid = C.oid
	where C.relnamespace = $11::oid  and D.classoid = 'pg_catalog.pg_policy'::regclass
	
2024-12-09 08:13:13.025 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '2200', $3 = '2200', $4 = '2200', $5 = '2200', $6 = '2200', $7 = '2200', $8 = '2200', $9 = '2200', $10 = '2200', $11 = '2200'
2024-12-09 08:13:13.025 UTC [48] LOG:  duration: 0.856 ms
2024-12-09 08:13:13.038 UTC [48] LOG:  duration: 0.956 ms
2024-12-09 08:13:13.041 UTC [48] LOG:  duration: 2.602 ms
2024-12-09 08:13:13.041 UTC [48] LOG:  execute <unnamed>: select D.objoid id, C.relkind::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_class C on D.objoid = C.oid
	where C.relnamespace = $1::oid and C.relkind != 'c' and D.classoid = 'pg_catalog.pg_class'::regclass
	and pg_catalog.age(D.xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647)
	union all
	select T.oid id, 'T'::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
	  left join pg_catalog.pg_class C on T.typrelid = C.oid
	where T.typnamespace = $3::oid and (C.relkind = 'c' or C.relkind is null)
	and pg_catalog.age(D.xmin) <= coalesce(nullif(greatest(pg_catalog.age($4::varchar::xid), -1), -1), 2147483647)
	union all
	select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz')::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_constraint C on D.objoid = C.oid
	where C.connamespace = $5::oid and D.classoid = 'pg_catalog.pg_constraint'::regclass
	and pg_catalog.age(D.xmin) <= coalesce(nullif(greatest(pg_catalog.age($6::varchar::xid), -1), -1), 2147483647)
	union all
	select D.objoid id, 't'::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_trigger T on T.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = T.tgrelid
	where C.relnamespace = $7::oid and D.classoid = 'pg_catalog.pg_trigger'::regclass
	and pg_catalog.age(D.xmin) <= coalesce(nullif(greatest(pg_catalog.age($8::varchar::xid), -1), -1), 2147483647)
	union all
	select D.objoid id, 'R'::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_rewrite R on R.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = R.ev_class
	where C.relnamespace = $9::oid and D.classoid = 'pg_catalog.pg_rewrite'::regclass
	and pg_catalog.age(D.xmin) <= coalesce(nullif(greatest(pg_catalog.age($10::varchar::xid), -1), -1), 2147483647)
	union all
	select D.objoid id, 'F'::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_proc P on P.oid = D.objoid
	where P.pronamespace = $11::oid and D.classoid = 'pg_catalog.pg_proc'::regclass
	and pg_catalog.age(D.xmin) <= coalesce(nullif(greatest(pg_catalog.age($12::varchar::xid), -1), -1), 2147483647)
	union all
	select D.objoid id, 'O'::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_operator O on O.oid = D.objoid
	where O.oprnamespace = $13::oid and D.classoid = 'pg_catalog.pg_operator'::regclass
	and pg_catalog.age(D.xmin) <= coalesce(nullif(greatest(pg_catalog.age($14::varchar::xid), -1), -1), 2147483647)
	union all
	select D.objoid id, 'f'::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_opfamily O on O.oid = D.objoid
	where O.opfnamespace = $15::oid and D.classoid = 'pg_catalog.pg_opfamily'::regclass
	and pg_catalog.age(D.xmin) <= coalesce(nullif(greatest(pg_catalog.age($16::varchar::xid), -1), -1), 2147483647)
	union all
	select D.objoid id, 'c'::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_opclass O on O.oid = D.objoid
	where O.opcnamespace = $17::oid and D.classoid = 'pg_catalog.pg_opclass'::regclass
	and pg_catalog.age(D.xmin) <= coalesce(nullif(greatest(pg_catalog.age($18::varchar::xid), -1), -1), 2147483647)
	union all
	select D.objoid id, 'C'::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_collation C on C.oid = D.objoid
	where C.collnamespace = $19::oid and D.classoid = 'pg_catalog.pg_collation'::regclass
	and pg_catalog.age(D.xmin) <= coalesce(nullif(greatest(pg_catalog.age($20::varchar::xid), -1), -1), 2147483647)
	
	union all
	select D.objoid id, 'P'::char as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	       join pg_catalog.pg_policy P on P.oid = D.objoid
	       join pg_catalog.pg_class C on P.polrelid = C.oid
	where C.relnamespace = $21::oid and D.classoid = 'pg_catalog.pg_policy'::regclass
	and pg_catalog.age(D.xmin) <= coalesce(nullif(greatest(pg_catalog.age($22::varchar::xid), -1), -1), 2147483647)
	
2024-12-09 08:13:13.041 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0', $3 = '2200', $4 = '0', $5 = '2200', $6 = '0', $7 = '2200', $8 = '0', $9 = '2200', $10 = '0', $11 = '2200', $12 = '0', $13 = '2200', $14 = '0', $15 = '2200', $16 = '0', $17 = '2200', $18 = '0', $19 = '2200', $20 = '0', $21 = '2200', $22 = '0'
2024-12-09 08:13:13.042 UTC [48] LOG:  duration: 0.706 ms
2024-12-09 08:13:13.054 UTC [48] LOG:  duration: 0.466 ms
2024-12-09 08:13:13.055 UTC [48] LOG:  duration: 0.404 ms
2024-12-09 08:13:13.055 UTC [48] LOG:  execute <unnamed>: select T.oid as object_id,
	                 T.relacl as acl
	          from pg_catalog.pg_class T
	          where relnamespace = $1::oid 
	            and pg_catalog.age(T.xmin) <= pg_catalog.age($2::varchar::xid)
	          union all
	          select T.oid as object_id,
	                 T.proacl as acl
	          from pg_catalog.pg_proc T
	          where pronamespace = $3::oid 
	            and pg_catalog.age(T.xmin) <= pg_catalog.age($4::varchar::xid)
	          union all
	          select T.oid as object_id,
	                 T.typacl as acl
	          from pg_catalog.pg_type T
	          where typnamespace = $5::oid 
	            and pg_catalog.age(T.xmin) <= pg_catalog.age($6::varchar::xid)
	          order by object_id
2024-12-09 08:13:13.055 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0', $3 = '2200', $4 = '0', $5 = '2200', $6 = '0'
2024-12-09 08:13:13.056 UTC [48] LOG:  duration: 0.593 ms
2024-12-09 08:13:13.068 UTC [48] LOG:  duration: 0.274 ms
2024-12-09 08:13:13.069 UTC [48] LOG:  duration: 0.500 ms
2024-12-09 08:13:13.069 UTC [48] LOG:  execute <unnamed>: select T.oid as object_id,
	               A.attnum as attr_position,
	               A.attacl as acl
	        from pg_catalog.pg_attribute A join pg_catalog.pg_class T on T.oid = A.attrelid
	        where relnamespace = $1::oid
	          and attnum > 0 
	          and pg_catalog.age(A.xmin) <= pg_catalog.age($2::varchar::xid)
	        order by object_id, attr_position
2024-12-09 08:13:13.069 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '0'
2024-12-09 08:13:13.069 UTC [48] LOG:  duration: 0.176 ms
2024-12-09 08:13:13.086 UTC [48] LOG:  duration: 0.302 ms
2024-12-09 08:13:13.086 UTC [48] LOG:  duration: 0.371 ms
2024-12-09 08:13:13.086 UTC [48] LOG:  execute <unnamed>: select
	       T.relkind as view_kind,
	       T.oid as view_id,
	       pg_catalog.pg_get_viewdef(T.oid, true) as source_text
	from pg_catalog.pg_class T
	  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
	where N.oid = $1::oid
	  and T.relkind in ('m','v')
	  and (pg_catalog.age(T.xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647) or exists(
	  select A.attrelid from pg_catalog.pg_attribute A where A.attrelid = T.oid and pg_catalog.age(A.xmin) <= coalesce(nullif(greatest(pg_catalog.age($3::varchar::xid), -1), -1), 2147483647)))
2024-12-09 08:13:13.086 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '524', $3 = '524'
2024-12-09 08:13:13.086 UTC [48] LOG:  duration: 0.095 ms
2024-12-09 08:13:13.099 UTC [48] LOG:  duration: 0.413 ms
2024-12-09 08:13:13.100 UTC [48] LOG:  duration: 0.474 ms
2024-12-09 08:13:13.100 UTC [48] LOG:  execute <unnamed>: with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
	            from pg_catalog.pg_class
	            where relnamespace = $1::oid
	              and relkind in ('r', 'm', 'v', 'f', 'p') )
	select table_kind,
	       table_id,
	       R.oid as rule_id,
	       pg_catalog.pg_get_ruledef(R.oid, true) as source_text
	from A join pg_catalog.pg_rewrite R
	        on A.table_id = R.ev_class
	where R.rulename != '_RETURN'::name
	  and pg_catalog.age(R.xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647)
2024-12-09 08:13:13.100 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '524'
2024-12-09 08:13:13.100 UTC [48] LOG:  duration: 0.185 ms
2024-12-09 08:13:13.112 UTC [48] LOG:  duration: 0.343 ms
2024-12-09 08:13:13.113 UTC [48] LOG:  duration: 0.338 ms
2024-12-09 08:13:13.113 UTC [48] LOG:  execute <unnamed>: with system_languages as ( select oid as lang
	                           from pg_catalog.pg_language
	                           where lanname in ('c','internal') )
	select oid as id,
	       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
	       pg_catalog.pg_get_function_result(oid) as result_def,
	       /* pg_catalog.pg_get_function_sqlbody(oid) */null  as sqlbody_def,
	       prosrc as source_text
	from pg_catalog.pg_proc
	where pronamespace = $1::oid
	  and pg_catalog.age(xmin) <= coalesce(nullif(greatest(pg_catalog.age($2::varchar::xid), -1), -1), 2147483647)
	  and not (prokind = 'a') /* proisagg */
	  and prolang not in (select lang from system_languages)
	  and prosrc is not null
2024-12-09 08:13:13.113 UTC [48] DETAIL:  parameters: $1 = '2200', $2 = '524'
2024-12-09 08:13:13.113 UTC [48] LOG:  duration: 0.290 ms
2024-12-09 08:13:13.126 UTC [48] LOG:  duration: 0.345 ms
2024-12-09 08:13:13.127 UTC [48] LOG:  duration: 0.540 ms
2024-12-09 08:13:13.127 UTC [48] LOG:  execute <unnamed>: select D.objid as dependent_id,
	       D.refobjid as owner_id,
	       D.refobjsubid as owner_subobject_id
	from pg_depend D
	  join pg_class C_SEQ on D.objid    = C_SEQ.oid and D.classid    = 'pg_class'::regclass::oid
	  join pg_class C_TAB on D.refobjid = C_TAB.oid and D.refclassid = 'pg_class'::regclass::oid
	where C_SEQ.relkind = 'S'
	  and C_TAB.relkind = 'r'
	  and D.refobjsubid <> 0
	  and (D.deptype = 'a' or D.deptype = 'i')
	  and C_TAB.relnamespace = $1::oid
	order by owner_id
2024-12-09 08:13:13.127 UTC [48] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:13.128 UTC [48] LOG:  duration: 0.680 ms
2024-12-09 08:13:13.154 UTC [48] LOG:  duration: 0.286 ms
2024-12-09 08:13:13.154 UTC [48] LOG:  duration: 0.362 ms
2024-12-09 08:13:13.154 UTC [48] LOG:  execute <unnamed>: select distinct connamespace as schema_id
	from pg_catalog.pg_constraint F,
	     pg_catalog.pg_class O
	where F.contype = 'f'
	  and F.confrelid = O.oid
	  and O.relnamespace in ($1)
2024-12-09 08:13:13.154 UTC [48] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:13.154 UTC [48] LOG:  duration: 0.084 ms
2024-12-09 08:13:13.191 UTC [48] LOG:  duration: 0.065 ms
2024-12-09 08:13:13.191 UTC [48] LOG:  duration: 0.010 ms
2024-12-09 08:13:13.191 UTC [48] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:13:13.191 UTC [48] LOG:  duration: 0.025 ms
2024-12-09 08:13:15.078 UTC [49] LOG:  connection received: host=172.18.0.1 port=40018
2024-12-09 08:13:15.081 UTC [49] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:13:15.084 UTC [49] LOG:  duration: 0.104 ms
2024-12-09 08:13:15.084 UTC [49] LOG:  duration: 0.009 ms
2024-12-09 08:13:15.084 UTC [49] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:13:15.084 UTC [49] LOG:  duration: 0.019 ms
2024-12-09 08:13:15.085 UTC [49] LOG:  duration: 0.025 ms
2024-12-09 08:13:15.085 UTC [49] LOG:  duration: 0.008 ms
2024-12-09 08:13:15.085 UTC [49] LOG:  execute <unnamed>: SET application_name = ''
2024-12-09 08:13:15.085 UTC [49] LOG:  duration: 0.028 ms
2024-12-09 08:13:15.088 UTC [49] LOG:  duration: 0.251 ms
2024-12-09 08:13:15.088 UTC [49] LOG:  duration: 0.097 ms
2024-12-09 08:13:15.088 UTC [49] LOG:  execute <unnamed>: select version()
2024-12-09 08:13:15.088 UTC [49] LOG:  duration: 0.021 ms
2024-12-09 08:13:15.092 UTC [49] LOG:  duration: 0.060 ms
2024-12-09 08:13:15.093 UTC [49] LOG:  duration: 0.006 ms
2024-12-09 08:13:15.093 UTC [49] LOG:  execute <unnamed>: SET application_name = 'IntelliJ IDEA 2024.3'
2024-12-09 08:13:15.093 UTC [49] LOG:  duration: 0.016 ms
2024-12-09 08:13:15.103 UTC [49] LOG:  duration: 0.018 ms
2024-12-09 08:13:15.103 UTC [49] LOG:  duration: 0.005 ms
2024-12-09 08:13:15.296 UTC [49] LOG:  duration: 0.185 ms
2024-12-09 08:13:15.296 UTC [49] LOG:  duration: 0.034 ms
2024-12-09 08:13:15.296 UTC [49] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2024-12-09 08:13:15.296 UTC [49] LOG:  duration: 0.032 ms
2024-12-09 08:13:15.318 UTC [49] LOG:  duration: 0.282 ms
2024-12-09 08:13:15.319 UTC [49] LOG:  duration: 0.450 ms
2024-12-09 08:13:15.319 UTC [49] LOG:  execute <unnamed>: SELECT t.*
	FROM public."Currencies" t
	LIMIT 501
2024-12-09 08:13:15.319 UTC [49] LOG:  duration: 0.088 ms
2024-12-09 08:13:15.332 UTC [49] LOG:  duration: 1.155 ms
2024-12-09 08:13:15.335 UTC [49] LOG:  duration: 2.304 ms
2024-12-09 08:13:15.335 UTC [49] LOG:  execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity != '' OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 16387 AS oid , 1 AS attnum UNION ALL SELECT 16387, 2 UNION ALL SELECT 16387, 3 UNION ALL SELECT 16387, 4) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum) 
2024-12-09 08:13:15.335 UTC [49] LOG:  duration: 0.263 ms
2024-12-09 08:13:15.655 UTC [49] LOG:  duration: 0.148 ms
2024-12-09 08:13:15.655 UTC [49] LOG:  duration: 0.008 ms
2024-12-09 08:13:15.655 UTC [49] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:13:15.655 UTC [49] LOG:  duration: 0.022 ms
2024-12-09 08:13:20.820 UTC [49] LOG:  duration: 0.023 ms
2024-12-09 08:13:20.820 UTC [49] LOG:  duration: 0.006 ms
2024-12-09 08:13:20.823 UTC [49] LOG:  duration: 0.059 ms
2024-12-09 08:13:20.823 UTC [49] LOG:  duration: 0.006 ms
2024-12-09 08:13:20.824 UTC [49] LOG:  duration: 0.013 ms
2024-12-09 08:13:20.824 UTC [49] LOG:  duration: 0.005 ms
2024-12-09 08:13:20.826 UTC [49] LOG:  duration: 0.028 ms
2024-12-09 08:13:20.826 UTC [49] LOG:  duration: 0.003 ms
2024-12-09 08:13:20.828 UTC [49] LOG:  duration: 0.011 ms
2024-12-09 08:13:20.828 UTC [49] LOG:  duration: 0.004 ms
2024-12-09 08:13:20.829 UTC [49] LOG:  duration: 0.010 ms
2024-12-09 08:13:20.829 UTC [49] LOG:  duration: 0.005 ms
2024-12-09 08:13:20.834 UTC [49] LOG:  duration: 0.035 ms
2024-12-09 08:13:20.834 UTC [49] LOG:  duration: 0.010 ms
2024-12-09 08:13:20.834 UTC [49] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:13:20.834 UTC [49] LOG:  duration: 0.017 ms
2024-12-09 08:13:20.855 UTC [49] LOG:  duration: 0.044 ms
2024-12-09 08:13:20.855 UTC [49] LOG:  duration: 0.008 ms
2024-12-09 08:13:20.855 UTC [49] LOG:  execute <unnamed>: BEGIN
2024-12-09 08:13:20.855 UTC [49] LOG:  duration: 0.007 ms
2024-12-09 08:13:20.855 UTC [49] LOG:  duration: 0.161 ms
2024-12-09 08:13:20.855 UTC [49] LOG:  duration: 0.071 ms
2024-12-09 08:13:20.855 UTC [49] LOG:  execute <unnamed>: DELETE FROM public."Currencies" WHERE "ID" = $1
2024-12-09 08:13:20.855 UTC [49] DETAIL:  parameters: $1 = '7'
2024-12-09 08:13:20.856 UTC [49] LOG:  duration: 0.575 ms
2024-12-09 08:13:20.863 UTC [49] LOG:  duration: 0.060 ms
2024-12-09 08:13:20.863 UTC [49] LOG:  duration: 0.012 ms
2024-12-09 08:13:20.863 UTC [49] LOG:  execute S_1: COMMIT
2024-12-09 08:13:20.864 UTC [49] LOG:  duration: 1.559 ms
2024-12-09 08:13:20.868 UTC [49] LOG:  duration: 0.032 ms
2024-12-09 08:13:20.868 UTC [49] LOG:  duration: 0.008 ms
2024-12-09 08:13:20.868 UTC [49] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:13:20.868 UTC [49] LOG:  duration: 0.020 ms
2024-12-09 08:13:20.880 UTC [49] LOG:  duration: 0.018 ms
2024-12-09 08:13:20.880 UTC [49] LOG:  duration: 0.005 ms
2024-12-09 08:13:20.883 UTC [49] LOG:  duration: 0.032 ms
2024-12-09 08:13:20.883 UTC [49] LOG:  duration: 0.005 ms
2024-12-09 08:13:20.884 UTC [49] LOG:  duration: 0.014 ms
2024-12-09 08:13:20.884 UTC [49] LOG:  duration: 0.006 ms
2024-12-09 08:13:20.886 UTC [49] LOG:  duration: 0.013 ms
2024-12-09 08:13:20.886 UTC [49] LOG:  duration: 0.005 ms
2024-12-09 08:13:20.887 UTC [49] LOG:  duration: 0.010 ms
2024-12-09 08:13:20.887 UTC [49] LOG:  duration: 0.003 ms
2024-12-09 08:13:20.889 UTC [49] LOG:  duration: 0.010 ms
2024-12-09 08:13:20.889 UTC [49] LOG:  duration: 0.004 ms
2024-12-09 08:13:20.894 UTC [49] LOG:  duration: 0.036 ms
2024-12-09 08:13:20.894 UTC [49] LOG:  duration: 0.009 ms
2024-12-09 08:13:20.894 UTC [49] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:13:20.894 UTC [49] LOG:  duration: 0.016 ms
2024-12-09 08:13:20.915 UTC [49] LOG:  duration: 0.067 ms
2024-12-09 08:13:20.915 UTC [49] LOG:  duration: 0.056 ms
2024-12-09 08:13:20.915 UTC [49] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2024-12-09 08:13:20.915 UTC [49] LOG:  duration: 0.016 ms
2024-12-09 08:13:20.924 UTC [49] LOG:  duration: 0.122 ms
2024-12-09 08:13:20.925 UTC [49] LOG:  duration: 0.097 ms
2024-12-09 08:13:20.925 UTC [49] LOG:  execute <unnamed>: SELECT t.*
	FROM public."Currencies" t
	LIMIT 501
2024-12-09 08:13:20.925 UTC [49] LOG:  duration: 0.030 ms
2024-12-09 08:13:21.067 UTC [49] LOG:  duration: 0.046 ms
2024-12-09 08:13:21.067 UTC [49] LOG:  duration: 0.009 ms
2024-12-09 08:13:21.067 UTC [49] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:13:21.068 UTC [49] LOG:  duration: 0.016 ms
2024-12-09 08:13:23.869 UTC [50] LOG:  connection received: host=172.18.0.1 port=48402
2024-12-09 08:13:23.873 UTC [50] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:13:23.877 UTC [50] LOG:  duration: 0.073 ms
2024-12-09 08:13:23.877 UTC [50] LOG:  duration: 0.006 ms
2024-12-09 08:13:23.877 UTC [50] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:13:23.877 UTC [50] LOG:  duration: 0.015 ms
2024-12-09 08:13:23.878 UTC [50] LOG:  duration: 0.012 ms
2024-12-09 08:13:23.878 UTC [50] LOG:  duration: 0.004 ms
2024-12-09 08:13:23.878 UTC [50] LOG:  execute <unnamed>: SET application_name = ''
2024-12-09 08:13:23.878 UTC [50] LOG:  duration: 0.014 ms
2024-12-09 08:13:23.880 UTC [50] LOG:  duration: 0.180 ms
2024-12-09 08:13:23.880 UTC [50] LOG:  duration: 0.059 ms
2024-12-09 08:13:23.880 UTC [50] LOG:  execute <unnamed>: select version()
2024-12-09 08:13:23.880 UTC [50] LOG:  duration: 0.018 ms
2024-12-09 08:13:23.884 UTC [50] LOG:  duration: 0.041 ms
2024-12-09 08:13:23.884 UTC [50] LOG:  duration: 0.016 ms
2024-12-09 08:13:23.884 UTC [50] LOG:  execute <unnamed>: SET application_name = 'IntelliJ IDEA 2024.3'
2024-12-09 08:13:23.884 UTC [50] LOG:  duration: 0.017 ms
2024-12-09 08:13:23.893 UTC [50] LOG:  duration: 0.028 ms
2024-12-09 08:13:23.893 UTC [50] LOG:  duration: 0.008 ms
2024-12-09 08:13:23.901 UTC [50] LOG:  duration: 0.162 ms
2024-12-09 08:13:23.901 UTC [50] LOG:  duration: 0.045 ms
2024-12-09 08:13:23.901 UTC [50] LOG:  execute <unnamed>: select current_database(), current_schema(), current_user
2024-12-09 08:13:23.901 UTC [50] LOG:  duration: 0.085 ms
2024-12-09 08:13:23.909 UTC [50] LOG:  duration: 0.399 ms
2024-12-09 08:13:23.909 UTC [50] LOG:  duration: 0.043 ms
2024-12-09 08:13:23.909 UTC [50] LOG:  execute <unnamed>: select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
2024-12-09 08:13:23.909 UTC [50] LOG:  duration: 0.097 ms
2024-12-09 08:13:23.926 UTC [50] LOG:  duration: 0.536 ms
2024-12-09 08:13:23.926 UTC [50] LOG:  duration: 0.210 ms
2024-12-09 08:13:23.926 UTC [50] LOG:  execute <unnamed>: select L.transactionid::varchar::bigint as transaction_id
	from pg_catalog.pg_locks L
	where L.transactionid is not null
	order by pg_catalog.age(L.transactionid) desc
	limit 1
2024-12-09 08:13:23.927 UTC [50] LOG:  duration: 0.093 ms
2024-12-09 08:13:23.937 UTC [50] LOG:  duration: 0.213 ms
2024-12-09 08:13:23.937 UTC [50] LOG:  duration: 0.045 ms
2024-12-09 08:13:23.937 UTC [50] LOG:  execute <unnamed>: select case
	  when pg_catalog.pg_is_in_recovery()
	    then null
	  else
	    (pg_catalog.txid_current() % 4294967296)::varchar::bigint
	  end as current_txid
2024-12-09 08:13:23.937 UTC [50] LOG:  duration: 0.021 ms
2024-12-09 08:13:23.950 UTC [50] LOG:  duration: 0.035 ms
2024-12-09 08:13:23.950 UTC [50] LOG:  duration: 0.006 ms
2024-12-09 08:13:23.950 UTC [50] LOG:  execute <unnamed>: show DateStyle
2024-12-09 08:13:23.950 UTC [50] LOG:  duration: 0.030 ms
2024-12-09 08:13:23.958 UTC [50] LOG:  duration: 0.805 ms
2024-12-09 08:13:23.958 UTC [50] LOG:  duration: 0.389 ms
2024-12-09 08:13:23.958 UTC [50] LOG:  execute <unnamed>: select name, is_dst from pg_catalog.pg_timezone_names
	union distinct
	select abbrev as name, is_dst from pg_catalog.pg_timezone_abbrevs
2024-12-09 08:13:23.989 UTC [50] LOG:  duration: 30.536 ms
2024-12-09 08:13:24.011 UTC [50] LOG:  duration: 0.285 ms
2024-12-09 08:13:24.012 UTC [50] LOG:  duration: 0.401 ms
2024-12-09 08:13:24.012 UTC [50] LOG:  execute <unnamed>: select D.objoid id
	from pg_catalog.pg_description D
	where D.classoid in (
	  'pg_catalog.pg_event_trigger'::regclass,
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_cast'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass,
	  'pg_catalog.pg_language'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
2024-12-09 08:13:24.013 UTC [50] LOG:  duration: 0.708 ms
2024-12-09 08:13:24.024 UTC [50] LOG:  duration: 0.621 ms
2024-12-09 08:13:24.025 UTC [50] LOG:  duration: 0.746 ms
2024-12-09 08:13:24.025 UTC [50] LOG:  execute <unnamed>: select R.oid::bigint as role_id, rolname as role_name,
	  rolsuper is_super, rolinherit is_inherit,
	  rolcreaterole can_createrole, rolcreatedb can_createdb,
	  rolcanlogin can_login, rolreplication /* false */ is_replication,
	  rolconnlimit conn_limit, rolvaliduntil valid_until,
	  rolbypassrls /* false */ bypass_rls, rolconfig config,
	  D.description
	from pg_catalog.pg_roles R
	  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
2024-12-09 08:13:24.025 UTC [50] LOG:  duration: 0.163 ms
2024-12-09 08:13:24.038 UTC [50] LOG:  duration: 0.336 ms
2024-12-09 08:13:24.038 UTC [50] LOG:  duration: 0.305 ms
2024-12-09 08:13:24.038 UTC [50] LOG:  execute <unnamed>: select member id, roleid role_id, admin_option
	          from pg_catalog.pg_auth_members order by id, roleid::text
2024-12-09 08:13:24.038 UTC [50] LOG:  duration: 0.073 ms
2024-12-09 08:13:24.051 UTC [50] LOG:  duration: 0.129 ms
2024-12-09 08:13:24.051 UTC [50] LOG:  duration: 0.200 ms
2024-12-09 08:13:24.051 UTC [50] LOG:  execute <unnamed>: select oid::bigint from pg_catalog.pg_tablespace
2024-12-09 08:13:24.051 UTC [50] LOG:  duration: 0.020 ms
2024-12-09 08:13:24.063 UTC [50] LOG:  duration: 0.422 ms
2024-12-09 08:13:24.063 UTC [50] LOG:  duration: 0.326 ms
2024-12-09 08:13:24.063 UTC [50] LOG:  execute <unnamed>: select T.oid::bigint as id, T.spcname as name,
	       T.xmin as state_number, pg_catalog.pg_get_userbyid(T.spcowner) as owner,
	       pg_catalog.pg_tablespace_location(T.oid) /* null */ as location,
	       T.spcoptions /* null */ as options,
	       D.description as comment
	from pg_catalog.pg_tablespace T
	  left join pg_catalog.pg_shdescription D on D.objoid = T.oid
	where pg_catalog.age(T.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
2024-12-09 08:13:24.063 UTC [50] DETAIL:  parameters: $1 = '493'
2024-12-09 08:13:24.063 UTC [50] LOG:  duration: 0.052 ms
2024-12-09 08:13:24.077 UTC [50] LOG:  duration: 0.272 ms
2024-12-09 08:13:24.077 UTC [50] LOG:  duration: 0.227 ms
2024-12-09 08:13:24.077 UTC [50] LOG:  execute <unnamed>: select T.oid as object_id,
	                 T.spcacl as acl
	          from pg_catalog.pg_tablespace T 
	            where pg_catalog.age(T.xmin) <= pg_catalog.age($1::varchar::xid)
	          union all
	          select T.oid as object_id,
	                 T.datacl as acl
	          from pg_catalog.pg_database T 
	            where pg_catalog.age(T.xmin) <= pg_catalog.age($2::varchar::xid)
2024-12-09 08:13:24.077 UTC [50] DETAIL:  parameters: $1 = '493', $2 = '493'
2024-12-09 08:13:24.077 UTC [50] LOG:  duration: 0.053 ms
2024-12-09 08:13:24.093 UTC [50] LOG:  duration: 0.436 ms
2024-12-09 08:13:24.094 UTC [50] LOG:  duration: 0.417 ms
2024-12-09 08:13:24.094 UTC [50] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	order by case when nspname = pg_catalog.current_schema() then -1::bigint else N.oid::bigint end
2024-12-09 08:13:24.094 UTC [50] LOG:  duration: 0.134 ms
2024-12-09 08:13:24.101 UTC [50] LOG:  duration: 0.736 ms
2024-12-09 08:13:24.102 UTC [50] LOG:  duration: 0.930 ms
2024-12-09 08:13:24.103 UTC [50] LOG:  execute <unnamed>: SELECT typinput='pg_catalog.array_in'::regproc as is_array, typtype, typname, pg_type.oid   FROM pg_catalog.pg_type   LEFT JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE pg_type.oid = $1  ORDER BY sp.r, pg_type.oid DESC
2024-12-09 08:13:24.103 UTC [50] DETAIL:  parameters: $1 = '28'
2024-12-09 08:13:24.103 UTC [50] LOG:  duration: 0.146 ms
2024-12-09 08:13:24.110 UTC [50] LOG:  duration: 0.456 ms
2024-12-09 08:13:24.111 UTC [50] LOG:  duration: 0.205 ms
2024-12-09 08:13:24.111 UTC [50] LOG:  execute <unnamed>: select usesuper
	from pg_user
	where usename = current_user
2024-12-09 08:13:24.111 UTC [50] LOG:  duration: 0.026 ms
2024-12-09 08:13:24.123 UTC [50] LOG:  duration: 0.148 ms
2024-12-09 08:13:24.123 UTC [50] LOG:  duration: 0.151 ms
2024-12-09 08:13:24.123 UTC [50] LOG:  execute <unnamed>: select oid from pg_catalog.pg_event_trigger
2024-12-09 08:13:24.123 UTC [50] LOG:  duration: 0.014 ms
2024-12-09 08:13:24.135 UTC [50] LOG:  duration: 0.286 ms
2024-12-09 08:13:24.135 UTC [50] LOG:  duration: 0.133 ms
2024-12-09 08:13:24.135 UTC [50] LOG:  execute <unnamed>: select t.oid as id,
	       t.xmin as state_number,
	       t.evtname as name,
	       t.evtevent as event,
	       t.evtfoid as routine_id,
	       pg_catalog.pg_get_userbyid(t.evtowner) as owner,
	       t.evttags as tags,
	       case when t.evtenabled = 'D' then 1 else 0 end as is_disabled
	from pg_catalog.pg_event_trigger t
	where pg_catalog.age(t.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
2024-12-09 08:13:24.135 UTC [50] DETAIL:  parameters: $1 = '493'
2024-12-09 08:13:24.135 UTC [50] LOG:  duration: 0.025 ms
2024-12-09 08:13:24.144 UTC [50] LOG:  duration: 0.113 ms
2024-12-09 08:13:24.145 UTC [50] LOG:  duration: 0.156 ms
2024-12-09 08:13:24.145 UTC [50] LOG:  execute <unnamed>: select oid from pg_catalog.pg_foreign_data_wrapper
2024-12-09 08:13:24.145 UTC [50] LOG:  duration: 0.011 ms
2024-12-09 08:13:24.155 UTC [50] LOG:  duration: 0.280 ms
2024-12-09 08:13:24.156 UTC [50] LOG:  duration: 1.879 ms
2024-12-09 08:13:24.157 UTC [50] LOG:  execute <unnamed>: select fdw.oid as id,
	       fdw.xmin as state_number,
	       fdw.fdwname as name,
	       pr.proname as handler,
	       nspc.nspname as handler_schema,
	       pr2.proname as validator,
	       nspc2.nspname as validator_schema,
	       fdw.fdwoptions as options,
	       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
	from pg_catalog.pg_foreign_data_wrapper fdw
	     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
	     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
	     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
	     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
	  where pg_catalog.age(fdw.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
2024-12-09 08:13:24.157 UTC [50] DETAIL:  parameters: $1 = '493'
2024-12-09 08:13:24.157 UTC [50] LOG:  duration: 0.061 ms
2024-12-09 08:13:24.166 UTC [50] LOG:  duration: 0.140 ms
2024-12-09 08:13:24.166 UTC [50] LOG:  duration: 0.130 ms
2024-12-09 08:13:24.166 UTC [50] LOG:  execute <unnamed>: select oid from pg_catalog.pg_foreign_server
2024-12-09 08:13:24.166 UTC [50] LOG:  duration: 0.013 ms
2024-12-09 08:13:24.177 UTC [50] LOG:  duration: 0.249 ms
2024-12-09 08:13:24.177 UTC [50] LOG:  duration: 0.125 ms
2024-12-09 08:13:24.178 UTC [50] LOG:  execute <unnamed>: select srv.oid as id,
	       srv.srvfdw as fdw_id,
	       srv.xmin as state_number,
	       srv.srvname as name,
	       srv.srvtype as type,
	       srv.srvversion as version,
	       srv.srvoptions as options,
	       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
	from pg_catalog.pg_foreign_server srv
	  where pg_catalog.age(srv.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
2024-12-09 08:13:24.178 UTC [50] DETAIL:  parameters: $1 = '493'
2024-12-09 08:13:24.178 UTC [50] LOG:  duration: 0.041 ms
2024-12-09 08:13:24.185 UTC [50] LOG:  duration: 0.139 ms
2024-12-09 08:13:24.185 UTC [50] LOG:  duration: 0.118 ms
2024-12-09 08:13:24.185 UTC [50] LOG:  execute <unnamed>: select oid from pg_catalog.pg_user_mapping
2024-12-09 08:13:24.185 UTC [50] LOG:  duration: 0.012 ms
2024-12-09 08:13:24.195 UTC [50] LOG:  duration: 0.223 ms
2024-12-09 08:13:24.195 UTC [50] LOG:  duration: 0.114 ms
2024-12-09 08:13:24.195 UTC [50] LOG:  execute <unnamed>: select oid as id,
	       umserver as server_id,
	       case when umuser = 0 then null else pg_catalog.pg_get_userbyid(umuser) end as user,
	       umoptions as options
	from pg_catalog.pg_user_mapping
	where pg_catalog.age(xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
	order by server_id
2024-12-09 08:13:24.195 UTC [50] DETAIL:  parameters: $1 = '493'
2024-12-09 08:13:24.195 UTC [50] LOG:  duration: 0.048 ms
2024-12-09 08:13:24.204 UTC [50] LOG:  duration: 0.127 ms
2024-12-09 08:13:24.204 UTC [50] LOG:  duration: 0.164 ms
2024-12-09 08:13:24.204 UTC [50] LOG:  execute <unnamed>: select oid from pg_catalog.pg_am
2024-12-09 08:13:24.204 UTC [50] LOG:  duration: 0.019 ms
2024-12-09 08:13:24.215 UTC [50] LOG:  duration: 0.581 ms
2024-12-09 08:13:24.215 UTC [50] LOG:  duration: 0.762 ms
2024-12-09 08:13:24.216 UTC [50] LOG:  execute <unnamed>: select A.oid as access_method_id,
	       A.xmin as state_number,
	       A.amname as access_method_name
	       ,
	       A.amhandler::oid as handler_id,
	       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
	       A.amtype as access_method_type
	       
	from pg_am A
	  join pg_proc P on A.amhandler::oid = P.oid
	  join pg_namespace N on P.pronamespace = N.oid
	  
	where pg_catalog.age(A.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
2024-12-09 08:13:24.216 UTC [50] DETAIL:  parameters: $1 = '493'
2024-12-09 08:13:24.216 UTC [50] LOG:  duration: 0.080 ms
2024-12-09 08:13:24.227 UTC [50] LOG:  duration: 0.137 ms
2024-12-09 08:13:24.227 UTC [50] LOG:  duration: 0.156 ms
2024-12-09 08:13:24.227 UTC [50] LOG:  execute <unnamed>: select oid from pg_catalog.pg_extension
2024-12-09 08:13:24.227 UTC [50] LOG:  duration: 0.016 ms
2024-12-09 08:13:24.239 UTC [50] LOG:  duration: 0.553 ms
2024-12-09 08:13:24.240 UTC [50] LOG:  duration: 0.516 ms
2024-12-09 08:13:24.240 UTC [50] LOG:  execute <unnamed>: select E.oid        as id,
	       E.xmin       as state_number,
	       extname      as name,
	       extversion   as version,
	       extnamespace as schema_id,
	       nspname      as schema_name
	       ,
	       array(select unnest
	             from unnest(available_versions)
	             where unnest > extversion) as available_updates
	       
	from pg_catalog.pg_extension E
	       join pg_namespace N on E.extnamespace = N.oid
	       left join (select name, array_agg(version) as available_versions
	                  from pg_available_extension_versions()
	                  group by name) V on E.extname = V.name
	       
	where pg_catalog.age(E.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
2024-12-09 08:13:24.240 UTC [50] DETAIL:  parameters: $1 = '493'
2024-12-09 08:13:24.240 UTC [50] LOG:  duration: 0.092 ms
2024-12-09 08:13:24.248 UTC [50] LOG:  duration: 0.168 ms
2024-12-09 08:13:24.249 UTC [50] LOG:  duration: 0.173 ms
2024-12-09 08:13:24.249 UTC [50] LOG:  execute <unnamed>: select oid from pg_catalog.pg_language
2024-12-09 08:13:24.249 UTC [50] LOG:  duration: 0.019 ms
2024-12-09 08:13:24.258 UTC [50] LOG:  duration: 0.335 ms
2024-12-09 08:13:24.260 UTC [50] LOG:  duration: 1.842 ms
2024-12-09 08:13:24.260 UTC [50] LOG:  execute <unnamed>: select l.oid as id, l.xmin state_number, lanname as name, lanpltrusted as trusted,
	       h.proname as handler, hs.nspname as handlerSchema,
	       i.proname as inline, isc.nspname as inlineSchema,
	       v.proname as validator, vs.nspname as validatorSchema
	from pg_catalog.pg_language l
	    left join pg_catalog.pg_proc h on h.oid = lanplcallfoid
	    left join pg_catalog.pg_namespace hs on hs.oid = h.pronamespace
	    left join pg_catalog.pg_proc i on i.oid = laninline
	    left join pg_catalog.pg_namespace isc on isc.oid = i.pronamespace
	    left join pg_catalog.pg_proc v on v.oid = lanvalidator
	    left join pg_catalog.pg_namespace vs on vs.oid = v.pronamespace
	where pg_catalog.age(l.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
	order by lanname
2024-12-09 08:13:24.260 UTC [50] DETAIL:  parameters: $1 = '493'
2024-12-09 08:13:24.260 UTC [50] LOG:  duration: 0.071 ms
2024-12-09 08:13:24.267 UTC [50] LOG:  duration: 0.147 ms
2024-12-09 08:13:24.267 UTC [50] LOG:  duration: 0.145 ms
2024-12-09 08:13:24.267 UTC [50] LOG:  execute <unnamed>: select D.objoid id
	from pg_catalog.pg_description D
	where D.classoid in (
	  'pg_catalog.pg_event_trigger'::regclass,
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_cast'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass,
	  'pg_catalog.pg_language'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
2024-12-09 08:13:24.268 UTC [50] LOG:  duration: 0.576 ms
2024-12-09 08:13:24.278 UTC [50] LOG:  duration: 0.590 ms
2024-12-09 08:13:24.278 UTC [50] LOG:  duration: 0.233 ms
2024-12-09 08:13:24.279 UTC [50] LOG:  execute <unnamed>: select D.objoid id, case
	    when 'pg_catalog.pg_event_trigger'::regclass = classoid then 'T'
	    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
	    when 'pg_catalog.pg_cast'::regclass = classoid then 'C'
	    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
	    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
	    when 'pg_catalog.pg_language'::regclass = classoid then 'L'
	    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
	    
	  end as kind,
	  D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	where classoid in (
	  'pg_catalog.pg_event_trigger'::regclass,
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_cast'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass,
	  'pg_catalog.pg_language'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
	and pg_catalog.age(D.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
2024-12-09 08:13:24.279 UTC [50] DETAIL:  parameters: $1 = '493'
2024-12-09 08:13:24.279 UTC [50] LOG:  duration: 0.869 ms
2024-12-09 08:13:24.288 UTC [50] LOG:  duration: 0.222 ms
2024-12-09 08:13:24.288 UTC [50] LOG:  duration: 0.188 ms
2024-12-09 08:13:24.288 UTC [50] LOG:  execute <unnamed>: select T.oid as object_id,
	                 T.fdwacl as acl
	          from pg_catalog.pg_foreign_data_wrapper T 
	            where pg_catalog.age(T.xmin) <= pg_catalog.age($1::varchar::xid)
	          union all
	          select T.oid as object_id,
	                 T.lanacl as acl
	          from pg_catalog.pg_language T 
	            where pg_catalog.age(T.xmin) <= pg_catalog.age($2::varchar::xid)
	          union all
	          select T.oid as object_id,
	                 T.nspacl as acl
	          from pg_catalog.pg_namespace T 
	            where pg_catalog.age(T.xmin) <= pg_catalog.age($3::varchar::xid)
	          union all
	          select T.oid as object_id,
	                 T.srvacl as acl
	          from pg_catalog.pg_foreign_server T 
	            where pg_catalog.age(T.xmin) <= pg_catalog.age($4::varchar::xid)
	          
2024-12-09 08:13:24.288 UTC [50] DETAIL:  parameters: $1 = '493', $2 = '493', $3 = '493', $4 = '493'
2024-12-09 08:13:24.288 UTC [50] LOG:  duration: 0.042 ms
2024-12-09 08:13:24.294 UTC [50] LOG:  duration: 0.150 ms
2024-12-09 08:13:24.294 UTC [50] LOG:  duration: 0.143 ms
2024-12-09 08:13:24.294 UTC [50] LOG:  execute <unnamed>: select oid from pg_catalog.pg_cast
2024-12-09 08:13:24.294 UTC [50] LOG:  duration: 0.103 ms
2024-12-09 08:13:24.305 UTC [50] LOG:  duration: 0.365 ms
2024-12-09 08:13:24.307 UTC [50] LOG:  duration: 1.402 ms
2024-12-09 08:13:24.307 UTC [50] LOG:  execute <unnamed>: select C.oid,
	       C.xmin as state_number,
	       C.castsource as castsource_id,
	       pg_catalog.quote_ident(SN.nspname) || '.' || pg_catalog.quote_ident(S.typname) as castsource_name,
	       C.casttarget as casttarget_id,
	       pg_catalog.quote_ident(TN.nspname) || '.' || pg_catalog.quote_ident(T.typname) as casttarget_name,
	       C.castfunc as castfunc_id,
	       pg_catalog.quote_ident(FN.nspname) || '.' || pg_catalog.quote_ident(F.proname) as castfunc_name,
	       C.castcontext,
	       C.castmethod
	from pg_cast C
	     left outer join pg_proc F on C.castfunc::oid = F.oid
	     left outer join pg_namespace FN on F.pronamespace = FN.oid
	     join pg_type S on C.castsource::oid = S.oid
	     join pg_namespace SN on S.typnamespace = SN.oid
	     join pg_type T on C.casttarget::oid = T.oid
	     join pg_namespace TN on T.typnamespace = TN.oid
	where pg_catalog.age(C.xmin) <= coalesce(nullif(greatest(pg_catalog.age($1::varchar::xid), -1), -1), 2147483647)
2024-12-09 08:13:24.307 UTC [50] DETAIL:  parameters: $1 = '493'
2024-12-09 08:13:24.307 UTC [50] LOG:  duration: 0.106 ms
2024-12-09 08:13:24.313 UTC [50] LOG:  duration: 0.215 ms
2024-12-09 08:13:24.314 UTC [50] LOG:  duration: 0.244 ms
2024-12-09 08:13:24.314 UTC [50] LOG:  execute <unnamed>: select E.oid   as extension_id,
	       D.objid as member_id
	from pg_extension E join pg_depend D
	  on E.oid = D.refobjid and
	     D.refclassid = 'pg_extension'::regclass::oid
	where D.deptype = 'e'
	order by extension_id
2024-12-09 08:13:24.314 UTC [50] LOG:  duration: 0.053 ms
2024-12-09 08:13:24.327 UTC [50] LOG:  duration: 1.672 ms
2024-12-09 08:13:24.340 UTC [50] LOG:  duration: 13.025 ms
2024-12-09 08:13:24.340 UTC [50] LOG:  execute <unnamed>: with saved_age as (select greatest(pg_catalog.age($1::varchar::xid), pg_catalog.age($2::varchar::xid)) as "value")
	     select bool_or(C.last_tx <= SA."value") as has_changes from
	     (
	       (select min(least(pg_catalog.age(T.xmin), pg_catalog.age(D.xmin))) as last_tx
	    from pg_catalog.pg_type T
	      left join pg_catalog.pg_description D on T.oid = D.objoid
	    where T.typnamespace = $3::oid)
	union all
	(select min(least(pg_catalog.age(T.xmin), pg_catalog.age(D.xmin))) as last_tx
	    from pg_catalog.pg_class T
	      left join pg_catalog.pg_description D on T.oid = D.objoid
	    where T.relnamespace = $4::oid)
	union all
	(select min(least(pg_catalog.age(T.xmin), pg_catalog.age(D.xmin))) as last_tx
	    from pg_catalog.pg_proc T
	      left join pg_catalog.pg_description D on T.oid = D.objoid
	    where T.pronamespace = $5::oid)
	union all
	(select min(least(pg_catalog.age(T.xmin), pg_catalog.age(D.xmin))) as last_tx
	    from pg_catalog.pg_operator T
	      left join pg_catalog.pg_description D on T.oid = D.objoid
	    where T.oprnamespace = $6::oid)
	union all
	(select min(least(pg_catalog.age(T.xmin), pg_catalog.age(D.xmin))) as last_tx
	    from pg_catalog.pg_constraint T
	      left join pg_catalog.pg_description D on T.oid = D.objoid
	    where T.connamespace = $7::oid)
	union all
	select min(pg_catalog.age(A.xmin)) as last_tx
	        from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
	        where K.relnamespace = $8::oid
	union all
	(select min(pg_catalog.age(IX.xmin)) as last_tx
	        from pg_catalog.pg_index IX join pg_catalog.pg_class IC on IC.oid = IX.indrelid
	        where IC.relnamespace = $9::oid)
	union all
	(select min(least(pg_catalog.age(RU.xmin), pg_catalog.age(D.xmin))) as last_tx
	        from pg_catalog.pg_rewrite RU join pg_catalog.pg_class RC on RC.oid = RU.ev_class
	          left join pg_catalog.pg_description D on D.objoid = RU.oid
	        where RC.relnamespace = $10::oid)
	union all
	(select min(least(pg_catalog.age(TG.xmin), pg_catalog.age(D.xmin))) as last_tx
	        from pg_catalog.pg_trigger TG join pg_catalog.pg_class TC on TC.oid = TG.tgrelid
	          left join pg_catalog.pg_description D on D.objoid = TG.oid
	        where TC.relnamespace = $11::oid)
	union all
	(select min(least(pg_catalog.age(T.xmin), pg_catalog.age(D.xmin))) as last_tx
	    from pg_catalog.pg_opclass T
	      left join pg_catalog.pg_description D on T.oid = D.objoid
	    where T.opcnamespace = $12::oid)
	union all
	(select min(least(pg_catalog.age(T.xmin), pg_catalog.age(D.xmin))) as last_tx
	    from pg_catalog.pg_opfamily T
	      left join pg_catalog.pg_description D on T.oid = D.objoid
	    where T.opfnamespace = $13::oid)
	union all
	(select min(pg_catalog.age(O.xmin)) from pg_catalog.pg_amop O
	       left join pg_catalog.pg_opfamily F on O.amopfamily = F.oid
	       left join pg_catalog.pg_depend D on D.classid = 'pg_amop'::regclass and O.oid = D.objid and D.objsubid = 0
	       left join pg_catalog.pg_opclass C on D.refclassid = 'pg_opclass'::regclass and C.oid = D.refobjid and D.refobjsubid = 0
	       where C.opcnamespace = $14 or C.opcnamespace is null and F.opfnamespace = $15)
	union all
	(select min(pg_catalog.age(P.xmin)) from pg_catalog.pg_amproc P
	       left join pg_catalog.pg_opfamily F on P.amprocfamily = F.oid
	       where F.opfnamespace = $16)
	union all
	(select min(pg_catalog.age(E.xmin)) as last_tx
	        from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
	        where T.typnamespace = $17::oid)
	union all
	(select min(least(pg_catalog.age(T.xmin), pg_catalog.age(D.xmin))) as last_tx
	    from pg_catalog.pg_collation T
	      left join pg_catalog.pg_description D on T.oid = D.objoid
	    where T.collnamespace = $18::oid)
	union all
	(select min(least(pg_catalog.age(P.xmin), pg_catalog.age(D.xmin))) as last_tx
	        from pg_catalog.pg_policy P join pg_catalog.pg_class C on C.oid = P.polrelid
	          left join pg_catalog.pg_description D on D.objoid = P.oid
	        where C.relnamespace = $19::oid)
	     ) C, saved_age SA
	     where sa.value >= 0
	    
2024-12-09 08:13:24.340 UTC [50] DETAIL:  parameters: $1 = '493', $2 = '493', $3 = '2200', $4 = '2200', $5 = '2200', $6 = '2200', $7 = '2200', $8 = '2200', $9 = '2200', $10 = '2200', $11 = '2200', $12 = '2200', $13 = '2200', $14 = '2200', $15 = '2200', $16 = '2200', $17 = '2200', $18 = '2200', $19 = '2200'
2024-12-09 08:13:24.342 UTC [50] LOG:  duration: 1.160 ms
2024-12-09 08:13:24.350 UTC [50] LOG:  duration: 0.209 ms
2024-12-09 08:13:24.350 UTC [50] LOG:  duration: 0.122 ms
2024-12-09 08:13:24.350 UTC [50] LOG:  execute <unnamed>: select oid
	from pg_catalog.pg_class
	where relkind = 'S'
	  and relnamespace = $1::oid
2024-12-09 08:13:24.350 UTC [50] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:24.350 UTC [50] LOG:  duration: 0.099 ms
2024-12-09 08:13:24.356 UTC [50] LOG:  duration: 0.087 ms
2024-12-09 08:13:24.357 UTC [50] LOG:  duration: 0.097 ms
2024-12-09 08:13:24.357 UTC [50] LOG:  execute <unnamed>: select oid
	from pg_catalog.pg_type
	where typnamespace = $1::oid
2024-12-09 08:13:24.357 UTC [50] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:24.357 UTC [50] LOG:  duration: 0.063 ms
2024-12-09 08:13:24.362 UTC [50] LOG:  duration: 0.110 ms
2024-12-09 08:13:24.362 UTC [50] LOG:  duration: 0.222 ms
2024-12-09 08:13:24.362 UTC [50] LOG:  execute <unnamed>: select oid from pg_catalog.pg_class C
	where relkind in ('r', 'm', 'v', 'p', 'f')
	  and relnamespace = $1::oid
2024-12-09 08:13:24.362 UTC [50] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:24.363 UTC [50] LOG:  duration: 0.125 ms
2024-12-09 08:13:24.369 UTC [50] LOG:  duration: 0.132 ms
2024-12-09 08:13:24.369 UTC [50] LOG:  duration: 0.083 ms
2024-12-09 08:13:24.369 UTC [50] LOG:  execute <unnamed>: select oid
	from pg_catalog.pg_proc
	where prokind != 'a'/* not proisagg*/ and pronamespace = $1::oid
2024-12-09 08:13:24.369 UTC [50] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:24.369 UTC [50] LOG:  duration: 0.310 ms
2024-12-09 08:13:24.374 UTC [50] LOG:  duration: 0.163 ms
2024-12-09 08:13:24.374 UTC [50] LOG:  duration: 0.126 ms
2024-12-09 08:13:24.375 UTC [50] LOG:  execute <unnamed>: select oid
	from pg_catalog.pg_proc
	where prokind = 'a'/* proisagg*/ and pronamespace = $1::oid
2024-12-09 08:13:24.375 UTC [50] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:24.375 UTC [50] LOG:  duration: 0.293 ms
2024-12-09 08:13:24.381 UTC [50] LOG:  duration: 0.092 ms
2024-12-09 08:13:24.382 UTC [50] LOG:  duration: 0.090 ms
2024-12-09 08:13:24.382 UTC [50] LOG:  execute <unnamed>: select oid
	from pg_catalog.pg_operator
	where oprnamespace = $1::oid
2024-12-09 08:13:24.382 UTC [50] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:24.382 UTC [50] LOG:  duration: 0.102 ms
2024-12-09 08:13:24.388 UTC [50] LOG:  duration: 0.096 ms
2024-12-09 08:13:24.388 UTC [50] LOG:  duration: 0.109 ms
2024-12-09 08:13:24.388 UTC [50] LOG:  execute <unnamed>: select oid from pg_catalog.pg_collation
	where collnamespace = $1::oid
2024-12-09 08:13:24.388 UTC [50] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:24.388 UTC [50] LOG:  duration: 0.067 ms
2024-12-09 08:13:24.397 UTC [50] LOG:  duration: 0.145 ms
2024-12-09 08:13:24.397 UTC [50] LOG:  duration: 0.102 ms
2024-12-09 08:13:24.397 UTC [50] LOG:  execute <unnamed>: select oid
	from pg_catalog.pg_opclass
	where opcnamespace = $1::oid
2024-12-09 08:13:24.397 UTC [50] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:24.397 UTC [50] LOG:  duration: 0.039 ms
2024-12-09 08:13:24.404 UTC [50] LOG:  duration: 0.096 ms
2024-12-09 08:13:24.405 UTC [50] LOG:  duration: 0.118 ms
2024-12-09 08:13:24.405 UTC [50] LOG:  execute <unnamed>: select oid
	from pg_catalog.pg_opfamily
	where opfnamespace = $1::oid
2024-12-09 08:13:24.405 UTC [50] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:24.405 UTC [50] LOG:  duration: 0.040 ms
2024-12-09 08:13:24.411 UTC [50] LOG:  duration: 0.137 ms
2024-12-09 08:13:24.412 UTC [50] LOG:  duration: 0.337 ms
2024-12-09 08:13:24.412 UTC [50] LOG:  execute <unnamed>: select pg_amop.oid
	from pg_catalog.pg_amop
	         join pg_catalog.pg_opfamily on pg_opfamily.oid = amopfamily
	where opfnamespace = $1::oid
2024-12-09 08:13:24.412 UTC [50] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:24.412 UTC [50] LOG:  duration: 0.045 ms
2024-12-09 08:13:24.421 UTC [50] LOG:  duration: 0.156 ms
2024-12-09 08:13:24.421 UTC [50] LOG:  duration: 0.374 ms
2024-12-09 08:13:24.421 UTC [50] LOG:  execute <unnamed>: select pg_amproc.oid
	from pg_catalog.pg_amproc
	         join pg_catalog.pg_opfamily on pg_opfamily.oid = amprocfamily
	where opfnamespace = $1::oid
2024-12-09 08:13:24.421 UTC [50] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:24.421 UTC [50] LOG:  duration: 0.033 ms
2024-12-09 08:13:24.433 UTC [50] LOG:  duration: 0.190 ms
2024-12-09 08:13:24.434 UTC [50] LOG:  duration: 0.433 ms
2024-12-09 08:13:24.434 UTC [50] LOG:  execute <unnamed>: select IX.indexrelid
	from pg_catalog.pg_index IX,
	     pg_catalog.pg_class IC
	where IC.oid = IX.indrelid
	  and IC.relnamespace = $1::oid
2024-12-09 08:13:24.434 UTC [50] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:24.434 UTC [50] LOG:  duration: 0.157 ms
2024-12-09 08:13:24.443 UTC [50] LOG:  duration: 0.358 ms
2024-12-09 08:13:24.443 UTC [50] LOG:  duration: 0.269 ms
2024-12-09 08:13:24.443 UTC [50] LOG:  execute <unnamed>: select oid
	from pg_catalog.pg_constraint
	where conrelid != 0 and connamespace = $1::oid
2024-12-09 08:13:24.443 UTC [50] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:24.443 UTC [50] LOG:  duration: 0.077 ms
2024-12-09 08:13:24.451 UTC [50] LOG:  duration: 0.197 ms
2024-12-09 08:13:24.451 UTC [50] LOG:  duration: 0.338 ms
2024-12-09 08:13:24.451 UTC [50] LOG:  execute <unnamed>: select RU.oid
	from pg_catalog.pg_rewrite RU,
	     pg_catalog.pg_class RC
	where RC.oid = RU.ev_class
	  and RC.relnamespace = $1::oid
	  and not RU.rulename = '_RETURN'
2024-12-09 08:13:24.451 UTC [50] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:24.451 UTC [50] LOG:  duration: 0.113 ms
2024-12-09 08:13:24.459 UTC [50] LOG:  duration: 0.116 ms
2024-12-09 08:13:24.460 UTC [50] LOG:  duration: 0.187 ms
2024-12-09 08:13:24.460 UTC [50] LOG:  execute <unnamed>: select P.oid from pg_catalog.pg_policy P
	  join pg_catalog.pg_class C on polrelid = C.oid
	where relnamespace = $1::oid
2024-12-09 08:13:24.460 UTC [50] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:24.460 UTC [50] LOG:  duration: 0.079 ms
2024-12-09 08:13:24.467 UTC [50] LOG:  duration: 0.140 ms
2024-12-09 08:13:24.468 UTC [50] LOG:  duration: 0.228 ms
2024-12-09 08:13:24.468 UTC [50] LOG:  execute <unnamed>: select TG.oid
	from pg_catalog.pg_trigger TG,
	     pg_catalog.pg_class TC
	where TC.oid = TG.tgrelid
	  and TC.relnamespace = $1::oid
2024-12-09 08:13:24.468 UTC [50] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:24.468 UTC [50] LOG:  duration: 0.180 ms
2024-12-09 08:13:24.480 UTC [50] LOG:  duration: 0.945 ms
2024-12-09 08:13:24.482 UTC [50] LOG:  duration: 2.675 ms
2024-12-09 08:13:24.483 UTC [50] LOG:  execute <unnamed>: select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
	from pg_catalog.pg_description D
	  join pg_catalog.pg_class C on D.objoid = C.oid
	where C.relnamespace = $1::oid and C.relkind != 'c' and D.classoid = 'pg_catalog.pg_class'::regclass
	group by D.objoid
	union all
	select T.oid id, pg_catalog.array_agg(D.objsubid)
	from pg_catalog.pg_description D
	  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
	  left join pg_catalog.pg_class C on T.typrelid = C.oid
	where T.typnamespace = $2::oid and (C.relkind = 'c' or C.relkind is null)
	group by T.oid
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_constraint C on D.objoid = C.oid
	where C.connamespace = $3::oid and D.classoid = 'pg_catalog.pg_constraint'::regclass
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_trigger T on T.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = T.tgrelid
	where C.relnamespace = $4::oid and D.classoid = 'pg_catalog.pg_trigger'::regclass
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_rewrite R on R.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = R.ev_class
	where C.relnamespace = $5::oid and D.classoid = 'pg_catalog.pg_rewrite'::regclass
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_proc P on P.oid = D.objoid
	where P.pronamespace = $6::oid and D.classoid = 'pg_catalog.pg_proc'::regclass
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_operator O on O.oid = D.objoid
	where O.oprnamespace = $7::oid and D.classoid = 'pg_catalog.pg_operator'::regclass
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_opclass O on O.oid = D.objoid
	where O.opcnamespace = $8::oid and D.classoid = 'pg_catalog.pg_opclass'::regclass
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_opfamily O on O.oid = D.objoid
	where O.opfnamespace = $9::oid and D.classoid = 'pg_catalog.pg_opfamily'::regclass
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_collation C on C.oid = D.objoid
	where C.collnamespace = $10::oid and D.classoid = 'pg_catalog.pg_collation'::regclass
	
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_policy P on P.oid = D.objoid
	  join pg_catalog.pg_class C on P.polrelid = C.oid
	where C.relnamespace = $11::oid  and D.classoid = 'pg_catalog.pg_policy'::regclass
	
2024-12-09 08:13:24.483 UTC [50] DETAIL:  parameters: $1 = '2200', $2 = '2200', $3 = '2200', $4 = '2200', $5 = '2200', $6 = '2200', $7 = '2200', $8 = '2200', $9 = '2200', $10 = '2200', $11 = '2200'
2024-12-09 08:13:24.483 UTC [50] LOG:  duration: 0.908 ms
2024-12-09 08:13:24.494 UTC [50] LOG:  duration: 0.473 ms
2024-12-09 08:13:24.494 UTC [50] LOG:  duration: 0.538 ms
2024-12-09 08:13:24.494 UTC [50] LOG:  execute <unnamed>: select D.objid as dependent_id,
	       D.refobjid as owner_id,
	       D.refobjsubid as owner_subobject_id
	from pg_depend D
	  join pg_class C_SEQ on D.objid    = C_SEQ.oid and D.classid    = 'pg_class'::regclass::oid
	  join pg_class C_TAB on D.refobjid = C_TAB.oid and D.refclassid = 'pg_class'::regclass::oid
	where C_SEQ.relkind = 'S'
	  and C_TAB.relkind = 'r'
	  and D.refobjsubid <> 0
	  and (D.deptype = 'a' or D.deptype = 'i')
	  and C_TAB.relnamespace = $1::oid
	order by owner_id
2024-12-09 08:13:24.494 UTC [50] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:24.494 UTC [50] LOG:  duration: 0.191 ms
2024-12-09 08:13:24.520 UTC [50] LOG:  duration: 0.079 ms
2024-12-09 08:13:24.520 UTC [50] LOG:  duration: 0.012 ms
2024-12-09 08:13:24.520 UTC [50] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:13:24.520 UTC [50] LOG:  duration: 0.044 ms
2024-12-09 08:13:33.487 UTC [51] LOG:  connection received: host=172.18.0.1 port=58324
2024-12-09 08:13:33.489 UTC [51] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:13:33.491 UTC [51] LOG:  duration: 0.071 ms
2024-12-09 08:13:33.491 UTC [51] LOG:  duration: 0.007 ms
2024-12-09 08:13:33.491 UTC [51] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:13:33.491 UTC [51] LOG:  duration: 0.013 ms
2024-12-09 08:13:33.492 UTC [51] LOG:  duration: 0.020 ms
2024-12-09 08:13:33.492 UTC [51] LOG:  duration: 0.004 ms
2024-12-09 08:13:33.492 UTC [51] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:13:33.492 UTC [51] LOG:  duration: 0.015 ms
2024-12-09 08:13:33.493 UTC [51] LOG:  duration: 0.133 ms
2024-12-09 08:13:33.493 UTC [51] LOG:  duration: 0.042 ms
2024-12-09 08:13:33.493 UTC [51] LOG:  execute <unnamed>: select version()
2024-12-09 08:13:33.493 UTC [51] LOG:  duration: 0.012 ms
2024-12-09 08:13:33.501 UTC [51] LOG:  duration: 0.032 ms
2024-12-09 08:13:33.501 UTC [51] LOG:  duration: 0.006 ms
2024-12-09 08:13:33.508 UTC [51] LOG:  duration: 0.173 ms
2024-12-09 08:13:33.508 UTC [51] LOG:  duration: 0.042 ms
2024-12-09 08:13:33.508 UTC [51] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2024-12-09 08:13:33.508 UTC [51] LOG:  duration: 0.033 ms
2024-12-09 08:13:33.514 UTC [51] LOG:  duration: 0.398 ms
2024-12-09 08:13:33.514 UTC [51] LOG:  duration: 0.625 ms
2024-12-09 08:13:33.514 UTC [51] LOG:  execute <unnamed>: SELECT e.typdelim FROM pg_catalog.pg_type t, pg_catalog.pg_type e WHERE t.oid = $1 and t.typelem = e.oid
2024-12-09 08:13:33.514 UTC [51] DETAIL:  parameters: $1 = '1003'
2024-12-09 08:13:33.514 UTC [51] LOG:  duration: 0.036 ms
2024-12-09 08:13:33.520 UTC [51] LOG:  duration: 0.121 ms
2024-12-09 08:13:33.520 UTC [51] LOG:  duration: 0.045 ms
2024-12-09 08:13:33.520 UTC [51] LOG:  execute <unnamed>: select current_database(), current_schema(), current_user
2024-12-09 08:13:33.520 UTC [51] LOG:  duration: 0.028 ms
2024-12-09 08:13:33.533 UTC [51] LOG:  duration: 0.293 ms
2024-12-09 08:13:33.533 UTC [51] LOG:  duration: 0.059 ms
2024-12-09 08:13:33.533 UTC [51] LOG:  execute <unnamed>: select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
2024-12-09 08:13:33.533 UTC [51] LOG:  duration: 0.072 ms
2024-12-09 08:13:33.553 UTC [51] LOG:  duration: 0.375 ms
2024-12-09 08:13:33.553 UTC [51] LOG:  duration: 0.233 ms
2024-12-09 08:13:33.553 UTC [51] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	where not datistemplate
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2024-12-09 08:13:33.554 UTC [51] LOG:  duration: 0.067 ms
2024-12-09 08:13:33.564 UTC [51] LOG:  duration: 0.225 ms
2024-12-09 08:13:33.564 UTC [51] LOG:  duration: 0.373 ms
2024-12-09 08:13:33.564 UTC [51] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:13:33.564 UTC [51] LOG:  duration: 0.049 ms
2024-12-09 08:13:33.570 UTC [51] LOG:  duration: 0.194 ms
2024-12-09 08:13:33.570 UTC [51] LOG:  duration: 0.225 ms
2024-12-09 08:13:33.570 UTC [51] LOG:  execute <unnamed>: SELECT n.nspname = ANY(current_schemas(true)), n.nspname, t.typname FROM pg_catalog.pg_type t JOIN pg_catalog.pg_namespace n ON t.typnamespace = n.oid WHERE t.oid = $1
2024-12-09 08:13:33.570 UTC [51] DETAIL:  parameters: $1 = '28'
2024-12-09 08:13:33.570 UTC [51] LOG:  duration: 0.054 ms
2024-12-09 08:13:33.572 UTC [51] LOG:  duration: 0.457 ms
2024-12-09 08:13:33.572 UTC [51] LOG:  duration: 0.287 ms
2024-12-09 08:13:33.572 UTC [51] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc, typtype   FROM pg_catalog.pg_type   LEFT   JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE typname = $1  ORDER BY sp.r, pg_type.oid DESC LIMIT 1
2024-12-09 08:13:33.572 UTC [51] DETAIL:  parameters: $1 = 'xid'
2024-12-09 08:13:33.572 UTC [51] LOG:  duration: 0.083 ms
2024-12-09 08:13:33.580 UTC [51] LOG:  duration: 0.351 ms
2024-12-09 08:13:33.580 UTC [51] LOG:  duration: 0.303 ms
2024-12-09 08:13:33.580 UTC [51] LOG:  execute <unnamed>: select R.oid::bigint as role_id, rolname as role_name,
	  rolsuper is_super, rolinherit is_inherit,
	  rolcreaterole can_createrole, rolcreatedb can_createdb,
	  rolcanlogin can_login, rolreplication /* false */ is_replication,
	  rolconnlimit conn_limit, rolvaliduntil valid_until,
	  rolbypassrls /* false */ bypass_rls, rolconfig config,
	  D.description
	from pg_catalog.pg_roles R
	  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
2024-12-09 08:13:33.580 UTC [51] LOG:  duration: 0.095 ms
2024-12-09 08:13:33.592 UTC [51] LOG:  duration: 0.150 ms
2024-12-09 08:13:33.592 UTC [51] LOG:  duration: 0.162 ms
2024-12-09 08:13:33.592 UTC [51] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	where not datistemplate
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2024-12-09 08:13:33.592 UTC [51] LOG:  duration: 0.037 ms
2024-12-09 08:13:33.602 UTC [51] LOG:  duration: 0.150 ms
2024-12-09 08:13:33.602 UTC [51] LOG:  duration: 0.266 ms
2024-12-09 08:13:33.602 UTC [51] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:13:33.602 UTC [51] LOG:  duration: 0.045 ms
2024-12-09 08:13:33.614 UTC [51] LOG:  duration: 0.156 ms
2024-12-09 08:13:33.614 UTC [51] LOG:  duration: 0.298 ms
2024-12-09 08:13:33.614 UTC [51] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:13:33.614 UTC [51] LOG:  duration: 0.044 ms
2024-12-09 08:13:33.625 UTC [51] LOG:  duration: 0.161 ms
2024-12-09 08:13:33.625 UTC [51] LOG:  duration: 0.156 ms
2024-12-09 08:13:33.625 UTC [51] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	where not datistemplate
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2024-12-09 08:13:33.625 UTC [51] LOG:  duration: 0.040 ms
2024-12-09 08:13:33.634 UTC [51] LOG:  duration: 0.136 ms
2024-12-09 08:13:33.634 UTC [51] LOG:  duration: 0.255 ms
2024-12-09 08:13:33.634 UTC [51] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:13:33.634 UTC [51] LOG:  duration: 0.046 ms
2024-12-09 08:13:33.643 UTC [51] LOG:  duration: 0.160 ms
2024-12-09 08:13:33.643 UTC [51] LOG:  duration: 0.253 ms
2024-12-09 08:13:33.643 UTC [51] LOG:  execute S_1: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:13:33.643 UTC [51] LOG:  duration: 0.043 ms
2024-12-09 08:13:33.651 UTC [51] LOG:  duration: 0.135 ms
2024-12-09 08:13:33.651 UTC [51] LOG:  duration: 0.070 ms
2024-12-09 08:13:33.651 UTC [51] LOG:  execute <unnamed>: select case
	  when pg_catalog.pg_is_in_recovery()
	    then $1
	  else
	    pg_catalog.txid_current()::varchar::bigint
	  end as current_txid
2024-12-09 08:13:33.651 UTC [51] DETAIL:  parameters: $1 = '492'
2024-12-09 08:13:33.651 UTC [51] LOG:  duration: 0.021 ms
2024-12-09 08:13:33.658 UTC [51] LOG:  duration: 0.346 ms
2024-12-09 08:13:33.659 UTC [51] LOG:  duration: 0.161 ms
2024-12-09 08:13:33.659 UTC [51] LOG:  execute <unnamed>: select L.transactionid::varchar::bigint as transaction_id
	from pg_catalog.pg_locks L
	where L.transactionid is not null
	order by pg_catalog.age(L.transactionid) desc
	limit 1
2024-12-09 08:13:33.659 UTC [51] LOG:  duration: 0.108 ms
2024-12-09 08:13:33.667 UTC [51] LOG:  duration: 0.243 ms
2024-12-09 08:13:33.667 UTC [51] LOG:  duration: 0.176 ms
2024-12-09 08:13:33.667 UTC [51] LOG:  execute <unnamed>: select usesuper
	from pg_user
	where usename = current_user
2024-12-09 08:13:33.667 UTC [51] LOG:  duration: 0.035 ms
2024-12-09 08:13:33.674 UTC [51] LOG:  duration: 0.262 ms
2024-12-09 08:13:33.674 UTC [51] LOG:  duration: 0.128 ms
2024-12-09 08:13:33.674 UTC [51] LOG:  execute <unnamed>: select lanname
	from pg_catalog.pg_language
	order by lanname
2024-12-09 08:13:33.674 UTC [51] LOG:  duration: 0.044 ms
2024-12-09 08:13:33.683 UTC [51] LOG:  duration: 0.156 ms
2024-12-09 08:13:33.683 UTC [51] LOG:  duration: 0.479 ms
2024-12-09 08:13:33.683 UTC [51] LOG:  execute <unnamed>: select distinct oid
	from pg_catalog.pg_am
	union
	select distinct oid
	from pg_catalog.pg_foreign_data_wrapper
	union
	select distinct oid
	from pg_catalog.pg_foreign_server
	union
	select distinct oid
	from pg_catalog.pg_extension
	
	union
	select distinct oid
	from pg_catalog.pg_user_mapping
	
2024-12-09 08:13:33.683 UTC [51] LOG:  duration: 0.077 ms
2024-12-09 08:13:33.691 UTC [51] LOG:  duration: 0.167 ms
2024-12-09 08:13:33.691 UTC [51] LOG:  duration: 0.069 ms
2024-12-09 08:13:33.691 UTC [51] LOG:  execute <unnamed>: select D.objoid id
	from pg_catalog.pg_description D
	where D.classoid in (
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
2024-12-09 08:13:33.691 UTC [51] LOG:  duration: 0.343 ms
2024-12-09 08:13:33.699 UTC [51] LOG:  duration: 0.100 ms
2024-12-09 08:13:33.699 UTC [51] LOG:  duration: 0.085 ms
2024-12-09 08:13:33.699 UTC [51] LOG:  execute <unnamed>: select pg_catalog.age($1::varchar::xid) as database_age
2024-12-09 08:13:33.699 UTC [51] DETAIL:  parameters: $1 = '492'
2024-12-09 08:13:33.699 UTC [51] LOG:  duration: 0.013 ms
2024-12-09 08:13:33.707 UTC [51] LOG:  duration: 0.262 ms
2024-12-09 08:13:33.708 UTC [51] LOG:  duration: 0.339 ms
2024-12-09 08:13:33.708 UTC [51] LOG:  execute <unnamed>: select A.oid as access_method_id,
	       A.xmin as state_number,
	       A.amname as access_method_name
	       ,
	       A.amhandler::oid as handler_id,
	       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
	       A.amtype as access_method_type
	       
	from pg_am A
	  join pg_proc P on A.amhandler::oid = P.oid
	  join pg_namespace N on P.pronamespace = N.oid
	  
	where pg_catalog.age(A.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:13:33.708 UTC [51] DETAIL:  parameters: $1 = '492'
2024-12-09 08:13:33.708 UTC [51] LOG:  duration: 0.031 ms
2024-12-09 08:13:33.714 UTC [51] LOG:  duration: 0.077 ms
2024-12-09 08:13:33.714 UTC [51] LOG:  duration: 0.034 ms
2024-12-09 08:13:33.714 UTC [51] LOG:  execute <unnamed>: select pg_catalog.age($1::varchar::xid) as database_age
2024-12-09 08:13:33.714 UTC [51] DETAIL:  parameters: $1 = '492'
2024-12-09 08:13:33.714 UTC [51] LOG:  duration: 0.011 ms
2024-12-09 08:13:33.724 UTC [51] LOG:  duration: 0.228 ms
2024-12-09 08:13:33.724 UTC [51] LOG:  duration: 0.372 ms
2024-12-09 08:13:33.724 UTC [51] LOG:  execute <unnamed>: select fdw.oid as id,
	       fdw.xmin as state_number,
	       fdw.fdwname as name,
	       pr.proname as handler,
	       nspc.nspname as handler_schema,
	       pr2.proname as validator,
	       nspc2.nspname as validator_schema,
	       fdw.fdwoptions as options,
	       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
	from pg_catalog.pg_foreign_data_wrapper fdw
	     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
	     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
	     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
	     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
	  where pg_catalog.age(fdw.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:13:33.724 UTC [51] DETAIL:  parameters: $1 = '492'
2024-12-09 08:13:33.724 UTC [51] LOG:  duration: 0.031 ms
2024-12-09 08:13:33.731 UTC [51] LOG:  duration: 0.086 ms
2024-12-09 08:13:33.731 UTC [51] LOG:  duration: 0.035 ms
2024-12-09 08:13:33.731 UTC [51] LOG:  execute <unnamed>: select pg_catalog.age($1::varchar::xid) as database_age
2024-12-09 08:13:33.731 UTC [51] DETAIL:  parameters: $1 = '492'
2024-12-09 08:13:33.731 UTC [51] LOG:  duration: 0.011 ms
2024-12-09 08:13:33.737 UTC [51] LOG:  duration: 0.125 ms
2024-12-09 08:13:33.738 UTC [51] LOG:  duration: 0.095 ms
2024-12-09 08:13:33.738 UTC [51] LOG:  execute <unnamed>: select srv.oid as id,
	       srv.srvfdw as fdw_id,
	       srv.xmin as state_number,
	       srv.srvname as name,
	       srv.srvtype as type,
	       srv.srvversion as version,
	       srv.srvoptions as options,
	       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
	from pg_catalog.pg_foreign_server srv
	  where pg_catalog.age(srv.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:13:33.738 UTC [51] DETAIL:  parameters: $1 = '492'
2024-12-09 08:13:33.738 UTC [51] LOG:  duration: 0.023 ms
2024-12-09 08:13:33.744 UTC [51] LOG:  duration: 0.074 ms
2024-12-09 08:13:33.744 UTC [51] LOG:  duration: 0.037 ms
2024-12-09 08:13:33.744 UTC [51] LOG:  execute <unnamed>: select pg_catalog.age($1::varchar::xid) as database_age
2024-12-09 08:13:33.744 UTC [51] DETAIL:  parameters: $1 = '492'
2024-12-09 08:13:33.744 UTC [51] LOG:  duration: 0.025 ms
2024-12-09 08:13:33.751 UTC [51] LOG:  duration: 0.256 ms
2024-12-09 08:13:33.751 UTC [51] LOG:  duration: 0.252 ms
2024-12-09 08:13:33.751 UTC [51] LOG:  execute <unnamed>: select pg_extension.oid as id,
	       pg_extension.xmin as state_number,
	       extname as name,
	       extversion as version,
	       extnamespace as schema_id,
	       nspname as schema_name,
	       array(select target
	             from pg_extension_update_paths(extname)
	             where source = extversion and path is not null) as available_updates
	from pg_catalog.pg_extension
	  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
	where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:13:33.751 UTC [51] DETAIL:  parameters: $1 = '492'
2024-12-09 08:13:33.751 UTC [51] LOG:  duration: 0.032 ms
2024-12-09 08:13:33.757 UTC [51] LOG:  duration: 0.064 ms
2024-12-09 08:13:33.758 UTC [51] LOG:  duration: 0.054 ms
2024-12-09 08:13:33.758 UTC [51] LOG:  execute S_2: select pg_catalog.age($1::varchar::xid) as database_age
2024-12-09 08:13:33.758 UTC [51] DETAIL:  parameters: $1 = '492'
2024-12-09 08:13:33.758 UTC [51] LOG:  duration: 0.011 ms
2024-12-09 08:13:33.764 UTC [51] LOG:  duration: 0.383 ms
2024-12-09 08:13:33.765 UTC [51] LOG:  duration: 0.136 ms
2024-12-09 08:13:33.765 UTC [51] LOG:  execute <unnamed>: select D.objoid id, case
	    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
	    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
	    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
	    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
	    
	  end as kind,
	  D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	where classoid in (
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
	and pg_catalog.age(D.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:13:33.765 UTC [51] DETAIL:  parameters: $1 = '492'
2024-12-09 08:13:33.765 UTC [51] LOG:  duration: 0.500 ms
2024-12-09 08:13:33.774 UTC [51] LOG:  duration: 0.098 ms
2024-12-09 08:13:33.774 UTC [51] LOG:  execute S_2: select pg_catalog.age($1::varchar::xid) as database_age
2024-12-09 08:13:33.774 UTC [51] DETAIL:  parameters: $1 = '492'
2024-12-09 08:13:33.774 UTC [51] LOG:  duration: 0.015 ms
2024-12-09 08:13:33.785 UTC [51] LOG:  duration: 0.422 ms
2024-12-09 08:13:33.786 UTC [51] LOG:  duration: 0.630 ms
2024-12-09 08:13:33.786 UTC [51] LOG:  execute <unnamed>: select 'sequence' as dependent_kind,
	       'table' as owner_kind,
	       D.objid as dependent_id,
	       D.refobjid as owner_id,
	       D.refobjsubid as owner_subobject_id
	from pg_depend D
	  join pg_class C_SEQ on D.objid = C_SEQ.oid
	  join pg_class C_TAB on D.refobjid = C_TAB.oid
	where C_SEQ.relkind = 'S'
	  and C_TAB.relkind = 'r'
	  and D.refobjsubid <> 0
	  and (D.deptype = 'a' or D.deptype = 'i')
2024-12-09 08:13:33.787 UTC [51] LOG:  duration: 1.575 ms
2024-12-09 08:13:33.812 UTC [51] LOG:  duration: 1.032 ms
2024-12-09 08:13:33.815 UTC [51] LOG:  duration: 3.134 ms
2024-12-09 08:13:33.815 UTC [51] LOG:  execute <unnamed>: with saved_age as (select greatest(pg_catalog.age($1::varchar::xid), pg_catalog.age($2::varchar::xid)) as "value")
	select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
	(
	  select X.last_tx as last_tx
	  from (
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_type
	      where typnamespace = $3::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_class
	      where relnamespace = $4::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_proc
	      where pronamespace = $5::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_operator
	      where oprnamespace = $6::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select A.xmin as last_tx
	      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
	      where K.relnamespace = $7::oid
	      order by pg_catalog.age(A.xmin)
	      limit 1
	    )
	    union all
	    (
	    select E.xmin as last_tx
	      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
	      where T.typnamespace = $8::oid
	      order by pg_catalog.age(E.xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_constraint
	      where connamespace = $9::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select CO.xmin as last_tx
	      from pg_catalog.pg_collation CO
	      where CO.collnamespace = $10::oid
	      order by pg_catalog.age(CO.xmin)
	      limit 1
	    )
	    union all
	    
	    (
	    select IX.xmin as last_tx
	      from pg_catalog.pg_index IX,
	           pg_catalog.pg_class IC
	      where IC.oid = IX.indrelid
	        and IC.relnamespace = $11::oid
	        order by pg_catalog.age(IX.xmin)
	        limit 1
	    )
	    union all
	    (
	    select RU.xmin as last_tx
	      from pg_catalog.pg_rewrite RU,
	           pg_catalog.pg_class RC
	      where RC.oid = RU.ev_class
	        and RC.relnamespace = $12::oid
	        order by pg_catalog.age(RU.xmin)
	        limit 1
	    )
	    union all
	    (
	    select TG.xmin as last_tx
	      from pg_catalog.pg_trigger TG,
	           pg_catalog.pg_class TC
	      where TC.oid = TG.tgrelid
	        and TC.relnamespace = $13::oid
	        order by pg_catalog.age(TG.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_class C on C.oid = D.objoid
	      where C.relnamespace = $14::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_constraint C on C.oid = D.objoid
	      where C.connamespace = $15::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_trigger T on T.oid = D.objoid
	        join pg_catalog.pg_class C on C.oid = T.tgrelid
	      where C.relnamespace = $16::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_rewrite R on R.oid = D.objoid
	        join pg_catalog.pg_class C on C.oid = R.ev_class
	      where C.relnamespace = $17::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_proc P on P.oid = D.objoid
	      where P.pronamespace = $18::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_type T on T.oid = D.objoid
	      where T.typnamespace = $19::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_operator O on O.oid = D.objoid
	      where O.oprnamespace = $20::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_collation C on C.oid = D.objoid
	      where C.collnamespace = $21::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    
	  ) X
	  order by pg_catalog.age(X.last_tx)
	  limit 1
	) C, saved_age SA
2024-12-09 08:13:33.815 UTC [51] DETAIL:  parameters: $1 = '0', $2 = '0', $3 = '2200', $4 = '2200', $5 = '2200', $6 = '2200', $7 = '2200', $8 = '2200', $9 = '2200', $10 = '2200', $11 = '2200', $12 = '2200', $13 = '2200', $14 = '2200', $15 = '2200', $16 = '2200', $17 = '2200', $18 = '2200', $19 = '2200', $20 = '2200', $21 = '2200'
2024-12-09 08:13:33.817 UTC [51] LOG:  duration: 1.341 ms
2024-12-09 08:13:33.828 UTC [51] LOG:  duration: 0.190 ms
2024-12-09 08:13:33.828 UTC [51] LOG:  duration: 0.040 ms
2024-12-09 08:13:33.828 UTC [51] LOG:  execute <unnamed>: select case
	  when pg_catalog.pg_is_in_recovery()
	    then $1
	  else
	    pg_catalog.txid_current()::varchar::bigint
	  end as current_txid
2024-12-09 08:13:33.828 UTC [51] DETAIL:  parameters: $1 = '0'
2024-12-09 08:13:33.828 UTC [51] LOG:  duration: 0.031 ms
2024-12-09 08:13:33.838 UTC [51] LOG:  duration: 0.121 ms
2024-12-09 08:13:33.838 UTC [51] LOG:  duration: 0.107 ms
2024-12-09 08:13:33.838 UTC [51] LOG:  execute <unnamed>: select L.transactionid::varchar::bigint as transaction_id
	from pg_catalog.pg_locks L
	where L.transactionid is not null
	order by pg_catalog.age(L.transactionid) desc
	limit 1
2024-12-09 08:13:33.838 UTC [51] LOG:  duration: 0.086 ms
2024-12-09 08:13:33.861 UTC [51] LOG:  duration: 0.252 ms
2024-12-09 08:13:33.861 UTC [51] LOG:  duration: 0.195 ms
2024-12-09 08:13:33.861 UTC [51] LOG:  execute <unnamed>: select cls.xmin as sequence_state_number,
	       sq.seqrelid as sequence_id,
	       cls.relname as sequence_name,
	       pg_catalog.format_type(sq.seqtypid, null) as data_type,
	       sq.seqstart as next_value,
	       sq.seqincrement as inc_value,
	       sq.seqmin as min_value,
	       sq.seqmax as max_value,
	       sq.seqcache as cache_size,
	       sq.seqcycle as cycle_option,
	       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
	from pg_catalog.pg_sequence sq
	    join pg_class cls on sq.seqrelid = cls.oid
	    where cls.relnamespace = $1::oid
	          --  and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid)
2024-12-09 08:13:33.861 UTC [51] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:33.861 UTC [51] LOG:  duration: 0.088 ms
2024-12-09 08:13:33.874 UTC [51] LOG:  duration: 0.314 ms
2024-12-09 08:13:33.874 UTC [51] LOG:  duration: 0.407 ms
2024-12-09 08:13:33.874 UTC [51] LOG:  execute <unnamed>: select T.oid as type_id,
	       T.xmin as type_state_number,
	       T.typname as type_name,
	       T.typtype as type_sub_kind,
	       T.typcategory as type_category,
	       T.typrelid as class_id,
	       T.typbasetype as base_type_id,
	       case when T.typtype in ('c','e') then null
	            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
	       T.typdefault as default_expression,
	       T.typnotnull as mandatory,
	       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
	from pg_catalog.pg_type T
	         left outer join pg_catalog.pg_class C
	             on T.typrelid = C.oid
	where T.typnamespace = $1::oid
	  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
	  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
	order by 1
2024-12-09 08:13:33.874 UTC [51] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:33.874 UTC [51] LOG:  duration: 0.105 ms
2024-12-09 08:13:33.886 UTC [51] LOG:  duration: 0.413 ms
2024-12-09 08:13:33.886 UTC [51] LOG:  duration: 0.364 ms
2024-12-09 08:13:33.886 UTC [51] LOG:  execute <unnamed>: select T.relkind as table_kind,
	       T.relname as table_name,
	       T.oid as table_id,
	       T.xmin as table_state_number,
	       false /* T.relhasoids */ as table_with_oids,
	       T.relnamespace as tablespace_id,
	       T.reloptions as options,
	       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
	       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
	       T.relispartition /* false */ as is_partition,
	       pg_catalog.pg_get_partkeydef(T.oid) /* null */ as partition_key,
	       pg_catalog.pg_get_expr(T.relpartbound, T.oid) /* null */ as partition_expression,
	       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
	from pg_catalog.pg_class T
	where relnamespace = $1::oid
	  and relkind in ('r', 'm', 'v', 'f', 'p')
	  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
	order by table_kind, table_id
2024-12-09 08:13:33.886 UTC [51] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:33.886 UTC [51] LOG:  duration: 0.192 ms
2024-12-09 08:13:33.899 UTC [51] LOG:  duration: 0.220 ms
2024-12-09 08:13:33.900 UTC [51] LOG:  duration: 0.266 ms
2024-12-09 08:13:33.900 UTC [51] LOG:  execute <unnamed>: select ft.ftrelid as table_id,
	       srv.srvname as table_server,
	       ft.ftoptions as table_options,
	       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
	from pg_catalog.pg_foreign_table ft
	     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
	     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
	where cls.relnamespace = $1::oid
	  --  and pg_catalog.age(ft.xmin) <= pg_catalog.age(:tx::varchar::xid)
	order by table_id
2024-12-09 08:13:33.900 UTC [51] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:33.900 UTC [51] LOG:  duration: 0.085 ms
2024-12-09 08:13:33.910 UTC [51] LOG:  duration: 0.441 ms
2024-12-09 08:13:33.910 UTC [51] LOG:  duration: 0.525 ms
2024-12-09 08:13:33.910 UTC [51] LOG:  execute <unnamed>: with schema_procs as (select prorettype, proargtypes, proallargtypes
	                      from pg_catalog.pg_proc
	                      where pronamespace = $1::oid
	                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
	     schema_opers as (select oprleft, oprright, oprresult
	                      from pg_catalog.pg_operator
	                      where oprnamespace = $2::oid
	                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
	     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
	                           from pg_catalog.pg_aggregate A
	                           join pg_catalog.pg_proc P
	                             on A.aggfnoid = P.oid
	                           where P.pronamespace = $3::oid
	                           /* and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid)) */),
	     schema_arg_types as ( select prorettype as type_id
	                           from schema_procs
	                           union
	                           select distinct unnest(proargtypes) as type_id
	                           from schema_procs
	                           union
	                           select distinct unnest(proallargtypes) as type_id
	                           from schema_procs
	                           union
	                           select oprleft as type_id
	                           from schema_opers
	                           where oprleft is not null
	                           union
	                           select oprright as type_id
	                           from schema_opers
	                           where oprright is not null
	                           union
	                           select oprresult as type_id
	                           from schema_opers
	                           where oprresult is not null
	                           union
	                           select aggtranstype::oid as type_id
	                           from schema_aggregates
	                           union
	                           select aggmtranstype::oid as type_id
	                           from schema_aggregates
	                           
	                           )
	select type_id, pg_catalog.format_type(type_id, null) as type_spec
	from schema_arg_types
	where type_id <> 0
2024-12-09 08:13:33.910 UTC [51] DETAIL:  parameters: $1 = '2200', $2 = '2200', $3 = '2200'
2024-12-09 08:13:33.911 UTC [51] LOG:  duration: 0.531 ms
2024-12-09 08:13:33.920 UTC [51] LOG:  duration: 0.327 ms
2024-12-09 08:13:33.920 UTC [51] LOG:  duration: 0.389 ms
2024-12-09 08:13:33.921 UTC [51] LOG:  execute <unnamed>: with languages as (select oid as lang_oid, lanname as lang
	                   from pg_catalog.pg_language),
	     routines as (select proname as r_name,
	                         prolang as lang_oid,
	                         oid as r_id,
	                         xmin as r_state_number,
	                         proargnames as arg_names,
	                         proargmodes as arg_modes,
	                         proargtypes::int[] as in_arg_types,
	                         proallargtypes::int[] as all_arg_types,
	                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
	                         provariadic as arg_variadic_id,
	                         prorettype as ret_type_id,
	                         proretset as ret_set,
	                         prokind /* case when proiswindow then 'w'
	                                                when proisagg then 'a'
	                                                else 'f'
	                                           end */ as kind,
	                         provolatile as volatile_kind,
	                         proisstrict as is_strict,
	                         prosecdef as is_security_definer,
	                         proconfig as configuration_parameters,
	                         procost as cost,
	                         pg_catalog.pg_get_userbyid(proowner) as "owner",
	                         prorows as rows ,
	                         proleakproof as is_leakproof  ,
	                         proparallel as concurrency_kind 
	                  from pg_catalog.pg_proc
	                  where pronamespace = $1::oid
	                    and not (prokind = 'a') /* proisagg */
	                    /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */)
	select *
	from routines natural join languages
2024-12-09 08:13:33.921 UTC [51] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:33.921 UTC [51] LOG:  duration: 0.501 ms
2024-12-09 08:13:33.932 UTC [51] LOG:  duration: 0.817 ms
2024-12-09 08:13:34.155 UTC [51] LOG:  duration: 222.677 ms
2024-12-09 08:13:34.155 UTC [51] LOG:  execute <unnamed>: with procedures as (
	  select P.oid as function_id,
	         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
	         P.prorettype as return_type
	  from pg_catalog.pg_proc P
	  join pg_catalog.pg_namespace N
	    on P.pronamespace = N.oid
	),
	operators as (
	  select O.oid as operator_id,
	         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
	  from pg_catalog.pg_operator O
	  join pg_catalog.pg_namespace N
	    on O.oprnamespace = N.oid
	)
	select P.oid as aggregate_id,
	       P.xmin as state_number,
	       P.proname as aggregate_name,
	       P.proargnames as arg_names,
	       P.proargmodes as arg_modes,
	       P.proargtypes::int[] as in_arg_types,
	       P.proallargtypes::int[] as all_arg_types,
	       A.aggtransfn::oid as transition_function_id,
	       PT.function_name::text as transition_function_name,
	       A.aggtranstype as transition_type,
	       A.aggfinalfn::oid as final_function_id,
	       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
	       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
	       A.agginitval as initial_value,
	       A.aggsortop as sort_operator_id,
	       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
	       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
	       ,
	       A.aggfinalextra as final_extra,
	       A.aggtransspace as state_size,
	       A.aggmtransfn::oid as moving_transition_id,
	       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
	       A.aggminvtransfn::oid as inverse_transition_id,
	       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
	       A.aggmtranstype::oid as moving_state_type,
	       A.aggmtransspace as moving_state_size,
	       A.aggmfinalfn::oid as moving_final_id,
	       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
	       A.aggmfinalextra as moving_final_extra,
	       A.aggminitval as moving_initial_value,
	       A.aggkind as aggregate_kind,
	       A.aggnumdirectargs as direct_args
	       
	       ,
	       A.aggcombinefn::oid as combine_function_id,
	       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
	       A.aggserialfn::oid as serialization_function_id,
	       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
	       A.aggdeserialfn::oid as deserialization_function_id,
	       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
	       P.proparallel as concurrency_kind
	       
	from pg_catalog.pg_aggregate A
	join pg_catalog.pg_proc P
	  on A.aggfnoid = P.oid
	join procedures PT
	  on A.aggtransfn::oid = PT.function_id
	left outer join procedures PF
	  on A.aggfinalfn::oid = PF.function_id
	left outer join operators O
	  on A.aggsortop = O.operator_id
	left outer join procedures FTP
	  on A.aggmtransfn = FTP.function_id
	left outer join procedures ITP
	  on A.aggminvtransfn = ITP.function_id
	left outer join procedures FFP
	  on A.aggmfinalfn = FFP.function_id
	
	left outer join procedures CP
	  on A.aggcombinefn = CP.function_id
	left outer join procedures SP
	  on A.aggserialfn = SP.function_id
	left outer join procedures DP
	  on A.aggdeserialfn = DP.function_id
	
	where P.pronamespace = $1::oid
	--  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid))
	order by P.oid
2024-12-09 08:13:34.155 UTC [51] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:36.117 UTC [51] LOG:  duration: 1962.310 ms
2024-12-09 08:13:36.134 UTC [51] LOG:  duration: 0.274 ms
2024-12-09 08:13:36.134 UTC [51] LOG:  duration: 0.138 ms
2024-12-09 08:13:36.134 UTC [51] LOG:  execute <unnamed>: select O.oid as op_id,
	       O.xmin as state_number,
	       oprname as op_name,
	       oprkind as op_kind,
	       oprleft as arg_left_type_id,
	       oprright as arg_right_type_id,
	       oprresult as arg_result_type_id,
	       oprcode as func_main,
	       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
	from pg_catalog.pg_operator O
	where oprnamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
2024-12-09 08:13:36.134 UTC [51] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:36.134 UTC [51] LOG:  duration: 0.109 ms
2024-12-09 08:13:36.148 UTC [51] LOG:  duration: 0.335 ms
2024-12-09 08:13:36.149 UTC [51] LOG:  duration: 0.347 ms
2024-12-09 08:13:36.149 UTC [51] LOG:  execute <unnamed>: select oid as id,
	       xmin as state_number,
	       collname as name,
	       collcollate as lc_collate,
	       collctype as lc_ctype,
	       pg_catalog.pg_get_userbyid(collowner) as "owner"
	from pg_catalog.pg_collation
	where collnamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
2024-12-09 08:13:36.149 UTC [51] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:36.149 UTC [51] LOG:  duration: 0.132 ms
2024-12-09 08:13:36.161 UTC [51] LOG:  duration: 0.555 ms
2024-12-09 08:13:36.162 UTC [51] LOG:  duration: 0.669 ms
2024-12-09 08:13:36.162 UTC [51] LOG:  execute <unnamed>: with T as ( select distinct T.oid as table_id, T.relname as table_name
	            from pg_catalog.pg_class T,
	                 pg_catalog.pg_attribute A
	            where T.relnamespace = $1::oid
	              and T.relkind in ('r', 'm', 'v', 'f', 'p')
	              --  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid))
	              and A.attrelid = T.oid )
	select T.table_id,
	       C.attnum as column_position,
	       C.attname as column_name,
	       C.xmin as column_state_number,
	       C.atttypmod as type_mod,
	       C.attndims as dimensions_number,
	       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
	       C.atttypid as type_id,
	       C.attnotnull as mandatory,
	       pg_catalog.pg_get_expr(D.adbin, T.table_id) /* D.adsrc */ as column_default_expression,
	       not C.attislocal as column_is_inherited,
	       C.attfdwoptions as options,
	       C.attisdropped as column_is_dropped,
	       C.attidentity /* null */ as identity_kind
	from T
	  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
	  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
	where attnum > 0
	order by table_id, attnum
2024-12-09 08:13:36.162 UTC [51] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:36.162 UTC [51] LOG:  duration: 0.353 ms
2024-12-09 08:13:36.180 UTC [51] LOG:  duration: 0.653 ms
2024-12-09 08:13:36.181 UTC [51] LOG:  duration: 0.953 ms
2024-12-09 08:13:36.181 UTC [51] LOG:  execute <unnamed>: with tab as ( select relnamespace as schema_id,
	                     oid as table_id,
	                     relkind as table_kind
	              from pg_catalog.pg_class
	              where relnamespace = $1::oid
	                and relkind in ('r','m','v','p')),
	    ind_head as ( select indrelid as table_id,
	                         indexrelid as index_id,
	                         indisunique as is_unique,
	                         indisprimary as is_primary,
	                         indkey as column_positions,
	                         indclass as column_operators,
	                         indoption as column_options,
	                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
	                         case when indexprs is not null
	                             then pg_catalog.array_to_string(array(
	                                      select case when indkey[k] = 0
	                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
	                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
	                                             end
	                                      from pg_catalog.generate_subscripts(indkey, 1) as k
	                                      order by k),
	                                  chr(28))
	                             else null end as expressions
	                  from pg_catalog.pg_index ),
	    ind_stor as ( select cls.relnamespace as schema_id,
	                         cls.oid as index_id,
	                         cls.xmin as state_number,
	                         cls.relname as index_name,
	                         pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') /* am.amcanorder */ as can_order
	                  from pg_catalog.pg_class cls
	                    /* join pg_catalog.pg_am am on (cls.relam = am.oid)*/
	                  where cls.relkind = 'i'
	                    /* and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid) */)
	select table_id, table_kind,
	       index_name, index_id, state_number,
	       is_unique, is_primary,
	       column_positions, column_operators, column_options,
	       condition, expressions, can_order
	from tab natural join ind_head natural join ind_stor
2024-12-09 08:13:36.181 UTC [51] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:36.181 UTC [51] LOG:  duration: 0.251 ms
2024-12-09 08:13:36.188 UTC [51] LOG:  duration: 0.213 ms
2024-12-09 08:13:36.188 UTC [51] LOG:  duration: 0.269 ms
2024-12-09 08:13:36.188 UTC [51] LOG:  execute <unnamed>: SELECT n.nspname = ANY(current_schemas(true)), n.nspname, t.typname FROM pg_catalog.pg_type t JOIN pg_catalog.pg_namespace n ON t.typnamespace = n.oid WHERE t.oid = $1
2024-12-09 08:13:36.188 UTC [51] DETAIL:  parameters: $1 = '22'
2024-12-09 08:13:36.188 UTC [51] LOG:  duration: 0.048 ms
2024-12-09 08:13:36.190 UTC [51] LOG:  duration: 0.255 ms
2024-12-09 08:13:36.190 UTC [51] LOG:  duration: 0.488 ms
2024-12-09 08:13:36.190 UTC [51] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc, typtype   FROM pg_catalog.pg_type   LEFT   JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE typname = $1  ORDER BY sp.r, pg_type.oid DESC LIMIT 1
2024-12-09 08:13:36.190 UTC [51] DETAIL:  parameters: $1 = 'int2vector'
2024-12-09 08:13:36.191 UTC [51] LOG:  duration: 0.114 ms
2024-12-09 08:13:36.192 UTC [51] LOG:  duration: 0.158 ms
2024-12-09 08:13:36.192 UTC [51] LOG:  duration: 0.174 ms
2024-12-09 08:13:36.192 UTC [51] LOG:  execute <unnamed>: SELECT n.nspname = ANY(current_schemas(true)), n.nspname, t.typname FROM pg_catalog.pg_type t JOIN pg_catalog.pg_namespace n ON t.typnamespace = n.oid WHERE t.oid = $1
2024-12-09 08:13:36.192 UTC [51] DETAIL:  parameters: $1 = '30'
2024-12-09 08:13:36.192 UTC [51] LOG:  duration: 0.051 ms
2024-12-09 08:13:36.194 UTC [51] LOG:  duration: 0.221 ms
2024-12-09 08:13:36.194 UTC [51] LOG:  duration: 0.355 ms
2024-12-09 08:13:36.194 UTC [51] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc, typtype   FROM pg_catalog.pg_type   LEFT   JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE typname = $1  ORDER BY sp.r, pg_type.oid DESC LIMIT 1
2024-12-09 08:13:36.194 UTC [51] DETAIL:  parameters: $1 = 'oidvector'
2024-12-09 08:13:36.194 UTC [51] LOG:  duration: 0.115 ms
2024-12-09 08:13:36.207 UTC [51] LOG:  duration: 0.483 ms
2024-12-09 08:13:36.208 UTC [51] LOG:  duration: 0.593 ms
2024-12-09 08:13:36.208 UTC [51] LOG:  execute <unnamed>: with T as ( select oid as table_id,
	                   relkind as table_kind,
	                   xmin as table_state_id
	            from pg_catalog.pg_class
	            where relkind in ('r','v','f','p')
	              and relnamespace = $1::oid ),
	     C as ( select conrelid as table_id,
	                   oid::bigint as con_id,
	                   xmin as con_state_id,
	                   conname as con_name,
	                   contype as con_kind,
	                   conkey as con_columns,
	                   conindid as index_id,
	                   confrelid as ref_table_id,
	                   confkey as ref_columns,
	                   condeferrable as is_deferrable,
	                   condeferred as is_init_deferred,
	                   confupdtype as on_update,
	                   confdeltype as on_delete,
	                   conbin /* consrc */
	            from pg_catalog.pg_constraint
	            where contype in ('p','u','f','c')
	              and connamespace = $2::oid )
	select table_id,
	       table_kind,
	       con_id,
	       con_state_id::varchar::bigint as con_state_id,
	       con_name,
	       con_kind,
	       con_columns,
	       index_id,
	       ref_table_id,
	       is_deferrable,
	       is_init_deferred,
	       on_update,
	       on_delete,
	       pg_catalog.pg_get_expr(conbin, table_id) /* consrc */ as con_expression,
	       ref_columns
	from T natural join C
	--  where pg_catalog.age(table_state_id) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(:tx::varchar::xid)
	order by pg_catalog.strpos('pufc', con_kind)
2024-12-09 08:13:36.208 UTC [51] DETAIL:  parameters: $1 = '2200', $2 = '2200'
2024-12-09 08:13:36.208 UTC [51] LOG:  duration: 0.124 ms
2024-12-09 08:13:36.224 UTC [51] LOG:  duration: 0.323 ms
2024-12-09 08:13:36.224 UTC [51] LOG:  duration: 0.325 ms
2024-12-09 08:13:36.224 UTC [51] LOG:  execute <unnamed>: select R.ev_class as table_id,
	       R.oid as rule_id,
	       R.xmin as rule_state_number,
	       R.rulename as rule_name,
	       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
	       R.ev_enabled as rule_fire_mode,
	       R.is_instead as rule_is_instead
	from pg_catalog.pg_rewrite R
	where R.ev_class in (select oid
	                     from pg_catalog.pg_class
	                     where relnamespace = $1::oid)
	  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:tx::varchar::xid)
	  and R.rulename != '_RETURN'::name
	order by R.ev_class::bigint, ev_type
2024-12-09 08:13:36.224 UTC [51] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:36.225 UTC [51] LOG:  duration: 0.096 ms
2024-12-09 08:13:36.236 UTC [51] LOG:  duration: 0.288 ms
2024-12-09 08:13:36.237 UTC [51] LOG:  duration: 0.240 ms
2024-12-09 08:13:36.237 UTC [51] LOG:  execute <unnamed>: select T.tgrelid as table_id,
	       T.oid as trigger_id,
	       T.xmin as trigger_state_number,
	       T.tgname as trigger_name,
	       T.tgfoid as function_id,
	       T.tgtype & 31 as bits,
	       T.tgdeferrable as is_deferrable,
	       T.tginitdeferred as is_init_deferred,
	       T.tgenabled as trigger_fire_mode,
	       T.tgattr as columns,
	       pg_catalog.pg_get_triggerdef(T.oid, true) as source_code
	from pg_catalog.pg_trigger T
	where T.tgrelid in (select oid
	                    from pg_catalog.pg_class
	                    where relnamespace = $1::oid)
	  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
	  and not T.tgisinternal
2024-12-09 08:13:36.237 UTC [51] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:36.237 UTC [51] LOG:  duration: 0.104 ms
2024-12-09 08:13:36.249 UTC [51] LOG:  duration: 0.596 ms
2024-12-09 08:13:36.251 UTC [51] LOG:  duration: 1.867 ms
2024-12-09 08:13:36.251 UTC [51] LOG:  execute <unnamed>: select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_class C on D.objoid = C.oid
	where C.relnamespace = $1::oid and C.relkind != 'c'
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
	  left join pg_catalog.pg_class C on T.typrelid = C.oid
	where T.typnamespace = $2::oid and (C.relkind = 'c' or C.relkind is null)
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_constraint C on D.objoid = C.oid
	where C.connamespace = $3::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_trigger T on T.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = T.tgrelid
	where C.relnamespace = $4::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_rewrite R on R.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = R.ev_class
	where C.relnamespace = $5::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_proc P on P.oid = D.objoid
	where P.pronamespace = $6::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_operator O on O.oid = D.objoid
	where O.oprnamespace = $7::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_collation C on C.oid = D.objoid
	where C.collnamespace = $8::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	
2024-12-09 08:13:36.251 UTC [51] DETAIL:  parameters: $1 = '2200', $2 = '2200', $3 = '2200', $4 = '2200', $5 = '2200', $6 = '2200', $7 = '2200', $8 = '2200'
2024-12-09 08:13:36.252 UTC [51] LOG:  duration: 0.866 ms
2024-12-09 08:13:36.263 UTC [51] LOG:  duration: 0.469 ms
2024-12-09 08:13:36.264 UTC [51] LOG:  duration: 0.391 ms
2024-12-09 08:13:36.264 UTC [51] LOG:  execute <unnamed>: select distinct
	       T.relkind as view_kind,
	       T.oid as view_id,
	       pg_catalog.pg_get_viewdef(T.oid, true) as source_text
	from pg_catalog.pg_class T
	  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
	  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
	where N.oid = $1::oid
	  and T.relkind in ('m','v')
	  --  and (pg_catalog.age(T.xmin) <= pg_catalog.age(:src_tx::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(:src_tx::varchar::xid))
2024-12-09 08:13:36.264 UTC [51] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:36.264 UTC [51] LOG:  duration: 0.177 ms
2024-12-09 08:13:36.273 UTC [51] LOG:  duration: 0.367 ms
2024-12-09 08:13:36.274 UTC [51] LOG:  duration: 0.262 ms
2024-12-09 08:13:36.274 UTC [51] LOG:  execute <unnamed>: with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
	            from pg_catalog.pg_class
	            where relnamespace = $1::oid
	              and relkind in ('r', 'm', 'v', 'f', 'p') )
	select table_kind,
	       table_id,
	       R.oid as rule_id,
	       pg_catalog.pg_get_ruledef(R.oid, true) as source_text
	from A join pg_catalog.pg_rewrite R
	        on A.table_id = R.ev_class
	where R.rulename != '_RETURN'::name
	  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:src_tx::varchar::xid)
2024-12-09 08:13:36.274 UTC [51] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:36.274 UTC [51] LOG:  duration: 0.112 ms
2024-12-09 08:13:36.288 UTC [51] LOG:  duration: 0.281 ms
2024-12-09 08:13:36.288 UTC [51] LOG:  duration: 0.198 ms
2024-12-09 08:13:36.288 UTC [51] LOG:  execute <unnamed>: with system_languages as ( select oid as lang
	                           from pg_catalog.pg_language
	                           where lanname in ('c','internal') )
	select oid as id,
	       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
	       pg_catalog.pg_get_function_result(oid) as result_def,
	       prosrc as source_text
	from pg_catalog.pg_proc
	where pronamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= pg_catalog.age(:src_tx::varchar::xid)
	  and not (prokind = 'a') /* proisagg */
	  and prolang not in (select lang from system_languages)
	  and prosrc is not null
2024-12-09 08:13:36.288 UTC [51] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:36.289 UTC [51] LOG:  duration: 0.892 ms
2024-12-09 08:13:36.302 UTC [51] LOG:  duration: 0.218 ms
2024-12-09 08:13:36.303 UTC [51] LOG:  duration: 0.332 ms
2024-12-09 08:13:36.303 UTC [51] LOG:  execute <unnamed>: select distinct connamespace as schema_id
	from pg_catalog.pg_constraint F,
	     pg_catalog.pg_class O
	where F.contype = 'f'
	  and F.confrelid = O.oid
	  and O.relnamespace in ($1)
2024-12-09 08:13:36.303 UTC [51] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:13:36.303 UTC [51] LOG:  duration: 0.071 ms
2024-12-09 08:13:36.340 UTC [51] LOG:  duration: 0.043 ms
2024-12-09 08:13:36.340 UTC [51] LOG:  duration: 0.011 ms
2024-12-09 08:13:36.340 UTC [51] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:13:36.340 UTC [51] LOG:  duration: 0.021 ms
2024-12-09 08:13:40.484 UTC [53] LOG:  connection received: host=172.18.0.1 port=45142
2024-12-09 08:13:40.486 UTC [53] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:13:40.489 UTC [53] LOG:  duration: 0.064 ms
2024-12-09 08:13:40.489 UTC [53] LOG:  duration: 0.007 ms
2024-12-09 08:13:40.489 UTC [53] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:13:40.489 UTC [53] LOG:  duration: 0.013 ms
2024-12-09 08:13:40.489 UTC [53] LOG:  duration: 0.036 ms
2024-12-09 08:13:40.489 UTC [53] LOG:  duration: 0.003 ms
2024-12-09 08:13:40.489 UTC [53] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:13:40.489 UTC [53] LOG:  duration: 0.015 ms
2024-12-09 08:13:40.491 UTC [53] LOG:  duration: 0.204 ms
2024-12-09 08:13:40.491 UTC [53] LOG:  duration: 0.056 ms
2024-12-09 08:13:40.491 UTC [53] LOG:  execute <unnamed>: select version()
2024-12-09 08:13:40.491 UTC [53] LOG:  duration: 0.020 ms
2024-12-09 08:13:40.499 UTC [53] LOG:  duration: 0.024 ms
2024-12-09 08:13:40.499 UTC [53] LOG:  duration: 0.006 ms
2024-12-09 08:13:40.504 UTC [53] LOG:  duration: 0.188 ms
2024-12-09 08:13:40.504 UTC [53] LOG:  duration: 0.057 ms
2024-12-09 08:13:40.504 UTC [53] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2024-12-09 08:13:40.504 UTC [53] LOG:  duration: 0.036 ms
2024-12-09 08:13:40.509 UTC [53] LOG:  duration: 0.497 ms
2024-12-09 08:13:40.510 UTC [53] LOG:  duration: 0.587 ms
2024-12-09 08:13:40.510 UTC [53] LOG:  execute <unnamed>: SELECT e.typdelim FROM pg_catalog.pg_type t, pg_catalog.pg_type e WHERE t.oid = $1 and t.typelem = e.oid
2024-12-09 08:13:40.510 UTC [53] DETAIL:  parameters: $1 = '1003'
2024-12-09 08:13:40.510 UTC [53] LOG:  duration: 0.040 ms
2024-12-09 08:13:40.515 UTC [53] LOG:  duration: 0.139 ms
2024-12-09 08:13:40.515 UTC [53] LOG:  duration: 0.030 ms
2024-12-09 08:13:40.515 UTC [53] LOG:  execute <unnamed>: select current_database(), current_schema(), current_user
2024-12-09 08:13:40.515 UTC [53] LOG:  duration: 0.012 ms
2024-12-09 08:13:40.522 UTC [53] LOG:  duration: 0.317 ms
2024-12-09 08:13:40.522 UTC [53] LOG:  duration: 0.039 ms
2024-12-09 08:13:40.522 UTC [53] LOG:  execute <unnamed>: select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
2024-12-09 08:13:40.523 UTC [53] LOG:  duration: 0.073 ms
2024-12-09 08:13:40.541 UTC [53] LOG:  duration: 0.399 ms
2024-12-09 08:13:40.542 UTC [53] LOG:  duration: 0.242 ms
2024-12-09 08:13:40.542 UTC [53] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	where not datistemplate
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2024-12-09 08:13:40.542 UTC [53] LOG:  duration: 0.051 ms
2024-12-09 08:13:40.554 UTC [53] LOG:  duration: 0.311 ms
2024-12-09 08:13:40.555 UTC [53] LOG:  duration: 0.593 ms
2024-12-09 08:13:40.555 UTC [53] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:13:40.555 UTC [53] LOG:  duration: 0.072 ms
2024-12-09 08:13:40.559 UTC [53] LOG:  duration: 0.153 ms
2024-12-09 08:13:40.559 UTC [53] LOG:  duration: 0.182 ms
2024-12-09 08:13:40.559 UTC [53] LOG:  execute <unnamed>: SELECT n.nspname = ANY(current_schemas(true)), n.nspname, t.typname FROM pg_catalog.pg_type t JOIN pg_catalog.pg_namespace n ON t.typnamespace = n.oid WHERE t.oid = $1
2024-12-09 08:13:40.559 UTC [53] DETAIL:  parameters: $1 = '28'
2024-12-09 08:13:40.559 UTC [53] LOG:  duration: 0.038 ms
2024-12-09 08:13:40.561 UTC [53] LOG:  duration: 0.481 ms
2024-12-09 08:13:40.561 UTC [53] LOG:  duration: 0.312 ms
2024-12-09 08:13:40.561 UTC [53] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc, typtype   FROM pg_catalog.pg_type   LEFT   JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE typname = $1  ORDER BY sp.r, pg_type.oid DESC LIMIT 1
2024-12-09 08:13:40.561 UTC [53] DETAIL:  parameters: $1 = 'xid'
2024-12-09 08:13:40.561 UTC [53] LOG:  duration: 0.103 ms
2024-12-09 08:13:40.567 UTC [53] LOG:  duration: 0.376 ms
2024-12-09 08:13:40.568 UTC [53] LOG:  duration: 0.341 ms
2024-12-09 08:13:40.568 UTC [53] LOG:  execute <unnamed>: select R.oid::bigint as role_id, rolname as role_name,
	  rolsuper is_super, rolinherit is_inherit,
	  rolcreaterole can_createrole, rolcreatedb can_createdb,
	  rolcanlogin can_login, rolreplication /* false */ is_replication,
	  rolconnlimit conn_limit, rolvaliduntil valid_until,
	  rolbypassrls /* false */ bypass_rls, rolconfig config,
	  D.description
	from pg_catalog.pg_roles R
	  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
2024-12-09 08:13:40.568 UTC [53] LOG:  duration: 0.069 ms
2024-12-09 08:13:40.576 UTC [53] LOG:  duration: 0.151 ms
2024-12-09 08:13:40.576 UTC [53] LOG:  duration: 0.152 ms
2024-12-09 08:13:40.576 UTC [53] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	where not datistemplate
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2024-12-09 08:13:40.576 UTC [53] LOG:  duration: 0.038 ms
2024-12-09 08:13:40.583 UTC [53] LOG:  duration: 0.155 ms
2024-12-09 08:13:40.584 UTC [53] LOG:  duration: 0.297 ms
2024-12-09 08:13:40.584 UTC [53] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:13:40.584 UTC [53] LOG:  duration: 0.045 ms
2024-12-09 08:13:40.593 UTC [53] LOG:  duration: 0.145 ms
2024-12-09 08:13:40.594 UTC [53] LOG:  duration: 0.302 ms
2024-12-09 08:13:40.594 UTC [53] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:13:40.594 UTC [53] LOG:  duration: 0.042 ms
2024-12-09 08:13:40.602 UTC [53] LOG:  duration: 0.181 ms
2024-12-09 08:13:40.602 UTC [53] LOG:  duration: 0.187 ms
2024-12-09 08:13:40.602 UTC [53] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	where not datistemplate
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2024-12-09 08:13:40.602 UTC [53] LOG:  duration: 0.057 ms
2024-12-09 08:13:40.612 UTC [53] LOG:  duration: 0.268 ms
2024-12-09 08:13:40.612 UTC [53] LOG:  duration: 0.324 ms
2024-12-09 08:13:40.612 UTC [53] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:13:40.612 UTC [53] LOG:  duration: 0.044 ms
2024-12-09 08:13:40.621 UTC [53] LOG:  duration: 0.174 ms
2024-12-09 08:13:40.621 UTC [53] LOG:  duration: 0.248 ms
2024-12-09 08:13:40.621 UTC [53] LOG:  execute S_1: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:13:40.621 UTC [53] LOG:  duration: 0.045 ms
2024-12-09 08:13:40.628 UTC [53] LOG:  duration: 0.156 ms
2024-12-09 08:13:40.628 UTC [53] LOG:  duration: 0.079 ms
2024-12-09 08:13:40.628 UTC [53] LOG:  execute <unnamed>: select case
	  when pg_catalog.pg_is_in_recovery()
	    then $1
	  else
	    pg_catalog.txid_current()::varchar::bigint
	  end as current_txid
2024-12-09 08:13:40.628 UTC [53] DETAIL:  parameters: $1 = '496'
2024-12-09 08:13:40.628 UTC [53] LOG:  duration: 0.040 ms
2024-12-09 08:13:40.635 UTC [53] LOG:  duration: 0.235 ms
2024-12-09 08:13:40.635 UTC [53] LOG:  duration: 0.122 ms
2024-12-09 08:13:40.635 UTC [53] LOG:  execute <unnamed>: select L.transactionid::varchar::bigint as transaction_id
	from pg_catalog.pg_locks L
	where L.transactionid is not null
	order by pg_catalog.age(L.transactionid) desc
	limit 1
2024-12-09 08:13:40.635 UTC [53] LOG:  duration: 0.088 ms
2024-12-09 08:13:40.641 UTC [53] LOG:  duration: 0.281 ms
2024-12-09 08:13:40.641 UTC [53] LOG:  duration: 0.160 ms
2024-12-09 08:13:40.641 UTC [53] LOG:  execute <unnamed>: select usesuper
	from pg_user
	where usename = current_user
2024-12-09 08:13:40.641 UTC [53] LOG:  duration: 0.016 ms
2024-12-09 08:13:40.647 UTC [53] LOG:  duration: 0.159 ms
2024-12-09 08:13:40.647 UTC [53] LOG:  duration: 0.094 ms
2024-12-09 08:13:40.647 UTC [53] LOG:  execute <unnamed>: select lanname
	from pg_catalog.pg_language
	order by lanname
2024-12-09 08:13:40.647 UTC [53] LOG:  duration: 0.042 ms
2024-12-09 08:13:40.653 UTC [53] LOG:  duration: 0.192 ms
2024-12-09 08:13:40.654 UTC [53] LOG:  duration: 0.474 ms
2024-12-09 08:13:40.654 UTC [53] LOG:  execute <unnamed>: select distinct oid
	from pg_catalog.pg_am
	union
	select distinct oid
	from pg_catalog.pg_foreign_data_wrapper
	union
	select distinct oid
	from pg_catalog.pg_foreign_server
	union
	select distinct oid
	from pg_catalog.pg_extension
	
	union
	select distinct oid
	from pg_catalog.pg_user_mapping
	
2024-12-09 08:13:40.654 UTC [53] LOG:  duration: 0.071 ms
2024-12-09 08:13:40.660 UTC [53] LOG:  duration: 0.218 ms
2024-12-09 08:13:40.660 UTC [53] LOG:  duration: 0.097 ms
2024-12-09 08:13:40.660 UTC [53] LOG:  execute <unnamed>: select D.objoid id
	from pg_catalog.pg_description D
	where D.classoid in (
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
2024-12-09 08:13:40.660 UTC [53] LOG:  duration: 0.404 ms
2024-12-09 08:13:40.666 UTC [53] LOG:  duration: 0.112 ms
2024-12-09 08:13:40.666 UTC [53] LOG:  duration: 0.058 ms
2024-12-09 08:13:40.666 UTC [53] LOG:  execute <unnamed>: select pg_catalog.age($1::varchar::xid) as database_age
2024-12-09 08:13:40.666 UTC [53] DETAIL:  parameters: $1 = '496'
2024-12-09 08:13:40.666 UTC [53] LOG:  duration: 0.026 ms
2024-12-09 08:13:40.673 UTC [53] LOG:  duration: 0.365 ms
2024-12-09 08:13:40.674 UTC [53] LOG:  duration: 0.560 ms
2024-12-09 08:13:40.674 UTC [53] LOG:  execute <unnamed>: select A.oid as access_method_id,
	       A.xmin as state_number,
	       A.amname as access_method_name
	       ,
	       A.amhandler::oid as handler_id,
	       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
	       A.amtype as access_method_type
	       
	from pg_am A
	  join pg_proc P on A.amhandler::oid = P.oid
	  join pg_namespace N on P.pronamespace = N.oid
	  
	where pg_catalog.age(A.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:13:40.674 UTC [53] DETAIL:  parameters: $1 = '496'
2024-12-09 08:13:40.674 UTC [53] LOG:  duration: 0.037 ms
2024-12-09 08:13:40.682 UTC [53] LOG:  duration: 0.125 ms
2024-12-09 08:13:40.682 UTC [53] LOG:  duration: 0.066 ms
2024-12-09 08:13:40.682 UTC [53] LOG:  execute <unnamed>: select pg_catalog.age($1::varchar::xid) as database_age
2024-12-09 08:13:40.682 UTC [53] DETAIL:  parameters: $1 = '496'
2024-12-09 08:13:40.682 UTC [53] LOG:  duration: 0.016 ms
2024-12-09 08:13:40.689 UTC [53] LOG:  duration: 0.350 ms
2024-12-09 08:13:40.689 UTC [53] LOG:  duration: 0.413 ms
2024-12-09 08:13:40.689 UTC [53] LOG:  execute <unnamed>: select fdw.oid as id,
	       fdw.xmin as state_number,
	       fdw.fdwname as name,
	       pr.proname as handler,
	       nspc.nspname as handler_schema,
	       pr2.proname as validator,
	       nspc2.nspname as validator_schema,
	       fdw.fdwoptions as options,
	       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
	from pg_catalog.pg_foreign_data_wrapper fdw
	     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
	     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
	     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
	     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
	  where pg_catalog.age(fdw.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:13:40.689 UTC [53] DETAIL:  parameters: $1 = '496'
2024-12-09 08:13:40.689 UTC [53] LOG:  duration: 0.040 ms
2024-12-09 08:13:40.699 UTC [53] LOG:  duration: 0.094 ms
2024-12-09 08:13:40.699 UTC [53] LOG:  duration: 0.049 ms
2024-12-09 08:13:40.699 UTC [53] LOG:  execute <unnamed>: select pg_catalog.age($1::varchar::xid) as database_age
2024-12-09 08:13:40.699 UTC [53] DETAIL:  parameters: $1 = '496'
2024-12-09 08:13:40.699 UTC [53] LOG:  duration: 0.012 ms
2024-12-09 08:13:40.709 UTC [53] LOG:  duration: 0.140 ms
2024-12-09 08:13:40.709 UTC [53] LOG:  duration: 0.100 ms
2024-12-09 08:13:40.709 UTC [53] LOG:  execute <unnamed>: select srv.oid as id,
	       srv.srvfdw as fdw_id,
	       srv.xmin as state_number,
	       srv.srvname as name,
	       srv.srvtype as type,
	       srv.srvversion as version,
	       srv.srvoptions as options,
	       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
	from pg_catalog.pg_foreign_server srv
	  where pg_catalog.age(srv.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:13:40.709 UTC [53] DETAIL:  parameters: $1 = '496'
2024-12-09 08:13:40.709 UTC [53] LOG:  duration: 0.017 ms
2024-12-09 08:13:40.718 UTC [53] LOG:  duration: 0.075 ms
2024-12-09 08:13:40.718 UTC [53] LOG:  duration: 0.047 ms
2024-12-09 08:13:40.718 UTC [53] LOG:  execute <unnamed>: select pg_catalog.age($1::varchar::xid) as database_age
2024-12-09 08:13:40.718 UTC [53] DETAIL:  parameters: $1 = '496'
2024-12-09 08:13:40.718 UTC [53] LOG:  duration: 0.013 ms
2024-12-09 08:13:40.728 UTC [53] LOG:  duration: 0.195 ms
2024-12-09 08:13:40.728 UTC [53] LOG:  duration: 0.202 ms
2024-12-09 08:13:40.728 UTC [53] LOG:  execute <unnamed>: select pg_extension.oid as id,
	       pg_extension.xmin as state_number,
	       extname as name,
	       extversion as version,
	       extnamespace as schema_id,
	       nspname as schema_name,
	       array(select target
	             from pg_extension_update_paths(extname)
	             where source = extversion and path is not null) as available_updates
	from pg_catalog.pg_extension
	  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
	where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:13:40.728 UTC [53] DETAIL:  parameters: $1 = '496'
2024-12-09 08:13:40.728 UTC [53] LOG:  duration: 0.027 ms
2024-12-09 08:13:40.737 UTC [53] LOG:  duration: 0.105 ms
2024-12-09 08:13:40.737 UTC [53] LOG:  duration: 0.064 ms
2024-12-09 08:13:40.737 UTC [53] LOG:  execute S_2: select pg_catalog.age($1::varchar::xid) as database_age
2024-12-09 08:13:40.737 UTC [53] DETAIL:  parameters: $1 = '496'
2024-12-09 08:13:40.737 UTC [53] LOG:  duration: 0.015 ms
2024-12-09 08:13:40.747 UTC [53] LOG:  duration: 0.290 ms
2024-12-09 08:13:40.747 UTC [53] LOG:  duration: 0.115 ms
2024-12-09 08:13:40.747 UTC [53] LOG:  execute <unnamed>: select D.objoid id, case
	    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
	    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
	    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
	    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
	    
	  end as kind,
	  D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	where classoid in (
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
	and pg_catalog.age(D.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:13:40.747 UTC [53] DETAIL:  parameters: $1 = '496'
2024-12-09 08:13:40.747 UTC [53] LOG:  duration: 0.360 ms
2024-12-09 08:13:40.758 UTC [53] LOG:  duration: 0.085 ms
2024-12-09 08:13:40.759 UTC [53] LOG:  execute S_2: select pg_catalog.age($1::varchar::xid) as database_age
2024-12-09 08:13:40.759 UTC [53] DETAIL:  parameters: $1 = '496'
2024-12-09 08:13:40.759 UTC [53] LOG:  duration: 0.017 ms
2024-12-09 08:13:40.770 UTC [53] LOG:  duration: 0.332 ms
2024-12-09 08:13:40.770 UTC [53] LOG:  duration: 0.581 ms
2024-12-09 08:13:40.770 UTC [53] LOG:  execute <unnamed>: select 'sequence' as dependent_kind,
	       'table' as owner_kind,
	       D.objid as dependent_id,
	       D.refobjid as owner_id,
	       D.refobjsubid as owner_subobject_id
	from pg_depend D
	  join pg_class C_SEQ on D.objid = C_SEQ.oid
	  join pg_class C_TAB on D.refobjid = C_TAB.oid
	where C_SEQ.relkind = 'S'
	  and C_TAB.relkind = 'r'
	  and D.refobjsubid <> 0
	  and (D.deptype = 'a' or D.deptype = 'i')
2024-12-09 08:13:40.772 UTC [53] LOG:  duration: 1.487 ms
2024-12-09 08:13:40.782 UTC [53] LOG:  duration: 1.278 ms
2024-12-09 08:13:40.786 UTC [53] LOG:  duration: 3.847 ms
2024-12-09 08:13:40.786 UTC [53] LOG:  execute <unnamed>: with saved_age as (select greatest(pg_catalog.age($1::varchar::xid), pg_catalog.age($2::varchar::xid)) as "value")
	select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
	(
	  select X.last_tx as last_tx
	  from (
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_type
	      where typnamespace = $3::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_class
	      where relnamespace = $4::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_proc
	      where pronamespace = $5::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_operator
	      where oprnamespace = $6::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select A.xmin as last_tx
	      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
	      where K.relnamespace = $7::oid
	      order by pg_catalog.age(A.xmin)
	      limit 1
	    )
	    union all
	    (
	    select E.xmin as last_tx
	      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
	      where T.typnamespace = $8::oid
	      order by pg_catalog.age(E.xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_constraint
	      where connamespace = $9::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select CO.xmin as last_tx
	      from pg_catalog.pg_collation CO
	      where CO.collnamespace = $10::oid
	      order by pg_catalog.age(CO.xmin)
	      limit 1
	    )
	    union all
	    
	    (
	    select IX.xmin as last_tx
	      from pg_catalog.pg_index IX,
	           pg_catalog.pg_class IC
	      where IC.oid = IX.indrelid
	        and IC.relnamespace = $11::oid
	        order by pg_catalog.age(IX.xmin)
	        limit 1
	    )
	    union all
	    (
	    select RU.xmin as last_tx
	      from pg_catalog.pg_rewrite RU,
	           pg_catalog.pg_class RC
	      where RC.oid = RU.ev_class
	        and RC.relnamespace = $12::oid
	        order by pg_catalog.age(RU.xmin)
	        limit 1
	    )
	    union all
	    (
	    select TG.xmin as last_tx
	      from pg_catalog.pg_trigger TG,
	           pg_catalog.pg_class TC
	      where TC.oid = TG.tgrelid
	        and TC.relnamespace = $13::oid
	        order by pg_catalog.age(TG.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_class C on C.oid = D.objoid
	      where C.relnamespace = $14::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_constraint C on C.oid = D.objoid
	      where C.connamespace = $15::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_trigger T on T.oid = D.objoid
	        join pg_catalog.pg_class C on C.oid = T.tgrelid
	      where C.relnamespace = $16::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_rewrite R on R.oid = D.objoid
	        join pg_catalog.pg_class C on C.oid = R.ev_class
	      where C.relnamespace = $17::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_proc P on P.oid = D.objoid
	      where P.pronamespace = $18::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_type T on T.oid = D.objoid
	      where T.typnamespace = $19::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_operator O on O.oid = D.objoid
	      where O.oprnamespace = $20::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_collation C on C.oid = D.objoid
	      where C.collnamespace = $21::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    
	  ) X
	  order by pg_catalog.age(X.last_tx)
	  limit 1
	) C, saved_age SA
2024-12-09 08:13:40.786 UTC [53] DETAIL:  parameters: $1 = '497', $2 = '497', $3 = '2200', $4 = '2200', $5 = '2200', $6 = '2200', $7 = '2200', $8 = '2200', $9 = '2200', $10 = '2200', $11 = '2200', $12 = '2200', $13 = '2200', $14 = '2200', $15 = '2200', $16 = '2200', $17 = '2200', $18 = '2200', $19 = '2200', $20 = '2200', $21 = '2200'
2024-12-09 08:13:40.788 UTC [53] LOG:  duration: 1.459 ms
2024-12-09 08:13:40.795 UTC [53] LOG:  duration: 0.141 ms
2024-12-09 08:13:40.795 UTC [53] LOG:  duration: 0.039 ms
2024-12-09 08:13:40.795 UTC [53] LOG:  execute <unnamed>: select case
	  when pg_catalog.pg_is_in_recovery()
	    then $1
	  else
	    pg_catalog.txid_current()::varchar::bigint
	  end as current_txid
2024-12-09 08:13:40.795 UTC [53] DETAIL:  parameters: $1 = '497'
2024-12-09 08:13:40.795 UTC [53] LOG:  duration: 0.032 ms
2024-12-09 08:13:40.808 UTC [53] LOG:  duration: 0.124 ms
2024-12-09 08:13:40.808 UTC [53] LOG:  duration: 0.098 ms
2024-12-09 08:13:40.808 UTC [53] LOG:  execute <unnamed>: select L.transactionid::varchar::bigint as transaction_id
	from pg_catalog.pg_locks L
	where L.transactionid is not null
	order by pg_catalog.age(L.transactionid) desc
	limit 1
2024-12-09 08:13:40.808 UTC [53] LOG:  duration: 0.076 ms
2024-12-09 08:13:40.814 UTC [53] LOG:  duration: 0.261 ms
2024-12-09 08:13:40.815 UTC [53] LOG:  duration: 0.636 ms
2024-12-09 08:13:40.815 UTC [53] LOG:  execute <unnamed>: select distinct oid
	from pg_catalog.pg_type
	where typnamespace = $1::oid
	union
	select distinct oid
	from pg_catalog.pg_class
	where relnamespace = $2::oid
	union
	select distinct oid
	from pg_catalog.pg_proc
	where pronamespace = $3::oid
	union
	select distinct oid
	from pg_catalog.pg_operator
	where oprnamespace = $4::oid
	union
	select distinct oid
	from pg_catalog.pg_constraint
	where connamespace = $5::oid
	union
	select distinct oid
	from pg_catalog.pg_collation
	where collnamespace = $6::oid
	union
	
	select distinct IX.indexrelid
	from pg_catalog.pg_index IX,
	     pg_catalog.pg_class IC
	where IC.oid = IX.indrelid
	  and IC.relnamespace = $7::oid
	union
	select distinct RU.oid
	from pg_catalog.pg_rewrite RU,
	     pg_catalog.pg_class RC
	where RC.oid = RU.ev_class
	  and RC.relnamespace = $8::oid
	  and not RU.rulename = '_RETURN'
	union
	select distinct TG.oid
	from pg_catalog.pg_trigger TG,
	     pg_catalog.pg_class TC
	where TC.oid = TG.tgrelid
	  and TC.relnamespace = $9::oid
2024-12-09 08:13:40.815 UTC [53] DETAIL:  parameters: $1 = '2200', $2 = '2200', $3 = '2200', $4 = '2200', $5 = '2200', $6 = '2200', $7 = '2200', $8 = '2200', $9 = '2200'
2024-12-09 08:13:40.816 UTC [53] LOG:  duration: 0.594 ms
2024-12-09 08:13:40.824 UTC [53] LOG:  duration: 0.512 ms
2024-12-09 08:13:40.825 UTC [53] LOG:  duration: 1.241 ms
2024-12-09 08:13:40.825 UTC [53] LOG:  execute <unnamed>: select D.objoid id, pg_catalog.array_agg(D.objsubid) sub_ids
	from pg_catalog.pg_description D
	  join pg_catalog.pg_class C on D.objoid = C.oid
	where C.relnamespace = $1::oid and C.relkind != 'c'
	group by D.objoid
	union all
	select T.oid id, pg_catalog.array_agg(D.objsubid)
	from pg_catalog.pg_description D
	  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
	  left join pg_catalog.pg_class C on T.typrelid = C.oid
	where T.typnamespace = $2::oid and (C.relkind = 'c' or C.relkind is null)
	group by T.oid
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_constraint C on D.objoid = C.oid
	where C.connamespace = $3::oid
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_trigger T on T.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = T.tgrelid
	where C.relnamespace = $4::oid
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_rewrite R on R.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = R.ev_class
	where C.relnamespace = $5::oid
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_proc P on P.oid = D.objoid
	where P.pronamespace = $6::oid
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_operator O on O.oid = D.objoid
	where O.oprnamespace = $7::oid
	union all
	select D.objoid id, array[D.objsubid]
	from pg_catalog.pg_description D
	  join pg_catalog.pg_collation C on C.oid = D.objoid
	where C.collnamespace = $8::oid
2024-12-09 08:13:40.825 UTC [53] DETAIL:  parameters: $1 = '2200', $2 = '2200', $3 = '2200', $4 = '2200', $5 = '2200', $6 = '2200', $7 = '2200', $8 = '2200'
2024-12-09 08:13:40.826 UTC [53] LOG:  duration: 0.559 ms
2024-12-09 08:13:40.855 UTC [53] LOG:  duration: 0.105 ms
2024-12-09 08:13:40.855 UTC [53] LOG:  duration: 0.009 ms
2024-12-09 08:13:40.855 UTC [53] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:13:40.855 UTC [53] LOG:  duration: 0.016 ms
2024-12-09 08:13:54.827 UTC [54] LOG:  connection received: host=172.18.0.1 port=40706
2024-12-09 08:13:54.840 UTC [54] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:13:54.865 UTC [54] LOG:  duration: 0.066 ms
2024-12-09 08:13:54.865 UTC [54] LOG:  duration: 0.008 ms
2024-12-09 08:13:54.865 UTC [54] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:13:54.865 UTC [54] LOG:  duration: 0.017 ms
2024-12-09 08:13:54.866 UTC [54] LOG:  duration: 0.023 ms
2024-12-09 08:13:54.866 UTC [54] LOG:  duration: 0.009 ms
2024-12-09 08:13:54.866 UTC [54] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:13:54.866 UTC [54] LOG:  duration: 0.018 ms
2024-12-09 08:13:54.890 UTC [54] LOG:  duration: 0.193 ms
2024-12-09 08:13:54.890 UTC [54] LOG:  duration: 0.051 ms
2024-12-09 08:13:54.890 UTC [54] LOG:  execute <unnamed>: select version()
2024-12-09 08:13:54.890 UTC [54] LOG:  duration: 0.016 ms
2024-12-09 08:13:54.931 UTC [54] LOG:  duration: 0.033 ms
2024-12-09 08:13:54.931 UTC [54] LOG:  duration: 0.010 ms
2024-12-09 08:13:55.030 UTC [54] LOG:  duration: 0.154 ms
2024-12-09 08:13:55.031 UTC [54] LOG:  duration: 0.028 ms
2024-12-09 08:13:55.031 UTC [54] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2024-12-09 08:13:55.031 UTC [54] LOG:  duration: 0.023 ms
2024-12-09 08:13:55.061 UTC [54] LOG:  duration: 0.396 ms
2024-12-09 08:13:55.061 UTC [54] LOG:  duration: 0.425 ms
2024-12-09 08:13:55.062 UTC [54] LOG:  execute <unnamed>: SELECT e.typdelim FROM pg_catalog.pg_type t, pg_catalog.pg_type e WHERE t.oid = $1 and t.typelem = e.oid
2024-12-09 08:13:55.062 UTC [54] DETAIL:  parameters: $1 = '1003'
2024-12-09 08:13:55.062 UTC [54] LOG:  duration: 0.035 ms
2024-12-09 08:13:55.070 UTC [54] ERROR:  relation "public.exchange_rates" does not exist at character 17
2024-12-09 08:13:55.070 UTC [54] STATEMENT:  SELECT t.*
	FROM public.exchange_rates t
	LIMIT 501
2024-12-09 08:13:55.100 UTC [54] LOG:  duration: 0.039 ms
2024-12-09 08:13:55.100 UTC [54] LOG:  duration: 0.008 ms
2024-12-09 08:13:55.100 UTC [54] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:13:55.100 UTC [54] LOG:  duration: 0.016 ms
2024-12-09 08:14:01.604 UTC [55] LOG:  connection received: host=172.18.0.1 port=39940
2024-12-09 08:14:01.606 UTC [55] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:14:01.608 UTC [55] LOG:  duration: 0.053 ms
2024-12-09 08:14:01.608 UTC [55] LOG:  duration: 0.016 ms
2024-12-09 08:14:01.608 UTC [55] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:14:01.608 UTC [55] LOG:  duration: 0.012 ms
2024-12-09 08:14:01.610 UTC [55] LOG:  duration: 0.029 ms
2024-12-09 08:14:01.610 UTC [55] LOG:  duration: 0.006 ms
2024-12-09 08:14:01.610 UTC [55] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:14:01.610 UTC [55] LOG:  duration: 0.020 ms
2024-12-09 08:14:01.611 UTC [55] LOG:  duration: 0.208 ms
2024-12-09 08:14:01.611 UTC [55] LOG:  duration: 0.061 ms
2024-12-09 08:14:01.611 UTC [55] LOG:  execute <unnamed>: select version()
2024-12-09 08:14:01.611 UTC [55] LOG:  duration: 0.017 ms
2024-12-09 08:14:01.626 UTC [55] LOG:  duration: 0.020 ms
2024-12-09 08:14:01.626 UTC [55] LOG:  duration: 0.006 ms
2024-12-09 08:14:01.750 UTC [55] LOG:  duration: 0.196 ms
2024-12-09 08:14:01.751 UTC [55] LOG:  duration: 0.038 ms
2024-12-09 08:14:01.751 UTC [55] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2024-12-09 08:14:01.751 UTC [55] LOG:  duration: 0.055 ms
2024-12-09 08:14:01.758 UTC [55] LOG:  duration: 0.540 ms
2024-12-09 08:14:01.758 UTC [55] LOG:  duration: 0.649 ms
2024-12-09 08:14:01.758 UTC [55] LOG:  execute <unnamed>: SELECT e.typdelim FROM pg_catalog.pg_type t, pg_catalog.pg_type e WHERE t.oid = $1 and t.typelem = e.oid
2024-12-09 08:14:01.758 UTC [55] DETAIL:  parameters: $1 = '1003'
2024-12-09 08:14:01.758 UTC [55] LOG:  duration: 0.028 ms
2024-12-09 08:14:01.766 UTC [55] ERROR:  relation "public.currencies" does not exist at character 17
2024-12-09 08:14:01.766 UTC [55] STATEMENT:  SELECT t.*
	FROM public.currencies t
	LIMIT 501
2024-12-09 08:14:01.773 UTC [55] LOG:  duration: 0.057 ms
2024-12-09 08:14:01.773 UTC [55] LOG:  duration: 0.008 ms
2024-12-09 08:14:01.773 UTC [55] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:14:01.773 UTC [55] LOG:  duration: 0.014 ms
2024-12-09 08:14:16.309 UTC [54] LOG:  duration: 0.019 ms
2024-12-09 08:14:16.309 UTC [54] LOG:  duration: 0.014 ms
2024-12-09 08:14:16.312 UTC [54] LOG:  duration: 0.018 ms
2024-12-09 08:14:16.312 UTC [54] LOG:  duration: 0.009 ms
2024-12-09 08:14:16.314 UTC [54] LOG:  duration: 0.034 ms
2024-12-09 08:14:16.314 UTC [54] LOG:  duration: 0.005 ms
2024-12-09 08:14:16.319 UTC [54] LOG:  duration: 0.040 ms
2024-12-09 08:14:16.319 UTC [54] LOG:  duration: 0.008 ms
2024-12-09 08:14:16.319 UTC [54] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:14:16.319 UTC [54] LOG:  duration: 0.017 ms
2024-12-09 08:14:16.332 UTC [54] LOG:  duration: 0.081 ms
2024-12-09 08:14:16.332 UTC [54] LOG:  duration: 0.038 ms
2024-12-09 08:14:16.332 UTC [54] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2024-12-09 08:14:16.332 UTC [54] LOG:  duration: 0.017 ms
2024-12-09 08:14:16.349 UTC [54] ERROR:  relation "public.exchange_rates" does not exist at character 17
2024-12-09 08:14:16.349 UTC [54] STATEMENT:  SELECT t.*
	FROM public.exchange_rates t
	LIMIT 501
2024-12-09 08:14:16.355 UTC [54] LOG:  duration: 0.032 ms
2024-12-09 08:14:16.355 UTC [54] LOG:  duration: 0.006 ms
2024-12-09 08:14:16.355 UTC [54] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:14:16.355 UTC [54] LOG:  duration: 0.014 ms
2024-12-09 08:14:17.347 UTC [55] LOG:  duration: 0.017 ms
2024-12-09 08:14:17.347 UTC [55] LOG:  duration: 0.006 ms
2024-12-09 08:14:17.349 UTC [55] LOG:  duration: 0.013 ms
2024-12-09 08:14:17.349 UTC [55] LOG:  duration: 0.005 ms
2024-12-09 08:14:17.350 UTC [55] LOG:  duration: 0.010 ms
2024-12-09 08:14:17.350 UTC [55] LOG:  duration: 0.005 ms
2024-12-09 08:14:17.356 UTC [55] LOG:  duration: 0.029 ms
2024-12-09 08:14:17.356 UTC [55] LOG:  duration: 0.006 ms
2024-12-09 08:14:17.356 UTC [55] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:14:17.356 UTC [55] LOG:  duration: 0.012 ms
2024-12-09 08:14:17.414 UTC [55] LOG:  duration: 0.067 ms
2024-12-09 08:14:17.414 UTC [55] LOG:  duration: 0.036 ms
2024-12-09 08:14:17.414 UTC [55] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2024-12-09 08:14:17.414 UTC [55] LOG:  duration: 0.020 ms
2024-12-09 08:14:17.425 UTC [55] ERROR:  relation "public.currencies" does not exist at character 17
2024-12-09 08:14:17.425 UTC [55] STATEMENT:  SELECT t.*
	FROM public.currencies t
	LIMIT 501
2024-12-09 08:14:17.432 UTC [55] LOG:  duration: 0.037 ms
2024-12-09 08:14:17.432 UTC [55] LOG:  duration: 0.008 ms
2024-12-09 08:14:17.432 UTC [55] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:14:17.432 UTC [55] LOG:  duration: 0.017 ms
2024-12-09 08:14:41.680 UTC [58] LOG:  connection received: host=172.18.0.1 port=48734
2024-12-09 08:14:41.682 UTC [58] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:14:41.684 UTC [58] LOG:  duration: 0.106 ms
2024-12-09 08:14:41.684 UTC [58] LOG:  duration: 0.005 ms
2024-12-09 08:14:41.684 UTC [58] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:14:41.684 UTC [58] LOG:  duration: 0.012 ms
2024-12-09 08:14:41.685 UTC [58] LOG:  duration: 0.024 ms
2024-12-09 08:14:41.685 UTC [58] LOG:  duration: 0.005 ms
2024-12-09 08:14:41.685 UTC [58] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:14:41.685 UTC [58] LOG:  duration: 0.018 ms
2024-12-09 08:14:41.687 UTC [58] LOG:  duration: 0.257 ms
2024-12-09 08:14:41.687 UTC [58] LOG:  duration: 0.050 ms
2024-12-09 08:14:41.687 UTC [58] LOG:  execute <unnamed>: select version()
2024-12-09 08:14:41.687 UTC [58] LOG:  duration: 0.015 ms
2024-12-09 08:14:41.695 UTC [58] LOG:  duration: 0.030 ms
2024-12-09 08:14:41.695 UTC [58] LOG:  duration: 0.005 ms
2024-12-09 08:14:41.725 UTC [58] LOG:  duration: 0.128 ms
2024-12-09 08:14:41.725 UTC [58] LOG:  duration: 0.038 ms
2024-12-09 08:14:41.725 UTC [58] LOG:  execute <unnamed>: select current_database(), current_schema(), current_user
2024-12-09 08:14:41.726 UTC [58] LOG:  duration: 0.038 ms
2024-12-09 08:14:41.771 UTC [58] LOG:  duration: 0.258 ms
2024-12-09 08:14:41.771 UTC [58] LOG:  duration: 0.041 ms
2024-12-09 08:14:41.771 UTC [58] LOG:  execute <unnamed>: select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
2024-12-09 08:14:41.771 UTC [58] LOG:  duration: 0.097 ms
2024-12-09 08:14:41.835 UTC [58] LOG:  duration: 0.768 ms
2024-12-09 08:14:41.835 UTC [58] LOG:  duration: 0.452 ms
2024-12-09 08:14:41.835 UTC [58] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	where not datistemplate
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2024-12-09 08:14:41.835 UTC [58] LOG:  duration: 0.085 ms
2024-12-09 08:14:41.847 UTC [58] LOG:  duration: 0.371 ms
2024-12-09 08:14:41.847 UTC [58] LOG:  duration: 0.500 ms
2024-12-09 08:14:41.847 UTC [58] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:14:41.848 UTC [58] LOG:  duration: 0.067 ms
2024-12-09 08:14:41.853 UTC [58] LOG:  duration: 0.425 ms
2024-12-09 08:14:41.854 UTC [58] LOG:  duration: 0.244 ms
2024-12-09 08:14:41.854 UTC [58] LOG:  execute <unnamed>: SELECT n.nspname = ANY(current_schemas(true)), n.nspname, t.typname FROM pg_catalog.pg_type t JOIN pg_catalog.pg_namespace n ON t.typnamespace = n.oid WHERE t.oid = $1
2024-12-09 08:14:41.854 UTC [58] DETAIL:  parameters: $1 = '28'
2024-12-09 08:14:41.854 UTC [58] LOG:  duration: 0.053 ms
2024-12-09 08:14:41.856 UTC [58] LOG:  duration: 0.495 ms
2024-12-09 08:14:41.856 UTC [58] LOG:  duration: 0.249 ms
2024-12-09 08:14:41.856 UTC [58] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc, typtype   FROM pg_catalog.pg_type   LEFT   JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE typname = $1  ORDER BY sp.r, pg_type.oid DESC LIMIT 1
2024-12-09 08:14:41.856 UTC [58] DETAIL:  parameters: $1 = 'xid'
2024-12-09 08:14:41.857 UTC [58] LOG:  duration: 0.101 ms
2024-12-09 08:14:41.865 UTC [58] LOG:  duration: 0.393 ms
2024-12-09 08:14:41.865 UTC [58] LOG:  duration: 0.370 ms
2024-12-09 08:14:41.865 UTC [58] LOG:  execute <unnamed>: select R.oid::bigint as role_id, rolname as role_name,
	  rolsuper is_super, rolinherit is_inherit,
	  rolcreaterole can_createrole, rolcreatedb can_createdb,
	  rolcanlogin can_login, rolreplication /* false */ is_replication,
	  rolconnlimit conn_limit, rolvaliduntil valid_until,
	  rolbypassrls /* false */ bypass_rls, rolconfig config,
	  D.description
	from pg_catalog.pg_roles R
	  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
2024-12-09 08:14:41.865 UTC [58] LOG:  duration: 0.081 ms
2024-12-09 08:14:41.876 UTC [58] LOG:  duration: 0.212 ms
2024-12-09 08:14:41.877 UTC [58] LOG:  duration: 0.198 ms
2024-12-09 08:14:41.877 UTC [58] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	where not datistemplate
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2024-12-09 08:14:41.877 UTC [58] LOG:  duration: 0.076 ms
2024-12-09 08:14:41.886 UTC [58] LOG:  duration: 0.197 ms
2024-12-09 08:14:41.886 UTC [58] LOG:  duration: 0.237 ms
2024-12-09 08:14:41.886 UTC [58] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:14:41.886 UTC [58] LOG:  duration: 0.108 ms
2024-12-09 08:14:41.902 UTC [58] LOG:  duration: 0.182 ms
2024-12-09 08:14:41.902 UTC [58] LOG:  duration: 0.233 ms
2024-12-09 08:14:41.902 UTC [58] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:14:41.902 UTC [58] LOG:  duration: 0.053 ms
2024-12-09 08:14:41.915 UTC [58] LOG:  duration: 0.219 ms
2024-12-09 08:14:41.915 UTC [58] LOG:  duration: 0.193 ms
2024-12-09 08:14:41.915 UTC [58] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	where not datistemplate
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2024-12-09 08:14:41.915 UTC [58] LOG:  duration: 0.070 ms
2024-12-09 08:14:41.925 UTC [58] LOG:  duration: 0.219 ms
2024-12-09 08:14:41.926 UTC [58] LOG:  duration: 0.259 ms
2024-12-09 08:14:41.926 UTC [58] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:14:41.926 UTC [58] LOG:  duration: 0.058 ms
2024-12-09 08:14:41.938 UTC [58] LOG:  duration: 0.227 ms
2024-12-09 08:14:41.939 UTC [58] LOG:  duration: 0.281 ms
2024-12-09 08:14:41.939 UTC [58] LOG:  execute S_1: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:14:41.939 UTC [58] LOG:  duration: 0.054 ms
2024-12-09 08:14:41.950 UTC [58] LOG:  duration: 0.147 ms
2024-12-09 08:14:41.950 UTC [58] LOG:  duration: 0.056 ms
2024-12-09 08:14:41.950 UTC [58] LOG:  execute <unnamed>: select case
	  when pg_catalog.pg_is_in_recovery()
	    then $1
	  else
	    pg_catalog.txid_current()::varchar::bigint
	  end as current_txid
2024-12-09 08:14:41.950 UTC [58] DETAIL:  parameters: $1 = '0'
2024-12-09 08:14:41.950 UTC [58] LOG:  duration: 0.034 ms
2024-12-09 08:14:41.959 UTC [58] LOG:  duration: 0.260 ms
2024-12-09 08:14:41.959 UTC [58] LOG:  duration: 0.175 ms
2024-12-09 08:14:41.959 UTC [58] LOG:  execute <unnamed>: select L.transactionid::varchar::bigint as transaction_id
	from pg_catalog.pg_locks L
	where L.transactionid is not null
	order by pg_catalog.age(L.transactionid) desc
	limit 1
2024-12-09 08:14:41.959 UTC [58] LOG:  duration: 0.119 ms
2024-12-09 08:14:41.966 UTC [58] LOG:  duration: 0.282 ms
2024-12-09 08:14:41.967 UTC [58] LOG:  duration: 0.139 ms
2024-12-09 08:14:41.967 UTC [58] LOG:  execute <unnamed>: select usesuper
	from pg_user
	where usename = current_user
2024-12-09 08:14:41.967 UTC [58] LOG:  duration: 0.029 ms
2024-12-09 08:14:41.973 UTC [58] LOG:  duration: 0.178 ms
2024-12-09 08:14:41.973 UTC [58] LOG:  duration: 0.112 ms
2024-12-09 08:14:41.973 UTC [58] LOG:  execute <unnamed>: select lanname
	from pg_catalog.pg_language
	order by lanname
2024-12-09 08:14:41.973 UTC [58] LOG:  duration: 0.034 ms
2024-12-09 08:14:41.980 UTC [58] LOG:  duration: 0.179 ms
2024-12-09 08:14:41.981 UTC [58] LOG:  duration: 0.488 ms
2024-12-09 08:14:41.981 UTC [58] LOG:  execute <unnamed>: select distinct oid
	from pg_catalog.pg_am
	union
	select distinct oid
	from pg_catalog.pg_foreign_data_wrapper
	union
	select distinct oid
	from pg_catalog.pg_foreign_server
	union
	select distinct oid
	from pg_catalog.pg_extension
	
	union
	select distinct oid
	from pg_catalog.pg_user_mapping
	
2024-12-09 08:14:41.981 UTC [58] LOG:  duration: 0.057 ms
2024-12-09 08:14:41.989 UTC [58] LOG:  duration: 0.176 ms
2024-12-09 08:14:41.989 UTC [58] LOG:  duration: 0.083 ms
2024-12-09 08:14:41.989 UTC [58] LOG:  execute <unnamed>: select D.objoid id
	from pg_catalog.pg_description D
	where D.classoid in (
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
2024-12-09 08:14:41.989 UTC [58] LOG:  duration: 0.375 ms
2024-12-09 08:14:41.997 UTC [58] LOG:  duration: 0.110 ms
2024-12-09 08:14:41.997 UTC [58] LOG:  duration: 0.089 ms
2024-12-09 08:14:41.997 UTC [58] LOG:  execute <unnamed>: select pg_catalog.age($1::varchar::xid) as database_age
2024-12-09 08:14:41.997 UTC [58] DETAIL:  parameters: $1 = '0'
2024-12-09 08:14:41.997 UTC [58] LOG:  duration: 0.015 ms
2024-12-09 08:14:42.006 UTC [58] LOG:  duration: 0.573 ms
2024-12-09 08:14:42.006 UTC [58] LOG:  duration: 0.440 ms
2024-12-09 08:14:42.006 UTC [58] LOG:  execute <unnamed>: select A.oid as access_method_id,
	       A.xmin as state_number,
	       A.amname as access_method_name
	       ,
	       A.amhandler::oid as handler_id,
	       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
	       A.amtype as access_method_type
	       
	from pg_am A
	  join pg_proc P on A.amhandler::oid = P.oid
	  join pg_namespace N on P.pronamespace = N.oid
	  
	where pg_catalog.age(A.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:14:42.006 UTC [58] DETAIL:  parameters: $1 = '0'
2024-12-09 08:14:42.006 UTC [58] LOG:  duration: 0.087 ms
2024-12-09 08:14:42.017 UTC [58] LOG:  duration: 0.297 ms
2024-12-09 08:14:42.017 UTC [58] LOG:  duration: 0.356 ms
2024-12-09 08:14:42.017 UTC [58] LOG:  execute <unnamed>: select fdw.oid as id,
	       fdw.xmin as state_number,
	       fdw.fdwname as name,
	       pr.proname as handler,
	       nspc.nspname as handler_schema,
	       pr2.proname as validator,
	       nspc2.nspname as validator_schema,
	       fdw.fdwoptions as options,
	       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
	from pg_catalog.pg_foreign_data_wrapper fdw
	     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
	     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
	     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
	     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
	  where pg_catalog.age(fdw.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:14:42.017 UTC [58] DETAIL:  parameters: $1 = '0'
2024-12-09 08:14:42.017 UTC [58] LOG:  duration: 0.036 ms
2024-12-09 08:14:42.026 UTC [58] LOG:  duration: 0.210 ms
2024-12-09 08:14:42.027 UTC [58] LOG:  duration: 0.111 ms
2024-12-09 08:14:42.027 UTC [58] LOG:  execute <unnamed>: select srv.oid as id,
	       srv.srvfdw as fdw_id,
	       srv.xmin as state_number,
	       srv.srvname as name,
	       srv.srvtype as type,
	       srv.srvversion as version,
	       srv.srvoptions as options,
	       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
	from pg_catalog.pg_foreign_server srv
	  where pg_catalog.age(srv.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:14:42.027 UTC [58] DETAIL:  parameters: $1 = '0'
2024-12-09 08:14:42.027 UTC [58] LOG:  duration: 0.040 ms
2024-12-09 08:14:42.036 UTC [58] LOG:  duration: 0.249 ms
2024-12-09 08:14:42.036 UTC [58] LOG:  duration: 0.227 ms
2024-12-09 08:14:42.036 UTC [58] LOG:  execute <unnamed>: select pg_extension.oid as id,
	       pg_extension.xmin as state_number,
	       extname as name,
	       extversion as version,
	       extnamespace as schema_id,
	       nspname as schema_name,
	       array(select target
	             from pg_extension_update_paths(extname)
	             where source = extversion and path is not null) as available_updates
	from pg_catalog.pg_extension
	  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
	where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:14:42.036 UTC [58] DETAIL:  parameters: $1 = '0'
2024-12-09 08:14:42.037 UTC [58] LOG:  duration: 0.211 ms
2024-12-09 08:14:42.041 UTC [58] LOG:  duration: 0.143 ms
2024-12-09 08:14:42.041 UTC [58] LOG:  duration: 0.190 ms
2024-12-09 08:14:42.041 UTC [58] LOG:  execute <unnamed>: SELECT e.typdelim FROM pg_catalog.pg_type t, pg_catalog.pg_type e WHERE t.oid = $1 and t.typelem = e.oid
2024-12-09 08:14:42.041 UTC [58] DETAIL:  parameters: $1 = '1009'
2024-12-09 08:14:42.041 UTC [58] LOG:  duration: 0.034 ms
2024-12-09 08:14:42.046 UTC [58] LOG:  duration: 0.248 ms
2024-12-09 08:14:42.046 UTC [58] LOG:  duration: 0.122 ms
2024-12-09 08:14:42.046 UTC [58] LOG:  execute <unnamed>: select D.objoid id, case
	    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
	    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
	    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
	    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
	    
	  end as kind,
	  D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	where classoid in (
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
	and pg_catalog.age(D.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:14:42.046 UTC [58] DETAIL:  parameters: $1 = '0'
2024-12-09 08:14:42.047 UTC [58] LOG:  duration: 0.391 ms
2024-12-09 08:14:42.054 UTC [58] LOG:  duration: 0.280 ms
2024-12-09 08:14:42.055 UTC [58] LOG:  duration: 0.422 ms
2024-12-09 08:14:42.055 UTC [58] LOG:  execute <unnamed>: select 'sequence' as dependent_kind,
	       'table' as owner_kind,
	       D.objid as dependent_id,
	       D.refobjid as owner_id,
	       D.refobjsubid as owner_subobject_id
	from pg_depend D
	  join pg_class C_SEQ on D.objid = C_SEQ.oid
	  join pg_class C_TAB on D.refobjid = C_TAB.oid
	where C_SEQ.relkind = 'S'
	  and C_TAB.relkind = 'r'
	  and D.refobjsubid <> 0
	  and (D.deptype = 'a' or D.deptype = 'i')
2024-12-09 08:14:42.056 UTC [58] LOG:  duration: 0.938 ms
2024-12-09 08:14:42.067 UTC [58] LOG:  duration: 0.995 ms
2024-12-09 08:14:42.070 UTC [58] LOG:  duration: 2.942 ms
2024-12-09 08:14:42.070 UTC [58] LOG:  execute <unnamed>: with saved_age as (select greatest(pg_catalog.age($1::varchar::xid), pg_catalog.age($2::varchar::xid)) as "value")
	select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
	(
	  select X.last_tx as last_tx
	  from (
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_type
	      where typnamespace = $3::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_class
	      where relnamespace = $4::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_proc
	      where pronamespace = $5::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_operator
	      where oprnamespace = $6::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select A.xmin as last_tx
	      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
	      where K.relnamespace = $7::oid
	      order by pg_catalog.age(A.xmin)
	      limit 1
	    )
	    union all
	    (
	    select E.xmin as last_tx
	      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
	      where T.typnamespace = $8::oid
	      order by pg_catalog.age(E.xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_constraint
	      where connamespace = $9::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select CO.xmin as last_tx
	      from pg_catalog.pg_collation CO
	      where CO.collnamespace = $10::oid
	      order by pg_catalog.age(CO.xmin)
	      limit 1
	    )
	    union all
	    
	    (
	    select IX.xmin as last_tx
	      from pg_catalog.pg_index IX,
	           pg_catalog.pg_class IC
	      where IC.oid = IX.indrelid
	        and IC.relnamespace = $11::oid
	        order by pg_catalog.age(IX.xmin)
	        limit 1
	    )
	    union all
	    (
	    select RU.xmin as last_tx
	      from pg_catalog.pg_rewrite RU,
	           pg_catalog.pg_class RC
	      where RC.oid = RU.ev_class
	        and RC.relnamespace = $12::oid
	        order by pg_catalog.age(RU.xmin)
	        limit 1
	    )
	    union all
	    (
	    select TG.xmin as last_tx
	      from pg_catalog.pg_trigger TG,
	           pg_catalog.pg_class TC
	      where TC.oid = TG.tgrelid
	        and TC.relnamespace = $13::oid
	        order by pg_catalog.age(TG.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_class C on C.oid = D.objoid
	      where C.relnamespace = $14::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_constraint C on C.oid = D.objoid
	      where C.connamespace = $15::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_trigger T on T.oid = D.objoid
	        join pg_catalog.pg_class C on C.oid = T.tgrelid
	      where C.relnamespace = $16::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_rewrite R on R.oid = D.objoid
	        join pg_catalog.pg_class C on C.oid = R.ev_class
	      where C.relnamespace = $17::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_proc P on P.oid = D.objoid
	      where P.pronamespace = $18::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_type T on T.oid = D.objoid
	      where T.typnamespace = $19::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_operator O on O.oid = D.objoid
	      where O.oprnamespace = $20::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_collation C on C.oid = D.objoid
	      where C.collnamespace = $21::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    
	  ) X
	  order by pg_catalog.age(X.last_tx)
	  limit 1
	) C, saved_age SA
2024-12-09 08:14:42.070 UTC [58] DETAIL:  parameters: $1 = '0', $2 = '0', $3 = '13224', $4 = '13224', $5 = '13224', $6 = '13224', $7 = '13224', $8 = '13224', $9 = '13224', $10 = '13224', $11 = '13224', $12 = '13224', $13 = '13224', $14 = '13224', $15 = '13224', $16 = '13224', $17 = '13224', $18 = '13224', $19 = '13224', $20 = '13224', $21 = '13224'
2024-12-09 08:14:42.074 UTC [58] LOG:  duration: 3.078 ms
2024-12-09 08:14:42.081 UTC [58] LOG:  duration: 0.166 ms
2024-12-09 08:14:42.081 UTC [58] LOG:  duration: 0.038 ms
2024-12-09 08:14:42.081 UTC [58] LOG:  execute <unnamed>: select case
	  when pg_catalog.pg_is_in_recovery()
	    then $1
	  else
	    pg_catalog.txid_current()::varchar::bigint
	  end as current_txid
2024-12-09 08:14:42.081 UTC [58] DETAIL:  parameters: $1 = '0'
2024-12-09 08:14:42.081 UTC [58] LOG:  duration: 0.018 ms
2024-12-09 08:14:42.086 UTC [58] LOG:  duration: 0.120 ms
2024-12-09 08:14:42.087 UTC [58] LOG:  duration: 0.163 ms
2024-12-09 08:14:42.087 UTC [58] LOG:  execute <unnamed>: select L.transactionid::varchar::bigint as transaction_id
	from pg_catalog.pg_locks L
	where L.transactionid is not null
	order by pg_catalog.age(L.transactionid) desc
	limit 1
2024-12-09 08:14:42.087 UTC [58] LOG:  duration: 0.061 ms
2024-12-09 08:14:42.093 UTC [58] LOG:  duration: 0.607 ms
2024-12-09 08:14:42.096 UTC [58] LOG:  duration: 2.231 ms
2024-12-09 08:14:42.096 UTC [58] LOG:  execute <unnamed>: with saved_age as (select greatest(pg_catalog.age($1::varchar::xid), pg_catalog.age($2::varchar::xid)) as "value")
	select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
	(
	  select X.last_tx as last_tx
	  from (
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_type
	      where typnamespace = $3::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_class
	      where relnamespace = $4::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_proc
	      where pronamespace = $5::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_operator
	      where oprnamespace = $6::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select A.xmin as last_tx
	      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
	      where K.relnamespace = $7::oid
	      order by pg_catalog.age(A.xmin)
	      limit 1
	    )
	    union all
	    (
	    select E.xmin as last_tx
	      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
	      where T.typnamespace = $8::oid
	      order by pg_catalog.age(E.xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_constraint
	      where connamespace = $9::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select CO.xmin as last_tx
	      from pg_catalog.pg_collation CO
	      where CO.collnamespace = $10::oid
	      order by pg_catalog.age(CO.xmin)
	      limit 1
	    )
	    union all
	    
	    (
	    select IX.xmin as last_tx
	      from pg_catalog.pg_index IX,
	           pg_catalog.pg_class IC
	      where IC.oid = IX.indrelid
	        and IC.relnamespace = $11::oid
	        order by pg_catalog.age(IX.xmin)
	        limit 1
	    )
	    union all
	    (
	    select RU.xmin as last_tx
	      from pg_catalog.pg_rewrite RU,
	           pg_catalog.pg_class RC
	      where RC.oid = RU.ev_class
	        and RC.relnamespace = $12::oid
	        order by pg_catalog.age(RU.xmin)
	        limit 1
	    )
	    union all
	    (
	    select TG.xmin as last_tx
	      from pg_catalog.pg_trigger TG,
	           pg_catalog.pg_class TC
	      where TC.oid = TG.tgrelid
	        and TC.relnamespace = $13::oid
	        order by pg_catalog.age(TG.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_class C on C.oid = D.objoid
	      where C.relnamespace = $14::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_constraint C on C.oid = D.objoid
	      where C.connamespace = $15::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_trigger T on T.oid = D.objoid
	        join pg_catalog.pg_class C on C.oid = T.tgrelid
	      where C.relnamespace = $16::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_rewrite R on R.oid = D.objoid
	        join pg_catalog.pg_class C on C.oid = R.ev_class
	      where C.relnamespace = $17::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_proc P on P.oid = D.objoid
	      where P.pronamespace = $18::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_type T on T.oid = D.objoid
	      where T.typnamespace = $19::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_operator O on O.oid = D.objoid
	      where O.oprnamespace = $20::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_collation C on C.oid = D.objoid
	      where C.collnamespace = $21::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    
	  ) X
	  order by pg_catalog.age(X.last_tx)
	  limit 1
	) C, saved_age SA
2024-12-09 08:14:42.096 UTC [58] DETAIL:  parameters: $1 = '0', $2 = '0', $3 = '11', $4 = '11', $5 = '11', $6 = '11', $7 = '11', $8 = '11', $9 = '11', $10 = '11', $11 = '11', $12 = '11', $13 = '11', $14 = '11', $15 = '11', $16 = '11', $17 = '11', $18 = '11', $19 = '11', $20 = '11', $21 = '11'
2024-12-09 08:14:42.102 UTC [58] LOG:  duration: 6.286 ms
2024-12-09 08:14:42.109 UTC [58] LOG:  duration: 0.146 ms
2024-12-09 08:14:42.109 UTC [58] LOG:  duration: 0.033 ms
2024-12-09 08:14:42.109 UTC [58] LOG:  execute <unnamed>: select case
	  when pg_catalog.pg_is_in_recovery()
	    then $1
	  else
	    pg_catalog.txid_current()::varchar::bigint
	  end as current_txid
2024-12-09 08:14:42.109 UTC [58] DETAIL:  parameters: $1 = '0'
2024-12-09 08:14:42.109 UTC [58] LOG:  duration: 0.035 ms
2024-12-09 08:14:42.115 UTC [58] LOG:  duration: 0.120 ms
2024-12-09 08:14:42.115 UTC [58] LOG:  duration: 0.106 ms
2024-12-09 08:14:42.115 UTC [58] LOG:  execute <unnamed>: select L.transactionid::varchar::bigint as transaction_id
	from pg_catalog.pg_locks L
	where L.transactionid is not null
	order by pg_catalog.age(L.transactionid) desc
	limit 1
2024-12-09 08:14:42.115 UTC [58] LOG:  duration: 0.077 ms
2024-12-09 08:14:42.123 UTC [58] LOG:  duration: 0.764 ms
2024-12-09 08:14:42.126 UTC [58] LOG:  duration: 3.147 ms
2024-12-09 08:14:42.126 UTC [58] LOG:  execute <unnamed>: with saved_age as (select greatest(pg_catalog.age($1::varchar::xid), pg_catalog.age($2::varchar::xid)) as "value")
	select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
	(
	  select X.last_tx as last_tx
	  from (
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_type
	      where typnamespace = $3::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_class
	      where relnamespace = $4::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_proc
	      where pronamespace = $5::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_operator
	      where oprnamespace = $6::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select A.xmin as last_tx
	      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
	      where K.relnamespace = $7::oid
	      order by pg_catalog.age(A.xmin)
	      limit 1
	    )
	    union all
	    (
	    select E.xmin as last_tx
	      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
	      where T.typnamespace = $8::oid
	      order by pg_catalog.age(E.xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_constraint
	      where connamespace = $9::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select CO.xmin as last_tx
	      from pg_catalog.pg_collation CO
	      where CO.collnamespace = $10::oid
	      order by pg_catalog.age(CO.xmin)
	      limit 1
	    )
	    union all
	    
	    (
	    select IX.xmin as last_tx
	      from pg_catalog.pg_index IX,
	           pg_catalog.pg_class IC
	      where IC.oid = IX.indrelid
	        and IC.relnamespace = $11::oid
	        order by pg_catalog.age(IX.xmin)
	        limit 1
	    )
	    union all
	    (
	    select RU.xmin as last_tx
	      from pg_catalog.pg_rewrite RU,
	           pg_catalog.pg_class RC
	      where RC.oid = RU.ev_class
	        and RC.relnamespace = $12::oid
	        order by pg_catalog.age(RU.xmin)
	        limit 1
	    )
	    union all
	    (
	    select TG.xmin as last_tx
	      from pg_catalog.pg_trigger TG,
	           pg_catalog.pg_class TC
	      where TC.oid = TG.tgrelid
	        and TC.relnamespace = $13::oid
	        order by pg_catalog.age(TG.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_class C on C.oid = D.objoid
	      where C.relnamespace = $14::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_constraint C on C.oid = D.objoid
	      where C.connamespace = $15::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_trigger T on T.oid = D.objoid
	        join pg_catalog.pg_class C on C.oid = T.tgrelid
	      where C.relnamespace = $16::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_rewrite R on R.oid = D.objoid
	        join pg_catalog.pg_class C on C.oid = R.ev_class
	      where C.relnamespace = $17::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_proc P on P.oid = D.objoid
	      where P.pronamespace = $18::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_type T on T.oid = D.objoid
	      where T.typnamespace = $19::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_operator O on O.oid = D.objoid
	      where O.oprnamespace = $20::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_collation C on C.oid = D.objoid
	      where C.collnamespace = $21::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    
	  ) X
	  order by pg_catalog.age(X.last_tx)
	  limit 1
	) C, saved_age SA
2024-12-09 08:14:42.126 UTC [58] DETAIL:  parameters: $1 = '0', $2 = '0', $3 = '2200', $4 = '2200', $5 = '2200', $6 = '2200', $7 = '2200', $8 = '2200', $9 = '2200', $10 = '2200', $11 = '2200', $12 = '2200', $13 = '2200', $14 = '2200', $15 = '2200', $16 = '2200', $17 = '2200', $18 = '2200', $19 = '2200', $20 = '2200', $21 = '2200'
2024-12-09 08:14:42.128 UTC [58] LOG:  duration: 1.717 ms
2024-12-09 08:14:42.136 UTC [58] LOG:  duration: 0.172 ms
2024-12-09 08:14:42.137 UTC [58] LOG:  duration: 0.043 ms
2024-12-09 08:14:42.137 UTC [58] LOG:  execute <unnamed>: select case
	  when pg_catalog.pg_is_in_recovery()
	    then $1
	  else
	    pg_catalog.txid_current()::varchar::bigint
	  end as current_txid
2024-12-09 08:14:42.137 UTC [58] DETAIL:  parameters: $1 = '0'
2024-12-09 08:14:42.137 UTC [58] LOG:  duration: 0.036 ms
2024-12-09 08:14:42.144 UTC [58] LOG:  duration: 0.164 ms
2024-12-09 08:14:42.144 UTC [58] LOG:  duration: 0.134 ms
2024-12-09 08:14:42.144 UTC [58] LOG:  execute <unnamed>: select L.transactionid::varchar::bigint as transaction_id
	from pg_catalog.pg_locks L
	where L.transactionid is not null
	order by pg_catalog.age(L.transactionid) desc
	limit 1
2024-12-09 08:14:42.144 UTC [58] LOG:  duration: 0.088 ms
2024-12-09 08:14:42.155 UTC [58] LOG:  duration: 0.330 ms
2024-12-09 08:14:42.155 UTC [58] LOG:  duration: 0.274 ms
2024-12-09 08:14:42.155 UTC [58] LOG:  execute <unnamed>: select cls.xmin as sequence_state_number,
	       sq.seqrelid as sequence_id,
	       cls.relname as sequence_name,
	       pg_catalog.format_type(sq.seqtypid, null) as data_type,
	       sq.seqstart as next_value,
	       sq.seqincrement as inc_value,
	       sq.seqmin as min_value,
	       sq.seqmax as max_value,
	       sq.seqcache as cache_size,
	       sq.seqcycle as cycle_option,
	       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
	from pg_catalog.pg_sequence sq
	    join pg_class cls on sq.seqrelid = cls.oid
	    where cls.relnamespace = $1::oid
	          --  and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid)
2024-12-09 08:14:42.155 UTC [58] DETAIL:  parameters: $1 = '13224'
2024-12-09 08:14:42.155 UTC [58] LOG:  duration: 0.129 ms
2024-12-09 08:14:42.167 UTC [58] LOG:  duration: 0.475 ms
2024-12-09 08:14:42.168 UTC [58] LOG:  duration: 0.499 ms
2024-12-09 08:14:42.168 UTC [58] LOG:  execute <unnamed>: select T.oid as type_id,
	       T.xmin as type_state_number,
	       T.typname as type_name,
	       T.typtype as type_sub_kind,
	       T.typcategory as type_category,
	       T.typrelid as class_id,
	       T.typbasetype as base_type_id,
	       case when T.typtype in ('c','e') then null
	            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
	       T.typdefault as default_expression,
	       T.typnotnull as mandatory,
	       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
	from pg_catalog.pg_type T
	         left outer join pg_catalog.pg_class C
	             on T.typrelid = C.oid
	where T.typnamespace = $1::oid
	  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
	  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
	order by 1
2024-12-09 08:14:42.168 UTC [58] DETAIL:  parameters: $1 = '13224'
2024-12-09 08:14:42.168 UTC [58] LOG:  duration: 0.331 ms
2024-12-09 08:14:42.188 UTC [58] LOG:  duration: 0.279 ms
2024-12-09 08:14:42.188 UTC [58] LOG:  duration: 0.353 ms
2024-12-09 08:14:42.188 UTC [58] LOG:  execute <unnamed>: select T.oid::bigint as type_id,
	       C.oid::bigint as constraint_id,
	       C.xmin as constraint_state_number,
	       C.conname as constraint_name,
	       pg_catalog.pg_get_expr(C.conbin, 0) /* C.consrc */ as predicate
	from pg_catalog.pg_type T,
	     pg_catalog.pg_constraint C
	where T.typnamespace = $1::oid
	  and T.typtype = 'd'::"char"
	  and T.oid = C.contypid
	  --  and (pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(C.xmin) <= pg_catalog.age(:tx::varchar::xid))
	order by constraint_name
2024-12-09 08:14:42.188 UTC [58] DETAIL:  parameters: $1 = '13224'
2024-12-09 08:14:42.189 UTC [58] LOG:  duration: 0.231 ms
2024-12-09 08:14:42.203 UTC [58] LOG:  duration: 0.478 ms
2024-12-09 08:14:42.204 UTC [58] LOG:  duration: 0.594 ms
2024-12-09 08:14:42.204 UTC [58] LOG:  execute <unnamed>: select T.relkind as table_kind,
	       T.relname as table_name,
	       T.oid as table_id,
	       T.xmin as table_state_number,
	       false /* T.relhasoids */ as table_with_oids,
	       T.relnamespace as tablespace_id,
	       T.reloptions as options,
	       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
	       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
	       T.relispartition /* false */ as is_partition,
	       pg_catalog.pg_get_partkeydef(T.oid) /* null */ as partition_key,
	       pg_catalog.pg_get_expr(T.relpartbound, T.oid) /* null */ as partition_expression,
	       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
	from pg_catalog.pg_class T
	where relnamespace = $1::oid
	  and relkind in ('r', 'm', 'v', 'f', 'p')
	  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
	order by table_kind, table_id
2024-12-09 08:14:42.204 UTC [58] DETAIL:  parameters: $1 = '13224'
2024-12-09 08:14:42.206 UTC [58] LOG:  duration: 2.058 ms
2024-12-09 08:14:42.226 UTC [58] LOG:  duration: 0.317 ms
2024-12-09 08:14:42.227 UTC [58] LOG:  duration: 0.478 ms
2024-12-09 08:14:42.227 UTC [58] LOG:  execute <unnamed>: select ft.ftrelid as table_id,
	       srv.srvname as table_server,
	       ft.ftoptions as table_options,
	       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
	from pg_catalog.pg_foreign_table ft
	     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
	     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
	where cls.relnamespace = $1::oid
	  --  and pg_catalog.age(ft.xmin) <= pg_catalog.age(:tx::varchar::xid)
	order by table_id
2024-12-09 08:14:42.227 UTC [58] DETAIL:  parameters: $1 = '13224'
2024-12-09 08:14:42.227 UTC [58] LOG:  duration: 0.037 ms
2024-12-09 08:14:42.239 UTC [58] LOG:  duration: 0.622 ms
2024-12-09 08:14:42.239 UTC [58] LOG:  duration: 0.850 ms
2024-12-09 08:14:42.240 UTC [58] LOG:  execute <unnamed>: with schema_procs as (select prorettype, proargtypes, proallargtypes
	                      from pg_catalog.pg_proc
	                      where pronamespace = $1::oid
	                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
	     schema_opers as (select oprleft, oprright, oprresult
	                      from pg_catalog.pg_operator
	                      where oprnamespace = $2::oid
	                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
	     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
	                           from pg_catalog.pg_aggregate A
	                           join pg_catalog.pg_proc P
	                             on A.aggfnoid = P.oid
	                           where P.pronamespace = $3::oid
	                           /* and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid)) */),
	     schema_arg_types as ( select prorettype as type_id
	                           from schema_procs
	                           union
	                           select distinct unnest(proargtypes) as type_id
	                           from schema_procs
	                           union
	                           select distinct unnest(proallargtypes) as type_id
	                           from schema_procs
	                           union
	                           select oprleft as type_id
	                           from schema_opers
	                           where oprleft is not null
	                           union
	                           select oprright as type_id
	                           from schema_opers
	                           where oprright is not null
	                           union
	                           select oprresult as type_id
	                           from schema_opers
	                           where oprresult is not null
	                           union
	                           select aggtranstype::oid as type_id
	                           from schema_aggregates
	                           union
	                           select aggmtranstype::oid as type_id
	                           from schema_aggregates
	                           
	                           )
	select type_id, pg_catalog.format_type(type_id, null) as type_spec
	from schema_arg_types
	where type_id <> 0
2024-12-09 08:14:42.240 UTC [58] DETAIL:  parameters: $1 = '13224', $2 = '13224', $3 = '13224'
2024-12-09 08:14:42.241 UTC [58] LOG:  duration: 0.964 ms
2024-12-09 08:14:42.256 UTC [58] LOG:  duration: 0.360 ms
2024-12-09 08:14:42.257 UTC [58] LOG:  duration: 0.386 ms
2024-12-09 08:14:42.257 UTC [58] LOG:  execute <unnamed>: with languages as (select oid as lang_oid, lanname as lang
	                   from pg_catalog.pg_language),
	     routines as (select proname as r_name,
	                         prolang as lang_oid,
	                         oid as r_id,
	                         xmin as r_state_number,
	                         proargnames as arg_names,
	                         proargmodes as arg_modes,
	                         proargtypes::int[] as in_arg_types,
	                         proallargtypes::int[] as all_arg_types,
	                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
	                         provariadic as arg_variadic_id,
	                         prorettype as ret_type_id,
	                         proretset as ret_set,
	                         prokind /* case when proiswindow then 'w'
	                                                when proisagg then 'a'
	                                                else 'f'
	                                           end */ as kind,
	                         provolatile as volatile_kind,
	                         proisstrict as is_strict,
	                         prosecdef as is_security_definer,
	                         proconfig as configuration_parameters,
	                         procost as cost,
	                         pg_catalog.pg_get_userbyid(proowner) as "owner",
	                         prorows as rows ,
	                         proleakproof as is_leakproof  ,
	                         proparallel as concurrency_kind 
	                  from pg_catalog.pg_proc
	                  where pronamespace = $1::oid
	                    and not (prokind = 'a') /* proisagg */
	                    /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */)
	select *
	from routines natural join languages
2024-12-09 08:14:42.257 UTC [58] DETAIL:  parameters: $1 = '13224'
2024-12-09 08:14:42.257 UTC [58] LOG:  duration: 0.481 ms
2024-12-09 08:14:42.263 UTC [58] LOG:  duration: 0.167 ms
2024-12-09 08:14:42.263 UTC [58] LOG:  duration: 0.279 ms
2024-12-09 08:14:42.264 UTC [58] LOG:  execute <unnamed>: SELECT e.typdelim FROM pg_catalog.pg_type t, pg_catalog.pg_type e WHERE t.oid = $1 and t.typelem = e.oid
2024-12-09 08:14:42.264 UTC [58] DETAIL:  parameters: $1 = '1002'
2024-12-09 08:14:42.264 UTC [58] LOG:  duration: 0.067 ms
2024-12-09 08:14:42.265 UTC [58] LOG:  duration: 0.083 ms
2024-12-09 08:14:42.265 UTC [58] LOG:  duration: 0.146 ms
2024-12-09 08:14:42.265 UTC [58] LOG:  execute <unnamed>: SELECT e.typdelim FROM pg_catalog.pg_type t, pg_catalog.pg_type e WHERE t.oid = $1 and t.typelem = e.oid
2024-12-09 08:14:42.265 UTC [58] DETAIL:  parameters: $1 = '1007'
2024-12-09 08:14:42.265 UTC [58] LOG:  duration: 0.038 ms
2024-12-09 08:14:42.278 UTC [58] LOG:  duration: 0.900 ms
2024-12-09 08:14:42.309 UTC [58] LOG:  duration: 31.799 ms
2024-12-09 08:14:42.310 UTC [58] LOG:  execute <unnamed>: with procedures as (
	  select P.oid as function_id,
	         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
	         P.prorettype as return_type
	  from pg_catalog.pg_proc P
	  join pg_catalog.pg_namespace N
	    on P.pronamespace = N.oid
	),
	operators as (
	  select O.oid as operator_id,
	         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
	  from pg_catalog.pg_operator O
	  join pg_catalog.pg_namespace N
	    on O.oprnamespace = N.oid
	)
	select P.oid as aggregate_id,
	       P.xmin as state_number,
	       P.proname as aggregate_name,
	       P.proargnames as arg_names,
	       P.proargmodes as arg_modes,
	       P.proargtypes::int[] as in_arg_types,
	       P.proallargtypes::int[] as all_arg_types,
	       A.aggtransfn::oid as transition_function_id,
	       PT.function_name::text as transition_function_name,
	       A.aggtranstype as transition_type,
	       A.aggfinalfn::oid as final_function_id,
	       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
	       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
	       A.agginitval as initial_value,
	       A.aggsortop as sort_operator_id,
	       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
	       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
	       ,
	       A.aggfinalextra as final_extra,
	       A.aggtransspace as state_size,
	       A.aggmtransfn::oid as moving_transition_id,
	       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
	       A.aggminvtransfn::oid as inverse_transition_id,
	       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
	       A.aggmtranstype::oid as moving_state_type,
	       A.aggmtransspace as moving_state_size,
	       A.aggmfinalfn::oid as moving_final_id,
	       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
	       A.aggmfinalextra as moving_final_extra,
	       A.aggminitval as moving_initial_value,
	       A.aggkind as aggregate_kind,
	       A.aggnumdirectargs as direct_args
	       
	       ,
	       A.aggcombinefn::oid as combine_function_id,
	       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
	       A.aggserialfn::oid as serialization_function_id,
	       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
	       A.aggdeserialfn::oid as deserialization_function_id,
	       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
	       P.proparallel as concurrency_kind
	       
	from pg_catalog.pg_aggregate A
	join pg_catalog.pg_proc P
	  on A.aggfnoid = P.oid
	join procedures PT
	  on A.aggtransfn::oid = PT.function_id
	left outer join procedures PF
	  on A.aggfinalfn::oid = PF.function_id
	left outer join operators O
	  on A.aggsortop = O.operator_id
	left outer join procedures FTP
	  on A.aggmtransfn = FTP.function_id
	left outer join procedures ITP
	  on A.aggminvtransfn = ITP.function_id
	left outer join procedures FFP
	  on A.aggmfinalfn = FFP.function_id
	
	left outer join procedures CP
	  on A.aggcombinefn = CP.function_id
	left outer join procedures SP
	  on A.aggserialfn = SP.function_id
	left outer join procedures DP
	  on A.aggdeserialfn = DP.function_id
	
	where P.pronamespace = $1::oid
	--  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid))
	order by P.oid
2024-12-09 08:14:42.310 UTC [58] DETAIL:  parameters: $1 = '13224'
2024-12-09 08:14:43.765 UTC [58] LOG:  duration: 1455.650 ms
2024-12-09 08:14:43.776 UTC [58] LOG:  duration: 0.290 ms
2024-12-09 08:14:43.776 UTC [58] LOG:  duration: 0.159 ms
2024-12-09 08:14:43.776 UTC [58] LOG:  execute <unnamed>: select O.oid as op_id,
	       O.xmin as state_number,
	       oprname as op_name,
	       oprkind as op_kind,
	       oprleft as arg_left_type_id,
	       oprright as arg_right_type_id,
	       oprresult as arg_result_type_id,
	       oprcode as func_main,
	       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
	from pg_catalog.pg_operator O
	where oprnamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
2024-12-09 08:14:43.776 UTC [58] DETAIL:  parameters: $1 = '13224'
2024-12-09 08:14:43.776 UTC [58] LOG:  duration: 0.132 ms
2024-12-09 08:14:43.785 UTC [58] LOG:  duration: 0.183 ms
2024-12-09 08:14:43.785 UTC [58] LOG:  duration: 0.162 ms
2024-12-09 08:14:43.785 UTC [58] LOG:  execute <unnamed>: select oid as id,
	       xmin as state_number,
	       collname as name,
	       collcollate as lc_collate,
	       collctype as lc_ctype,
	       pg_catalog.pg_get_userbyid(collowner) as "owner"
	from pg_catalog.pg_collation
	where collnamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
2024-12-09 08:14:43.785 UTC [58] DETAIL:  parameters: $1 = '13224'
2024-12-09 08:14:43.785 UTC [58] LOG:  duration: 0.082 ms
2024-12-09 08:14:43.798 UTC [58] LOG:  duration: 0.926 ms
2024-12-09 08:14:43.799 UTC [58] LOG:  duration: 1.044 ms
2024-12-09 08:14:43.799 UTC [58] LOG:  execute <unnamed>: with T as ( select distinct T.oid as table_id, T.relname as table_name
	            from pg_catalog.pg_class T,
	                 pg_catalog.pg_attribute A
	            where T.relnamespace = $1::oid
	              and T.relkind in ('r', 'm', 'v', 'f', 'p')
	              --  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid))
	              and A.attrelid = T.oid )
	select T.table_id,
	       C.attnum as column_position,
	       C.attname as column_name,
	       C.xmin as column_state_number,
	       C.atttypmod as type_mod,
	       C.attndims as dimensions_number,
	       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
	       C.atttypid as type_id,
	       C.attnotnull as mandatory,
	       pg_catalog.pg_get_expr(D.adbin, T.table_id) /* D.adsrc */ as column_default_expression,
	       not C.attislocal as column_is_inherited,
	       C.attfdwoptions as options,
	       C.attisdropped as column_is_dropped,
	       C.attidentity /* null */ as identity_kind
	from T
	  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
	  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
	where attnum > 0
	order by table_id, attnum
2024-12-09 08:14:43.799 UTC [58] DETAIL:  parameters: $1 = '13224'
2024-12-09 08:14:43.804 UTC [58] LOG:  duration: 4.785 ms
2024-12-09 08:14:43.852 UTC [58] LOG:  duration: 0.818 ms
2024-12-09 08:14:43.853 UTC [58] LOG:  duration: 1.142 ms
2024-12-09 08:14:43.853 UTC [58] LOG:  execute <unnamed>: with tab as ( select relnamespace as schema_id,
	                     oid as table_id,
	                     relkind as table_kind
	              from pg_catalog.pg_class
	              where relnamespace = $1::oid
	                and relkind in ('r','m','v','p')),
	    ind_head as ( select indrelid as table_id,
	                         indexrelid as index_id,
	                         indisunique as is_unique,
	                         indisprimary as is_primary,
	                         indkey as column_positions,
	                         indclass as column_operators,
	                         indoption as column_options,
	                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
	                         case when indexprs is not null
	                             then pg_catalog.array_to_string(array(
	                                      select case when indkey[k] = 0
	                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
	                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
	                                             end
	                                      from pg_catalog.generate_subscripts(indkey, 1) as k
	                                      order by k),
	                                  chr(28))
	                             else null end as expressions
	                  from pg_catalog.pg_index ),
	    ind_stor as ( select cls.relnamespace as schema_id,
	                         cls.oid as index_id,
	                         cls.xmin as state_number,
	                         cls.relname as index_name,
	                         pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') /* am.amcanorder */ as can_order
	                  from pg_catalog.pg_class cls
	                    /* join pg_catalog.pg_am am on (cls.relam = am.oid)*/
	                  where cls.relkind = 'i'
	                    /* and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid) */)
	select table_id, table_kind,
	       index_name, index_id, state_number,
	       is_unique, is_primary,
	       column_positions, column_operators, column_options,
	       condition, expressions, can_order
	from tab natural join ind_head natural join ind_stor
2024-12-09 08:14:43.853 UTC [58] DETAIL:  parameters: $1 = '13224'
2024-12-09 08:14:43.853 UTC [58] LOG:  duration: 0.186 ms
2024-12-09 08:14:43.866 UTC [58] LOG:  duration: 0.387 ms
2024-12-09 08:14:43.867 UTC [58] LOG:  duration: 0.439 ms
2024-12-09 08:14:43.867 UTC [58] LOG:  execute <unnamed>: with T as ( select oid as table_id,
	                   relkind as table_kind,
	                   xmin as table_state_id
	            from pg_catalog.pg_class
	            where relkind in ('r','v','f','p')
	              and relnamespace = $1::oid ),
	     C as ( select conrelid as table_id,
	                   oid::bigint as con_id,
	                   xmin as con_state_id,
	                   conname as con_name,
	                   contype as con_kind,
	                   conkey as con_columns,
	                   conindid as index_id,
	                   confrelid as ref_table_id,
	                   confkey as ref_columns,
	                   condeferrable as is_deferrable,
	                   condeferred as is_init_deferred,
	                   confupdtype as on_update,
	                   confdeltype as on_delete,
	                   conbin /* consrc */
	            from pg_catalog.pg_constraint
	            where contype in ('p','u','f','c')
	              and connamespace = $2::oid )
	select table_id,
	       table_kind,
	       con_id,
	       con_state_id::varchar::bigint as con_state_id,
	       con_name,
	       con_kind,
	       con_columns,
	       index_id,
	       ref_table_id,
	       is_deferrable,
	       is_init_deferred,
	       on_update,
	       on_delete,
	       pg_catalog.pg_get_expr(conbin, table_id) /* consrc */ as con_expression,
	       ref_columns
	from T natural join C
	--  where pg_catalog.age(table_state_id) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(:tx::varchar::xid)
	order by pg_catalog.strpos('pufc', con_kind)
2024-12-09 08:14:43.867 UTC [58] DETAIL:  parameters: $1 = '13224', $2 = '13224'
2024-12-09 08:14:43.867 UTC [58] LOG:  duration: 0.081 ms
2024-12-09 08:14:43.878 UTC [58] LOG:  duration: 0.408 ms
2024-12-09 08:14:43.878 UTC [58] LOG:  duration: 0.522 ms
2024-12-09 08:14:43.878 UTC [58] LOG:  execute <unnamed>: select R.ev_class as table_id,
	       R.oid as rule_id,
	       R.xmin as rule_state_number,
	       R.rulename as rule_name,
	       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
	       R.ev_enabled as rule_fire_mode,
	       R.is_instead as rule_is_instead
	from pg_catalog.pg_rewrite R
	where R.ev_class in (select oid
	                     from pg_catalog.pg_class
	                     where relnamespace = $1::oid)
	  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:tx::varchar::xid)
	  and R.rulename != '_RETURN'::name
	order by R.ev_class::bigint, ev_type
2024-12-09 08:14:43.878 UTC [58] DETAIL:  parameters: $1 = '13224'
2024-12-09 08:14:43.878 UTC [58] LOG:  duration: 0.142 ms
2024-12-09 08:14:43.887 UTC [58] LOG:  duration: 0.321 ms
2024-12-09 08:14:43.887 UTC [58] LOG:  duration: 0.257 ms
2024-12-09 08:14:43.887 UTC [58] LOG:  execute <unnamed>: select T.tgrelid as table_id,
	       T.oid as trigger_id,
	       T.xmin as trigger_state_number,
	       T.tgname as trigger_name,
	       T.tgfoid as function_id,
	       T.tgtype & 31 as bits,
	       T.tgdeferrable as is_deferrable,
	       T.tginitdeferred as is_init_deferred,
	       T.tgenabled as trigger_fire_mode,
	       T.tgattr as columns,
	       pg_catalog.pg_get_triggerdef(T.oid, true) as source_code
	from pg_catalog.pg_trigger T
	where T.tgrelid in (select oid
	                    from pg_catalog.pg_class
	                    where relnamespace = $1::oid)
	  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
	  and not T.tgisinternal
2024-12-09 08:14:43.887 UTC [58] DETAIL:  parameters: $1 = '13224'
2024-12-09 08:14:43.887 UTC [58] LOG:  duration: 0.029 ms
2024-12-09 08:14:43.897 UTC [58] LOG:  duration: 0.544 ms
2024-12-09 08:14:43.899 UTC [58] LOG:  duration: 1.726 ms
2024-12-09 08:14:43.899 UTC [58] LOG:  execute <unnamed>: select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_class C on D.objoid = C.oid
	where C.relnamespace = $1::oid and C.relkind != 'c'
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
	  left join pg_catalog.pg_class C on T.typrelid = C.oid
	where T.typnamespace = $2::oid and (C.relkind = 'c' or C.relkind is null)
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_constraint C on D.objoid = C.oid
	where C.connamespace = $3::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_trigger T on T.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = T.tgrelid
	where C.relnamespace = $4::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_rewrite R on R.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = R.ev_class
	where C.relnamespace = $5::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_proc P on P.oid = D.objoid
	where P.pronamespace = $6::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_operator O on O.oid = D.objoid
	where O.oprnamespace = $7::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_collation C on C.oid = D.objoid
	where C.collnamespace = $8::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	
2024-12-09 08:14:43.899 UTC [58] DETAIL:  parameters: $1 = '13224', $2 = '13224', $3 = '13224', $4 = '13224', $5 = '13224', $6 = '13224', $7 = '13224', $8 = '13224'
2024-12-09 08:14:43.900 UTC [58] LOG:  duration: 1.410 ms
2024-12-09 08:14:43.910 UTC [58] LOG:  duration: 0.476 ms
2024-12-09 08:14:43.910 UTC [58] LOG:  duration: 0.387 ms
2024-12-09 08:14:43.910 UTC [58] LOG:  execute <unnamed>: select distinct
	       T.relkind as view_kind,
	       T.oid as view_id,
	       pg_catalog.pg_get_viewdef(T.oid, true) as source_text
	from pg_catalog.pg_class T
	  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
	  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
	where N.oid = $1::oid
	  and T.relkind in ('m','v')
	  --  and (pg_catalog.age(T.xmin) <= pg_catalog.age(:src_tx::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(:src_tx::varchar::xid))
2024-12-09 08:14:43.910 UTC [58] DETAIL:  parameters: $1 = '13224'
2024-12-09 08:14:44.205 UTC [58] LOG:  duration: 294.289 ms
2024-12-09 08:14:44.320 UTC [58] LOG:  duration: 0.275 ms
2024-12-09 08:14:44.320 UTC [58] LOG:  duration: 0.318 ms
2024-12-09 08:14:44.320 UTC [58] LOG:  execute <unnamed>: with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
	            from pg_catalog.pg_class
	            where relnamespace = $1::oid
	              and relkind in ('r', 'm', 'v', 'f', 'p') )
	select table_kind,
	       table_id,
	       R.oid as rule_id,
	       pg_catalog.pg_get_ruledef(R.oid, true) as source_text
	from A join pg_catalog.pg_rewrite R
	        on A.table_id = R.ev_class
	where R.rulename != '_RETURN'::name
	  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:src_tx::varchar::xid)
2024-12-09 08:14:44.320 UTC [58] DETAIL:  parameters: $1 = '13224'
2024-12-09 08:14:44.320 UTC [58] LOG:  duration: 0.066 ms
2024-12-09 08:14:44.330 UTC [58] LOG:  duration: 0.337 ms
2024-12-09 08:14:44.331 UTC [58] LOG:  duration: 0.252 ms
2024-12-09 08:14:44.331 UTC [58] LOG:  execute <unnamed>: with system_languages as ( select oid as lang
	                           from pg_catalog.pg_language
	                           where lanname in ('c','internal') )
	select oid as id,
	       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
	       pg_catalog.pg_get_function_result(oid) as result_def,
	       prosrc as source_text
	from pg_catalog.pg_proc
	where pronamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= pg_catalog.age(:src_tx::varchar::xid)
	  and not (prokind = 'a') /* proisagg */
	  and prolang not in (select lang from system_languages)
	  and prosrc is not null
2024-12-09 08:14:44.331 UTC [58] DETAIL:  parameters: $1 = '13224'
2024-12-09 08:14:44.332 UTC [58] LOG:  duration: 1.429 ms
2024-12-09 08:14:44.378 UTC [58] LOG:  duration: 0.210 ms
2024-12-09 08:14:44.379 UTC [58] LOG:  duration: 0.218 ms
2024-12-09 08:14:44.379 UTC [58] LOG:  execute <unnamed>: select cls.xmin as sequence_state_number,
	       sq.seqrelid as sequence_id,
	       cls.relname as sequence_name,
	       pg_catalog.format_type(sq.seqtypid, null) as data_type,
	       sq.seqstart as next_value,
	       sq.seqincrement as inc_value,
	       sq.seqmin as min_value,
	       sq.seqmax as max_value,
	       sq.seqcache as cache_size,
	       sq.seqcycle as cycle_option,
	       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
	from pg_catalog.pg_sequence sq
	    join pg_class cls on sq.seqrelid = cls.oid
	    where cls.relnamespace = $1::oid
	          --  and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid)
2024-12-09 08:14:44.379 UTC [58] DETAIL:  parameters: $1 = '11'
2024-12-09 08:14:44.379 UTC [58] LOG:  duration: 0.169 ms
2024-12-09 08:14:44.389 UTC [58] LOG:  duration: 0.300 ms
2024-12-09 08:14:44.390 UTC [58] LOG:  duration: 0.379 ms
2024-12-09 08:14:44.390 UTC [58] LOG:  execute <unnamed>: select T.oid as type_id,
	       T.xmin as type_state_number,
	       T.typname as type_name,
	       T.typtype as type_sub_kind,
	       T.typcategory as type_category,
	       T.typrelid as class_id,
	       T.typbasetype as base_type_id,
	       case when T.typtype in ('c','e') then null
	            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
	       T.typdefault as default_expression,
	       T.typnotnull as mandatory,
	       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
	from pg_catalog.pg_type T
	         left outer join pg_catalog.pg_class C
	             on T.typrelid = C.oid
	where T.typnamespace = $1::oid
	  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
	  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
	order by 1
2024-12-09 08:14:44.390 UTC [58] DETAIL:  parameters: $1 = '11'
2024-12-09 08:14:44.390 UTC [58] LOG:  duration: 0.518 ms
2024-12-09 08:14:44.408 UTC [58] LOG:  duration: 0.505 ms
2024-12-09 08:14:44.408 UTC [58] LOG:  duration: 0.592 ms
2024-12-09 08:14:44.408 UTC [58] LOG:  execute <unnamed>: select T.relkind as table_kind,
	       T.relname as table_name,
	       T.oid as table_id,
	       T.xmin as table_state_number,
	       false /* T.relhasoids */ as table_with_oids,
	       T.relnamespace as tablespace_id,
	       T.reloptions as options,
	       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
	       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
	       T.relispartition /* false */ as is_partition,
	       pg_catalog.pg_get_partkeydef(T.oid) /* null */ as partition_key,
	       pg_catalog.pg_get_expr(T.relpartbound, T.oid) /* null */ as partition_expression,
	       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
	from pg_catalog.pg_class T
	where relnamespace = $1::oid
	  and relkind in ('r', 'm', 'v', 'f', 'p')
	  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
	order by table_kind, table_id
2024-12-09 08:14:44.408 UTC [58] DETAIL:  parameters: $1 = '11'
2024-12-09 08:14:44.410 UTC [58] LOG:  duration: 1.683 ms
2024-12-09 08:14:44.438 UTC [58] LOG:  duration: 0.267 ms
2024-12-09 08:14:44.439 UTC [58] LOG:  duration: 0.611 ms
2024-12-09 08:14:44.439 UTC [58] LOG:  execute <unnamed>: select ft.ftrelid as table_id,
	       srv.srvname as table_server,
	       ft.ftoptions as table_options,
	       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
	from pg_catalog.pg_foreign_table ft
	     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
	     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
	where cls.relnamespace = $1::oid
	  --  and pg_catalog.age(ft.xmin) <= pg_catalog.age(:tx::varchar::xid)
	order by table_id
2024-12-09 08:14:44.439 UTC [58] DETAIL:  parameters: $1 = '11'
2024-12-09 08:14:44.439 UTC [58] LOG:  duration: 0.071 ms
2024-12-09 08:14:44.453 UTC [58] LOG:  duration: 0.454 ms
2024-12-09 08:14:44.454 UTC [58] LOG:  duration: 1.254 ms
2024-12-09 08:14:44.454 UTC [58] LOG:  execute <unnamed>: with schema_procs as (select prorettype, proargtypes, proallargtypes
	                      from pg_catalog.pg_proc
	                      where pronamespace = $1::oid
	                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
	     schema_opers as (select oprleft, oprright, oprresult
	                      from pg_catalog.pg_operator
	                      where oprnamespace = $2::oid
	                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
	     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
	                           from pg_catalog.pg_aggregate A
	                           join pg_catalog.pg_proc P
	                             on A.aggfnoid = P.oid
	                           where P.pronamespace = $3::oid
	                           /* and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid)) */),
	     schema_arg_types as ( select prorettype as type_id
	                           from schema_procs
	                           union
	                           select distinct unnest(proargtypes) as type_id
	                           from schema_procs
	                           union
	                           select distinct unnest(proallargtypes) as type_id
	                           from schema_procs
	                           union
	                           select oprleft as type_id
	                           from schema_opers
	                           where oprleft is not null
	                           union
	                           select oprright as type_id
	                           from schema_opers
	                           where oprright is not null
	                           union
	                           select oprresult as type_id
	                           from schema_opers
	                           where oprresult is not null
	                           union
	                           select aggtranstype::oid as type_id
	                           from schema_aggregates
	                           union
	                           select aggmtranstype::oid as type_id
	                           from schema_aggregates
	                           
	                           )
	select type_id, pg_catalog.format_type(type_id, null) as type_spec
	from schema_arg_types
	where type_id <> 0
2024-12-09 08:14:44.454 UTC [58] DETAIL:  parameters: $1 = '11', $2 = '11', $3 = '11'
2024-12-09 08:14:44.461 UTC [58] LOG:  duration: 6.549 ms
2024-12-09 08:14:44.479 UTC [58] LOG:  duration: 0.445 ms
2024-12-09 08:14:44.479 UTC [58] LOG:  duration: 0.535 ms
2024-12-09 08:14:44.479 UTC [58] LOG:  execute <unnamed>: with languages as (select oid as lang_oid, lanname as lang
	                   from pg_catalog.pg_language),
	     routines as (select proname as r_name,
	                         prolang as lang_oid,
	                         oid as r_id,
	                         xmin as r_state_number,
	                         proargnames as arg_names,
	                         proargmodes as arg_modes,
	                         proargtypes::int[] as in_arg_types,
	                         proallargtypes::int[] as all_arg_types,
	                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
	                         provariadic as arg_variadic_id,
	                         prorettype as ret_type_id,
	                         proretset as ret_set,
	                         prokind /* case when proiswindow then 'w'
	                                                when proisagg then 'a'
	                                                else 'f'
	                                           end */ as kind,
	                         provolatile as volatile_kind,
	                         proisstrict as is_strict,
	                         prosecdef as is_security_definer,
	                         proconfig as configuration_parameters,
	                         procost as cost,
	                         pg_catalog.pg_get_userbyid(proowner) as "owner",
	                         prorows as rows ,
	                         proleakproof as is_leakproof  ,
	                         proparallel as concurrency_kind 
	                  from pg_catalog.pg_proc
	                  where pronamespace = $1::oid
	                    and not (prokind = 'a') /* proisagg */
	                    /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */)
	select *
	from routines natural join languages
2024-12-09 08:14:44.479 UTC [58] DETAIL:  parameters: $1 = '11'
2024-12-09 08:14:44.499 UTC [58] LOG:  duration: 20.025 ms
2024-12-09 08:14:44.992 UTC [58] LOG:  duration: 0.844 ms
2024-12-09 08:14:45.002 UTC [58] LOG:  duration: 9.643 ms
2024-12-09 08:14:45.002 UTC [58] LOG:  execute <unnamed>: with procedures as (
	  select P.oid as function_id,
	         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
	         P.prorettype as return_type
	  from pg_catalog.pg_proc P
	  join pg_catalog.pg_namespace N
	    on P.pronamespace = N.oid
	),
	operators as (
	  select O.oid as operator_id,
	         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
	  from pg_catalog.pg_operator O
	  join pg_catalog.pg_namespace N
	    on O.oprnamespace = N.oid
	)
	select P.oid as aggregate_id,
	       P.xmin as state_number,
	       P.proname as aggregate_name,
	       P.proargnames as arg_names,
	       P.proargmodes as arg_modes,
	       P.proargtypes::int[] as in_arg_types,
	       P.proallargtypes::int[] as all_arg_types,
	       A.aggtransfn::oid as transition_function_id,
	       PT.function_name::text as transition_function_name,
	       A.aggtranstype as transition_type,
	       A.aggfinalfn::oid as final_function_id,
	       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
	       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
	       A.agginitval as initial_value,
	       A.aggsortop as sort_operator_id,
	       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
	       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
	       ,
	       A.aggfinalextra as final_extra,
	       A.aggtransspace as state_size,
	       A.aggmtransfn::oid as moving_transition_id,
	       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
	       A.aggminvtransfn::oid as inverse_transition_id,
	       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
	       A.aggmtranstype::oid as moving_state_type,
	       A.aggmtransspace as moving_state_size,
	       A.aggmfinalfn::oid as moving_final_id,
	       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
	       A.aggmfinalextra as moving_final_extra,
	       A.aggminitval as moving_initial_value,
	       A.aggkind as aggregate_kind,
	       A.aggnumdirectargs as direct_args
	       
	       ,
	       A.aggcombinefn::oid as combine_function_id,
	       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
	       A.aggserialfn::oid as serialization_function_id,
	       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
	       A.aggdeserialfn::oid as deserialization_function_id,
	       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
	       P.proparallel as concurrency_kind
	       
	from pg_catalog.pg_aggregate A
	join pg_catalog.pg_proc P
	  on A.aggfnoid = P.oid
	join procedures PT
	  on A.aggtransfn::oid = PT.function_id
	left outer join procedures PF
	  on A.aggfinalfn::oid = PF.function_id
	left outer join operators O
	  on A.aggsortop = O.operator_id
	left outer join procedures FTP
	  on A.aggmtransfn = FTP.function_id
	left outer join procedures ITP
	  on A.aggminvtransfn = ITP.function_id
	left outer join procedures FFP
	  on A.aggmfinalfn = FFP.function_id
	
	left outer join procedures CP
	  on A.aggcombinefn = CP.function_id
	left outer join procedures SP
	  on A.aggserialfn = SP.function_id
	left outer join procedures DP
	  on A.aggdeserialfn = DP.function_id
	
	where P.pronamespace = $1::oid
	--  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid))
	order by P.oid
2024-12-09 08:14:45.002 UTC [58] DETAIL:  parameters: $1 = '11'
2024-12-09 08:14:46.742 UTC [58] LOG:  duration: 1740.306 ms
2024-12-09 08:14:46.773 UTC [58] LOG:  duration: 0.253 ms
2024-12-09 08:14:46.773 UTC [58] LOG:  duration: 0.211 ms
2024-12-09 08:14:46.773 UTC [58] LOG:  execute <unnamed>: select O.oid as op_id,
	       O.xmin as state_number,
	       oprname as op_name,
	       oprkind as op_kind,
	       oprleft as arg_left_type_id,
	       oprright as arg_right_type_id,
	       oprresult as arg_result_type_id,
	       oprcode as func_main,
	       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
	from pg_catalog.pg_operator O
	where oprnamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
2024-12-09 08:14:46.773 UTC [58] DETAIL:  parameters: $1 = '11'
2024-12-09 08:14:46.789 UTC [58] LOG:  duration: 15.025 ms
2024-12-09 08:14:46.794 UTC [58] LOG:  duration: 0.193 ms
2024-12-09 08:14:46.794 UTC [58] LOG:  duration: 0.231 ms
2024-12-09 08:14:46.794 UTC [58] LOG:  execute <unnamed>: SELECT n.nspname = ANY(current_schemas(true)), n.nspname, t.typname FROM pg_catalog.pg_type t JOIN pg_catalog.pg_namespace n ON t.typnamespace = n.oid WHERE t.oid = $1
2024-12-09 08:14:46.794 UTC [58] DETAIL:  parameters: $1 = '24'
2024-12-09 08:14:46.794 UTC [58] LOG:  duration: 0.068 ms
2024-12-09 08:14:46.796 UTC [58] LOG:  duration: 0.375 ms
2024-12-09 08:14:46.797 UTC [58] LOG:  duration: 0.464 ms
2024-12-09 08:14:46.797 UTC [58] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc, typtype   FROM pg_catalog.pg_type   LEFT   JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE typname = $1  ORDER BY sp.r, pg_type.oid DESC LIMIT 1
2024-12-09 08:14:46.797 UTC [58] DETAIL:  parameters: $1 = 'regproc'
2024-12-09 08:14:46.797 UTC [58] LOG:  duration: 0.087 ms
2024-12-09 08:14:46.830 UTC [58] LOG:  duration: 0.198 ms
2024-12-09 08:14:46.830 UTC [58] LOG:  duration: 0.097 ms
2024-12-09 08:14:46.830 UTC [58] LOG:  execute <unnamed>: select oid as id,
	       xmin as state_number,
	       collname as name,
	       collcollate as lc_collate,
	       collctype as lc_ctype,
	       pg_catalog.pg_get_userbyid(collowner) as "owner"
	from pg_catalog.pg_collation
	where collnamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
2024-12-09 08:14:46.830 UTC [58] DETAIL:  parameters: $1 = '11'
2024-12-09 08:14:46.832 UTC [58] LOG:  duration: 1.713 ms
2024-12-09 08:14:46.871 UTC [58] LOG:  duration: 0.319 ms
2024-12-09 08:14:46.871 UTC [58] LOG:  duration: 0.535 ms
2024-12-09 08:14:46.872 UTC [58] LOG:  execute <unnamed>: with T as ( select distinct T.oid as table_id, T.relname as table_name
	            from pg_catalog.pg_class T,
	                 pg_catalog.pg_attribute A
	            where T.relnamespace = $1::oid
	              and T.relkind in ('r', 'm', 'v', 'f', 'p')
	              --  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid))
	              and A.attrelid = T.oid )
	select T.table_id,
	       C.attnum as column_position,
	       C.attname as column_name,
	       C.xmin as column_state_number,
	       C.atttypmod as type_mod,
	       C.attndims as dimensions_number,
	       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
	       C.atttypid as type_id,
	       C.attnotnull as mandatory,
	       pg_catalog.pg_get_expr(D.adbin, T.table_id) /* D.adsrc */ as column_default_expression,
	       not C.attislocal as column_is_inherited,
	       C.attfdwoptions as options,
	       C.attisdropped as column_is_dropped,
	       C.attidentity /* null */ as identity_kind
	from T
	  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
	  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
	where attnum > 0
	order by table_id, attnum
2024-12-09 08:14:46.872 UTC [58] DETAIL:  parameters: $1 = '11'
2024-12-09 08:14:46.878 UTC [58] LOG:  duration: 6.137 ms
2024-12-09 08:14:46.901 UTC [58] LOG:  duration: 0.502 ms
2024-12-09 08:14:46.902 UTC [58] LOG:  duration: 0.659 ms
2024-12-09 08:14:46.902 UTC [58] LOG:  execute <unnamed>: with tab as ( select relnamespace as schema_id,
	                     oid as table_id,
	                     relkind as table_kind
	              from pg_catalog.pg_class
	              where relnamespace = $1::oid
	                and relkind in ('r','m','v','p')),
	    ind_head as ( select indrelid as table_id,
	                         indexrelid as index_id,
	                         indisunique as is_unique,
	                         indisprimary as is_primary,
	                         indkey as column_positions,
	                         indclass as column_operators,
	                         indoption as column_options,
	                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
	                         case when indexprs is not null
	                             then pg_catalog.array_to_string(array(
	                                      select case when indkey[k] = 0
	                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
	                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
	                                             end
	                                      from pg_catalog.generate_subscripts(indkey, 1) as k
	                                      order by k),
	                                  chr(28))
	                             else null end as expressions
	                  from pg_catalog.pg_index ),
	    ind_stor as ( select cls.relnamespace as schema_id,
	                         cls.oid as index_id,
	                         cls.xmin as state_number,
	                         cls.relname as index_name,
	                         pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') /* am.amcanorder */ as can_order
	                  from pg_catalog.pg_class cls
	                    /* join pg_catalog.pg_am am on (cls.relam = am.oid)*/
	                  where cls.relkind = 'i'
	                    /* and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid) */)
	select table_id, table_kind,
	       index_name, index_id, state_number,
	       is_unique, is_primary,
	       column_positions, column_operators, column_options,
	       condition, expressions, can_order
	from tab natural join ind_head natural join ind_stor
2024-12-09 08:14:46.902 UTC [58] DETAIL:  parameters: $1 = '11'
2024-12-09 08:14:46.903 UTC [58] LOG:  duration: 0.561 ms
2024-12-09 08:14:46.909 UTC [58] LOG:  duration: 0.174 ms
2024-12-09 08:14:46.909 UTC [58] LOG:  duration: 0.192 ms
2024-12-09 08:14:46.909 UTC [58] LOG:  execute <unnamed>: SELECT n.nspname = ANY(current_schemas(true)), n.nspname, t.typname FROM pg_catalog.pg_type t JOIN pg_catalog.pg_namespace n ON t.typnamespace = n.oid WHERE t.oid = $1
2024-12-09 08:14:46.909 UTC [58] DETAIL:  parameters: $1 = '22'
2024-12-09 08:14:46.909 UTC [58] LOG:  duration: 0.052 ms
2024-12-09 08:14:46.910 UTC [58] LOG:  duration: 0.152 ms
2024-12-09 08:14:46.911 UTC [58] LOG:  duration: 0.252 ms
2024-12-09 08:14:46.911 UTC [58] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc, typtype   FROM pg_catalog.pg_type   LEFT   JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE typname = $1  ORDER BY sp.r, pg_type.oid DESC LIMIT 1
2024-12-09 08:14:46.911 UTC [58] DETAIL:  parameters: $1 = 'int2vector'
2024-12-09 08:14:46.911 UTC [58] LOG:  duration: 0.076 ms
2024-12-09 08:14:46.912 UTC [58] LOG:  duration: 0.079 ms
2024-12-09 08:14:46.912 UTC [58] LOG:  duration: 0.130 ms
2024-12-09 08:14:46.912 UTC [58] LOG:  execute <unnamed>: SELECT n.nspname = ANY(current_schemas(true)), n.nspname, t.typname FROM pg_catalog.pg_type t JOIN pg_catalog.pg_namespace n ON t.typnamespace = n.oid WHERE t.oid = $1
2024-12-09 08:14:46.912 UTC [58] DETAIL:  parameters: $1 = '30'
2024-12-09 08:14:46.912 UTC [58] LOG:  duration: 0.025 ms
2024-12-09 08:14:46.913 UTC [58] LOG:  duration: 0.145 ms
2024-12-09 08:14:46.913 UTC [58] LOG:  duration: 0.253 ms
2024-12-09 08:14:46.913 UTC [58] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc, typtype   FROM pg_catalog.pg_type   LEFT   JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE typname = $1  ORDER BY sp.r, pg_type.oid DESC LIMIT 1
2024-12-09 08:14:46.913 UTC [58] DETAIL:  parameters: $1 = 'oidvector'
2024-12-09 08:14:46.913 UTC [58] LOG:  duration: 0.083 ms
2024-12-09 08:14:46.927 UTC [58] LOG:  duration: 0.322 ms
2024-12-09 08:14:46.927 UTC [58] LOG:  duration: 0.398 ms
2024-12-09 08:14:46.927 UTC [58] LOG:  execute <unnamed>: with T as ( select oid as table_id,
	                   relkind as table_kind,
	                   xmin as table_state_id
	            from pg_catalog.pg_class
	            where relkind in ('r','v','f','p')
	              and relnamespace = $1::oid ),
	     C as ( select conrelid as table_id,
	                   oid::bigint as con_id,
	                   xmin as con_state_id,
	                   conname as con_name,
	                   contype as con_kind,
	                   conkey as con_columns,
	                   conindid as index_id,
	                   confrelid as ref_table_id,
	                   confkey as ref_columns,
	                   condeferrable as is_deferrable,
	                   condeferred as is_init_deferred,
	                   confupdtype as on_update,
	                   confdeltype as on_delete,
	                   conbin /* consrc */
	            from pg_catalog.pg_constraint
	            where contype in ('p','u','f','c')
	              and connamespace = $2::oid )
	select table_id,
	       table_kind,
	       con_id,
	       con_state_id::varchar::bigint as con_state_id,
	       con_name,
	       con_kind,
	       con_columns,
	       index_id,
	       ref_table_id,
	       is_deferrable,
	       is_init_deferred,
	       on_update,
	       on_delete,
	       pg_catalog.pg_get_expr(conbin, table_id) /* consrc */ as con_expression,
	       ref_columns
	from T natural join C
	--  where pg_catalog.age(table_state_id) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(:tx::varchar::xid)
	order by pg_catalog.strpos('pufc', con_kind)
2024-12-09 08:14:46.927 UTC [58] DETAIL:  parameters: $1 = '11', $2 = '11'
2024-12-09 08:14:46.928 UTC [58] LOG:  duration: 0.065 ms
2024-12-09 08:14:46.936 UTC [58] LOG:  duration: 0.246 ms
2024-12-09 08:14:46.937 UTC [58] LOG:  duration: 0.322 ms
2024-12-09 08:14:46.937 UTC [58] LOG:  execute <unnamed>: select R.ev_class as table_id,
	       R.oid as rule_id,
	       R.xmin as rule_state_number,
	       R.rulename as rule_name,
	       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
	       R.ev_enabled as rule_fire_mode,
	       R.is_instead as rule_is_instead
	from pg_catalog.pg_rewrite R
	where R.ev_class in (select oid
	                     from pg_catalog.pg_class
	                     where relnamespace = $1::oid)
	  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:tx::varchar::xid)
	  and R.rulename != '_RETURN'::name
	order by R.ev_class::bigint, ev_type
2024-12-09 08:14:46.937 UTC [58] DETAIL:  parameters: $1 = '11'
2024-12-09 08:14:46.937 UTC [58] LOG:  duration: 0.139 ms
2024-12-09 08:14:46.947 UTC [58] LOG:  duration: 0.218 ms
2024-12-09 08:14:46.948 UTC [58] LOG:  duration: 0.234 ms
2024-12-09 08:14:46.948 UTC [58] LOG:  execute <unnamed>: select T.tgrelid as table_id,
	       T.oid as trigger_id,
	       T.xmin as trigger_state_number,
	       T.tgname as trigger_name,
	       T.tgfoid as function_id,
	       T.tgtype & 31 as bits,
	       T.tgdeferrable as is_deferrable,
	       T.tginitdeferred as is_init_deferred,
	       T.tgenabled as trigger_fire_mode,
	       T.tgattr as columns,
	       pg_catalog.pg_get_triggerdef(T.oid, true) as source_code
	from pg_catalog.pg_trigger T
	where T.tgrelid in (select oid
	                    from pg_catalog.pg_class
	                    where relnamespace = $1::oid)
	  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
	  and not T.tgisinternal
2024-12-09 08:14:46.948 UTC [58] DETAIL:  parameters: $1 = '11'
2024-12-09 08:14:46.948 UTC [58] LOG:  duration: 0.055 ms
2024-12-09 08:14:46.990 UTC [58] LOG:  duration: 0.877 ms
2024-12-09 08:14:46.992 UTC [58] LOG:  duration: 1.990 ms
2024-12-09 08:14:46.992 UTC [58] LOG:  execute <unnamed>: select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_class C on D.objoid = C.oid
	where C.relnamespace = $1::oid and C.relkind != 'c'
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
	  left join pg_catalog.pg_class C on T.typrelid = C.oid
	where T.typnamespace = $2::oid and (C.relkind = 'c' or C.relkind is null)
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_constraint C on D.objoid = C.oid
	where C.connamespace = $3::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_trigger T on T.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = T.tgrelid
	where C.relnamespace = $4::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_rewrite R on R.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = R.ev_class
	where C.relnamespace = $5::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_proc P on P.oid = D.objoid
	where P.pronamespace = $6::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_operator O on O.oid = D.objoid
	where O.oprnamespace = $7::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_collation C on C.oid = D.objoid
	where C.collnamespace = $8::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	
2024-12-09 08:14:46.992 UTC [58] DETAIL:  parameters: $1 = '11', $2 = '11', $3 = '11', $4 = '11', $5 = '11', $6 = '11', $7 = '11', $8 = '11'
2024-12-09 08:14:47.011 UTC [58] LOG:  duration: 19.123 ms
2024-12-09 08:14:47.145 UTC [58] LOG:  duration: 0.287 ms
2024-12-09 08:14:47.146 UTC [58] LOG:  duration: 0.321 ms
2024-12-09 08:14:47.146 UTC [58] LOG:  execute <unnamed>: select distinct
	       T.relkind as view_kind,
	       T.oid as view_id,
	       pg_catalog.pg_get_viewdef(T.oid, true) as source_text
	from pg_catalog.pg_class T
	  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
	  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
	where N.oid = $1::oid
	  and T.relkind in ('m','v')
	  --  and (pg_catalog.age(T.xmin) <= pg_catalog.age(:src_tx::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(:src_tx::varchar::xid))
2024-12-09 08:14:47.146 UTC [58] DETAIL:  parameters: $1 = '11'
2024-12-09 08:14:47.267 UTC [58] LOG:  duration: 121.600 ms
2024-12-09 08:14:47.313 UTC [58] LOG:  duration: 0.313 ms
2024-12-09 08:14:47.314 UTC [58] LOG:  duration: 0.316 ms
2024-12-09 08:14:47.314 UTC [58] LOG:  execute <unnamed>: with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
	            from pg_catalog.pg_class
	            where relnamespace = $1::oid
	              and relkind in ('r', 'm', 'v', 'f', 'p') )
	select table_kind,
	       table_id,
	       R.oid as rule_id,
	       pg_catalog.pg_get_ruledef(R.oid, true) as source_text
	from A join pg_catalog.pg_rewrite R
	        on A.table_id = R.ev_class
	where R.rulename != '_RETURN'::name
	  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:src_tx::varchar::xid)
2024-12-09 08:14:47.314 UTC [58] DETAIL:  parameters: $1 = '11'
2024-12-09 08:14:47.314 UTC [58] LOG:  duration: 0.384 ms
2024-12-09 08:14:47.330 UTC [58] LOG:  duration: 0.277 ms
2024-12-09 08:14:47.331 UTC [58] LOG:  duration: 0.281 ms
2024-12-09 08:14:47.331 UTC [58] LOG:  execute <unnamed>: with system_languages as ( select oid as lang
	                           from pg_catalog.pg_language
	                           where lanname in ('c','internal') )
	select oid as id,
	       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
	       pg_catalog.pg_get_function_result(oid) as result_def,
	       prosrc as source_text
	from pg_catalog.pg_proc
	where pronamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= pg_catalog.age(:src_tx::varchar::xid)
	  and not (prokind = 'a') /* proisagg */
	  and prolang not in (select lang from system_languages)
	  and prosrc is not null
2024-12-09 08:14:47.331 UTC [58] DETAIL:  parameters: $1 = '11'
2024-12-09 08:14:47.332 UTC [58] LOG:  duration: 1.462 ms
2024-12-09 08:14:47.468 UTC [58] LOG:  duration: 0.232 ms
2024-12-09 08:14:47.469 UTC [58] LOG:  duration: 0.238 ms
2024-12-09 08:14:47.469 UTC [58] LOG:  execute <unnamed>: select cls.xmin as sequence_state_number,
	       sq.seqrelid as sequence_id,
	       cls.relname as sequence_name,
	       pg_catalog.format_type(sq.seqtypid, null) as data_type,
	       sq.seqstart as next_value,
	       sq.seqincrement as inc_value,
	       sq.seqmin as min_value,
	       sq.seqmax as max_value,
	       sq.seqcache as cache_size,
	       sq.seqcycle as cycle_option,
	       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
	from pg_catalog.pg_sequence sq
	    join pg_class cls on sq.seqrelid = cls.oid
	    where cls.relnamespace = $1::oid
	          --  and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid)
2024-12-09 08:14:47.469 UTC [58] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:14:47.469 UTC [58] LOG:  duration: 0.111 ms
2024-12-09 08:14:47.482 UTC [58] LOG:  duration: 0.252 ms
2024-12-09 08:14:47.482 UTC [58] LOG:  duration: 0.342 ms
2024-12-09 08:14:47.482 UTC [58] LOG:  execute <unnamed>: select T.oid as type_id,
	       T.xmin as type_state_number,
	       T.typname as type_name,
	       T.typtype as type_sub_kind,
	       T.typcategory as type_category,
	       T.typrelid as class_id,
	       T.typbasetype as base_type_id,
	       case when T.typtype in ('c','e') then null
	            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
	       T.typdefault as default_expression,
	       T.typnotnull as mandatory,
	       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
	from pg_catalog.pg_type T
	         left outer join pg_catalog.pg_class C
	             on T.typrelid = C.oid
	where T.typnamespace = $1::oid
	  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
	  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
	order by 1
2024-12-09 08:14:47.482 UTC [58] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:14:47.483 UTC [58] LOG:  duration: 0.110 ms
2024-12-09 08:14:47.494 UTC [58] LOG:  duration: 0.276 ms
2024-12-09 08:14:47.494 UTC [58] LOG:  duration: 0.243 ms
2024-12-09 08:14:47.494 UTC [58] LOG:  execute <unnamed>: select T.relkind as table_kind,
	       T.relname as table_name,
	       T.oid as table_id,
	       T.xmin as table_state_number,
	       false /* T.relhasoids */ as table_with_oids,
	       T.relnamespace as tablespace_id,
	       T.reloptions as options,
	       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
	       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
	       T.relispartition /* false */ as is_partition,
	       pg_catalog.pg_get_partkeydef(T.oid) /* null */ as partition_key,
	       pg_catalog.pg_get_expr(T.relpartbound, T.oid) /* null */ as partition_expression,
	       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
	from pg_catalog.pg_class T
	where relnamespace = $1::oid
	  and relkind in ('r', 'm', 'v', 'f', 'p')
	  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
	order by table_kind, table_id
2024-12-09 08:14:47.494 UTC [58] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:14:47.494 UTC [58] LOG:  duration: 0.132 ms
2024-12-09 08:14:47.504 UTC [58] LOG:  duration: 0.179 ms
2024-12-09 08:14:47.505 UTC [58] LOG:  duration: 0.263 ms
2024-12-09 08:14:47.505 UTC [58] LOG:  execute <unnamed>: select ft.ftrelid as table_id,
	       srv.srvname as table_server,
	       ft.ftoptions as table_options,
	       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
	from pg_catalog.pg_foreign_table ft
	     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
	     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
	where cls.relnamespace = $1::oid
	  --  and pg_catalog.age(ft.xmin) <= pg_catalog.age(:tx::varchar::xid)
	order by table_id
2024-12-09 08:14:47.505 UTC [58] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:14:47.505 UTC [58] LOG:  duration: 0.101 ms
2024-12-09 08:14:47.515 UTC [58] LOG:  duration: 0.286 ms
2024-12-09 08:14:47.516 UTC [58] LOG:  duration: 0.520 ms
2024-12-09 08:14:47.516 UTC [58] LOG:  execute <unnamed>: with schema_procs as (select prorettype, proargtypes, proallargtypes
	                      from pg_catalog.pg_proc
	                      where pronamespace = $1::oid
	                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
	     schema_opers as (select oprleft, oprright, oprresult
	                      from pg_catalog.pg_operator
	                      where oprnamespace = $2::oid
	                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
	     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
	                           from pg_catalog.pg_aggregate A
	                           join pg_catalog.pg_proc P
	                             on A.aggfnoid = P.oid
	                           where P.pronamespace = $3::oid
	                           /* and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid)) */),
	     schema_arg_types as ( select prorettype as type_id
	                           from schema_procs
	                           union
	                           select distinct unnest(proargtypes) as type_id
	                           from schema_procs
	                           union
	                           select distinct unnest(proallargtypes) as type_id
	                           from schema_procs
	                           union
	                           select oprleft as type_id
	                           from schema_opers
	                           where oprleft is not null
	                           union
	                           select oprright as type_id
	                           from schema_opers
	                           where oprright is not null
	                           union
	                           select oprresult as type_id
	                           from schema_opers
	                           where oprresult is not null
	                           union
	                           select aggtranstype::oid as type_id
	                           from schema_aggregates
	                           union
	                           select aggmtranstype::oid as type_id
	                           from schema_aggregates
	                           
	                           )
	select type_id, pg_catalog.format_type(type_id, null) as type_spec
	from schema_arg_types
	where type_id <> 0
2024-12-09 08:14:47.516 UTC [58] DETAIL:  parameters: $1 = '2200', $2 = '2200', $3 = '2200'
2024-12-09 08:14:47.516 UTC [58] LOG:  duration: 0.602 ms
2024-12-09 08:14:47.527 UTC [58] LOG:  duration: 0.378 ms
2024-12-09 08:14:47.528 UTC [58] LOG:  duration: 0.400 ms
2024-12-09 08:14:47.528 UTC [58] LOG:  execute <unnamed>: with languages as (select oid as lang_oid, lanname as lang
	                   from pg_catalog.pg_language),
	     routines as (select proname as r_name,
	                         prolang as lang_oid,
	                         oid as r_id,
	                         xmin as r_state_number,
	                         proargnames as arg_names,
	                         proargmodes as arg_modes,
	                         proargtypes::int[] as in_arg_types,
	                         proallargtypes::int[] as all_arg_types,
	                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
	                         provariadic as arg_variadic_id,
	                         prorettype as ret_type_id,
	                         proretset as ret_set,
	                         prokind /* case when proiswindow then 'w'
	                                                when proisagg then 'a'
	                                                else 'f'
	                                           end */ as kind,
	                         provolatile as volatile_kind,
	                         proisstrict as is_strict,
	                         prosecdef as is_security_definer,
	                         proconfig as configuration_parameters,
	                         procost as cost,
	                         pg_catalog.pg_get_userbyid(proowner) as "owner",
	                         prorows as rows ,
	                         proleakproof as is_leakproof  ,
	                         proparallel as concurrency_kind 
	                  from pg_catalog.pg_proc
	                  where pronamespace = $1::oid
	                    and not (prokind = 'a') /* proisagg */
	                    /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */)
	select *
	from routines natural join languages
2024-12-09 08:14:47.528 UTC [58] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:14:47.529 UTC [58] LOG:  duration: 0.541 ms
2024-12-09 08:14:47.539 UTC [58] LOG:  duration: 0.555 ms
2024-12-09 08:14:47.551 UTC [58] LOG:  duration: 11.863 ms
2024-12-09 08:14:47.551 UTC [58] LOG:  execute <unnamed>: with procedures as (
	  select P.oid as function_id,
	         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
	         P.prorettype as return_type
	  from pg_catalog.pg_proc P
	  join pg_catalog.pg_namespace N
	    on P.pronamespace = N.oid
	),
	operators as (
	  select O.oid as operator_id,
	         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
	  from pg_catalog.pg_operator O
	  join pg_catalog.pg_namespace N
	    on O.oprnamespace = N.oid
	)
	select P.oid as aggregate_id,
	       P.xmin as state_number,
	       P.proname as aggregate_name,
	       P.proargnames as arg_names,
	       P.proargmodes as arg_modes,
	       P.proargtypes::int[] as in_arg_types,
	       P.proallargtypes::int[] as all_arg_types,
	       A.aggtransfn::oid as transition_function_id,
	       PT.function_name::text as transition_function_name,
	       A.aggtranstype as transition_type,
	       A.aggfinalfn::oid as final_function_id,
	       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
	       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
	       A.agginitval as initial_value,
	       A.aggsortop as sort_operator_id,
	       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
	       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
	       ,
	       A.aggfinalextra as final_extra,
	       A.aggtransspace as state_size,
	       A.aggmtransfn::oid as moving_transition_id,
	       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
	       A.aggminvtransfn::oid as inverse_transition_id,
	       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
	       A.aggmtranstype::oid as moving_state_type,
	       A.aggmtransspace as moving_state_size,
	       A.aggmfinalfn::oid as moving_final_id,
	       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
	       A.aggmfinalextra as moving_final_extra,
	       A.aggminitval as moving_initial_value,
	       A.aggkind as aggregate_kind,
	       A.aggnumdirectargs as direct_args
	       
	       ,
	       A.aggcombinefn::oid as combine_function_id,
	       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
	       A.aggserialfn::oid as serialization_function_id,
	       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
	       A.aggdeserialfn::oid as deserialization_function_id,
	       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
	       P.proparallel as concurrency_kind
	       
	from pg_catalog.pg_aggregate A
	join pg_catalog.pg_proc P
	  on A.aggfnoid = P.oid
	join procedures PT
	  on A.aggtransfn::oid = PT.function_id
	left outer join procedures PF
	  on A.aggfinalfn::oid = PF.function_id
	left outer join operators O
	  on A.aggsortop = O.operator_id
	left outer join procedures FTP
	  on A.aggmtransfn = FTP.function_id
	left outer join procedures ITP
	  on A.aggminvtransfn = ITP.function_id
	left outer join procedures FFP
	  on A.aggmfinalfn = FFP.function_id
	
	left outer join procedures CP
	  on A.aggcombinefn = CP.function_id
	left outer join procedures SP
	  on A.aggserialfn = SP.function_id
	left outer join procedures DP
	  on A.aggdeserialfn = DP.function_id
	
	where P.pronamespace = $1::oid
	--  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid))
	order by P.oid
2024-12-09 08:14:47.551 UTC [58] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:14:49.148 UTC [58] LOG:  duration: 1596.926 ms
2024-12-09 08:14:49.159 UTC [58] LOG:  duration: 0.187 ms
2024-12-09 08:14:49.159 UTC [58] LOG:  duration: 0.109 ms
2024-12-09 08:14:49.159 UTC [58] LOG:  execute <unnamed>: select O.oid as op_id,
	       O.xmin as state_number,
	       oprname as op_name,
	       oprkind as op_kind,
	       oprleft as arg_left_type_id,
	       oprright as arg_right_type_id,
	       oprresult as arg_result_type_id,
	       oprcode as func_main,
	       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
	from pg_catalog.pg_operator O
	where oprnamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
2024-12-09 08:14:49.159 UTC [58] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:14:49.159 UTC [58] LOG:  duration: 0.087 ms
2024-12-09 08:14:49.166 UTC [58] LOG:  duration: 0.093 ms
2024-12-09 08:14:49.166 UTC [58] LOG:  duration: 0.093 ms
2024-12-09 08:14:49.166 UTC [58] LOG:  execute <unnamed>: select oid as id,
	       xmin as state_number,
	       collname as name,
	       collcollate as lc_collate,
	       collctype as lc_ctype,
	       pg_catalog.pg_get_userbyid(collowner) as "owner"
	from pg_catalog.pg_collation
	where collnamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
2024-12-09 08:14:49.166 UTC [58] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:14:49.166 UTC [58] LOG:  duration: 0.050 ms
2024-12-09 08:14:49.173 UTC [58] LOG:  duration: 0.217 ms
2024-12-09 08:14:49.173 UTC [58] LOG:  duration: 0.506 ms
2024-12-09 08:14:49.173 UTC [58] LOG:  execute <unnamed>: with T as ( select distinct T.oid as table_id, T.relname as table_name
	            from pg_catalog.pg_class T,
	                 pg_catalog.pg_attribute A
	            where T.relnamespace = $1::oid
	              and T.relkind in ('r', 'm', 'v', 'f', 'p')
	              --  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid))
	              and A.attrelid = T.oid )
	select T.table_id,
	       C.attnum as column_position,
	       C.attname as column_name,
	       C.xmin as column_state_number,
	       C.atttypmod as type_mod,
	       C.attndims as dimensions_number,
	       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
	       C.atttypid as type_id,
	       C.attnotnull as mandatory,
	       pg_catalog.pg_get_expr(D.adbin, T.table_id) /* D.adsrc */ as column_default_expression,
	       not C.attislocal as column_is_inherited,
	       C.attfdwoptions as options,
	       C.attisdropped as column_is_dropped,
	       C.attidentity /* null */ as identity_kind
	from T
	  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
	  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
	where attnum > 0
	order by table_id, attnum
2024-12-09 08:14:49.173 UTC [58] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:14:49.173 UTC [58] LOG:  duration: 0.350 ms
2024-12-09 08:14:49.184 UTC [58] LOG:  duration: 0.430 ms
2024-12-09 08:14:49.185 UTC [58] LOG:  duration: 0.866 ms
2024-12-09 08:14:49.185 UTC [58] LOG:  execute <unnamed>: with tab as ( select relnamespace as schema_id,
	                     oid as table_id,
	                     relkind as table_kind
	              from pg_catalog.pg_class
	              where relnamespace = $1::oid
	                and relkind in ('r','m','v','p')),
	    ind_head as ( select indrelid as table_id,
	                         indexrelid as index_id,
	                         indisunique as is_unique,
	                         indisprimary as is_primary,
	                         indkey as column_positions,
	                         indclass as column_operators,
	                         indoption as column_options,
	                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
	                         case when indexprs is not null
	                             then pg_catalog.array_to_string(array(
	                                      select case when indkey[k] = 0
	                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
	                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
	                                             end
	                                      from pg_catalog.generate_subscripts(indkey, 1) as k
	                                      order by k),
	                                  chr(28))
	                             else null end as expressions
	                  from pg_catalog.pg_index ),
	    ind_stor as ( select cls.relnamespace as schema_id,
	                         cls.oid as index_id,
	                         cls.xmin as state_number,
	                         cls.relname as index_name,
	                         pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') /* am.amcanorder */ as can_order
	                  from pg_catalog.pg_class cls
	                    /* join pg_catalog.pg_am am on (cls.relam = am.oid)*/
	                  where cls.relkind = 'i'
	                    /* and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid) */)
	select table_id, table_kind,
	       index_name, index_id, state_number,
	       is_unique, is_primary,
	       column_positions, column_operators, column_options,
	       condition, expressions, can_order
	from tab natural join ind_head natural join ind_stor
2024-12-09 08:14:49.185 UTC [58] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:14:49.185 UTC [58] LOG:  duration: 0.244 ms
2024-12-09 08:14:49.197 UTC [58] LOG:  duration: 0.320 ms
2024-12-09 08:14:49.197 UTC [58] LOG:  duration: 0.352 ms
2024-12-09 08:14:49.197 UTC [58] LOG:  execute <unnamed>: with T as ( select oid as table_id,
	                   relkind as table_kind,
	                   xmin as table_state_id
	            from pg_catalog.pg_class
	            where relkind in ('r','v','f','p')
	              and relnamespace = $1::oid ),
	     C as ( select conrelid as table_id,
	                   oid::bigint as con_id,
	                   xmin as con_state_id,
	                   conname as con_name,
	                   contype as con_kind,
	                   conkey as con_columns,
	                   conindid as index_id,
	                   confrelid as ref_table_id,
	                   confkey as ref_columns,
	                   condeferrable as is_deferrable,
	                   condeferred as is_init_deferred,
	                   confupdtype as on_update,
	                   confdeltype as on_delete,
	                   conbin /* consrc */
	            from pg_catalog.pg_constraint
	            where contype in ('p','u','f','c')
	              and connamespace = $2::oid )
	select table_id,
	       table_kind,
	       con_id,
	       con_state_id::varchar::bigint as con_state_id,
	       con_name,
	       con_kind,
	       con_columns,
	       index_id,
	       ref_table_id,
	       is_deferrable,
	       is_init_deferred,
	       on_update,
	       on_delete,
	       pg_catalog.pg_get_expr(conbin, table_id) /* consrc */ as con_expression,
	       ref_columns
	from T natural join C
	--  where pg_catalog.age(table_state_id) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(:tx::varchar::xid)
	order by pg_catalog.strpos('pufc', con_kind)
2024-12-09 08:14:49.197 UTC [58] DETAIL:  parameters: $1 = '2200', $2 = '2200'
2024-12-09 08:14:49.197 UTC [58] LOG:  duration: 0.165 ms
2024-12-09 08:14:49.207 UTC [58] LOG:  duration: 0.216 ms
2024-12-09 08:14:49.207 UTC [58] LOG:  duration: 0.283 ms
2024-12-09 08:14:49.207 UTC [58] LOG:  execute <unnamed>: select R.ev_class as table_id,
	       R.oid as rule_id,
	       R.xmin as rule_state_number,
	       R.rulename as rule_name,
	       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
	       R.ev_enabled as rule_fire_mode,
	       R.is_instead as rule_is_instead
	from pg_catalog.pg_rewrite R
	where R.ev_class in (select oid
	                     from pg_catalog.pg_class
	                     where relnamespace = $1::oid)
	  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:tx::varchar::xid)
	  and R.rulename != '_RETURN'::name
	order by R.ev_class::bigint, ev_type
2024-12-09 08:14:49.207 UTC [58] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:14:49.207 UTC [58] LOG:  duration: 0.095 ms
2024-12-09 08:14:49.219 UTC [58] LOG:  duration: 0.225 ms
2024-12-09 08:14:49.219 UTC [58] LOG:  duration: 0.311 ms
2024-12-09 08:14:49.219 UTC [58] LOG:  execute <unnamed>: select T.tgrelid as table_id,
	       T.oid as trigger_id,
	       T.xmin as trigger_state_number,
	       T.tgname as trigger_name,
	       T.tgfoid as function_id,
	       T.tgtype & 31 as bits,
	       T.tgdeferrable as is_deferrable,
	       T.tginitdeferred as is_init_deferred,
	       T.tgenabled as trigger_fire_mode,
	       T.tgattr as columns,
	       pg_catalog.pg_get_triggerdef(T.oid, true) as source_code
	from pg_catalog.pg_trigger T
	where T.tgrelid in (select oid
	                    from pg_catalog.pg_class
	                    where relnamespace = $1::oid)
	  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
	  and not T.tgisinternal
2024-12-09 08:14:49.219 UTC [58] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:14:49.219 UTC [58] LOG:  duration: 0.145 ms
2024-12-09 08:14:49.229 UTC [58] LOG:  duration: 0.558 ms
2024-12-09 08:14:49.230 UTC [58] LOG:  duration: 1.681 ms
2024-12-09 08:14:49.231 UTC [58] LOG:  execute <unnamed>: select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_class C on D.objoid = C.oid
	where C.relnamespace = $1::oid and C.relkind != 'c'
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
	  left join pg_catalog.pg_class C on T.typrelid = C.oid
	where T.typnamespace = $2::oid and (C.relkind = 'c' or C.relkind is null)
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_constraint C on D.objoid = C.oid
	where C.connamespace = $3::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_trigger T on T.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = T.tgrelid
	where C.relnamespace = $4::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_rewrite R on R.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = R.ev_class
	where C.relnamespace = $5::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_proc P on P.oid = D.objoid
	where P.pronamespace = $6::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_operator O on O.oid = D.objoid
	where O.oprnamespace = $7::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_collation C on C.oid = D.objoid
	where C.collnamespace = $8::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	
2024-12-09 08:14:49.231 UTC [58] DETAIL:  parameters: $1 = '2200', $2 = '2200', $3 = '2200', $4 = '2200', $5 = '2200', $6 = '2200', $7 = '2200', $8 = '2200'
2024-12-09 08:14:49.231 UTC [58] LOG:  duration: 0.745 ms
2024-12-09 08:14:49.240 UTC [58] LOG:  duration: 0.278 ms
2024-12-09 08:14:49.241 UTC [58] LOG:  duration: 0.433 ms
2024-12-09 08:14:49.241 UTC [58] LOG:  execute <unnamed>: select distinct
	       T.relkind as view_kind,
	       T.oid as view_id,
	       pg_catalog.pg_get_viewdef(T.oid, true) as source_text
	from pg_catalog.pg_class T
	  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
	  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
	where N.oid = $1::oid
	  and T.relkind in ('m','v')
	  --  and (pg_catalog.age(T.xmin) <= pg_catalog.age(:src_tx::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(:src_tx::varchar::xid))
2024-12-09 08:14:49.241 UTC [58] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:14:49.241 UTC [58] LOG:  duration: 0.189 ms
2024-12-09 08:14:49.249 UTC [58] LOG:  duration: 0.157 ms
2024-12-09 08:14:49.249 UTC [58] LOG:  duration: 0.232 ms
2024-12-09 08:14:49.249 UTC [58] LOG:  execute <unnamed>: with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
	            from pg_catalog.pg_class
	            where relnamespace = $1::oid
	              and relkind in ('r', 'm', 'v', 'f', 'p') )
	select table_kind,
	       table_id,
	       R.oid as rule_id,
	       pg_catalog.pg_get_ruledef(R.oid, true) as source_text
	from A join pg_catalog.pg_rewrite R
	        on A.table_id = R.ev_class
	where R.rulename != '_RETURN'::name
	  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:src_tx::varchar::xid)
2024-12-09 08:14:49.249 UTC [58] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:14:49.249 UTC [58] LOG:  duration: 0.095 ms
2024-12-09 08:14:49.257 UTC [58] LOG:  duration: 0.182 ms
2024-12-09 08:14:49.257 UTC [58] LOG:  duration: 0.239 ms
2024-12-09 08:14:49.257 UTC [58] LOG:  execute <unnamed>: with system_languages as ( select oid as lang
	                           from pg_catalog.pg_language
	                           where lanname in ('c','internal') )
	select oid as id,
	       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
	       pg_catalog.pg_get_function_result(oid) as result_def,
	       prosrc as source_text
	from pg_catalog.pg_proc
	where pronamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= pg_catalog.age(:src_tx::varchar::xid)
	  and not (prokind = 'a') /* proisagg */
	  and prolang not in (select lang from system_languages)
	  and prosrc is not null
2024-12-09 08:14:49.257 UTC [58] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:14:49.258 UTC [58] LOG:  duration: 0.894 ms
2024-12-09 08:14:49.267 UTC [58] LOG:  duration: 0.171 ms
2024-12-09 08:14:49.267 UTC [58] LOG:  duration: 0.199 ms
2024-12-09 08:14:49.267 UTC [58] LOG:  execute <unnamed>: select distinct connamespace as schema_id
	from pg_catalog.pg_constraint F,
	     pg_catalog.pg_class O
	where F.contype = 'f'
	  and F.confrelid = O.oid
	  and O.relnamespace in ($1)
2024-12-09 08:14:49.267 UTC [58] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:14:49.267 UTC [58] LOG:  duration: 0.049 ms
2024-12-09 08:14:49.304 UTC [58] LOG:  duration: 0.041 ms
2024-12-09 08:14:49.304 UTC [58] LOG:  duration: 0.010 ms
2024-12-09 08:14:49.304 UTC [58] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:14:49.304 UTC [58] LOG:  duration: 0.017 ms
2024-12-09 08:15:43.819 UTC [61] LOG:  connection received: host=172.18.0.1 port=49974
2024-12-09 08:15:43.841 UTC [61] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:15:43.883 UTC [61] LOG:  duration: 0.085 ms
2024-12-09 08:15:43.883 UTC [61] LOG:  duration: 0.009 ms
2024-12-09 08:15:43.883 UTC [61] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:15:43.883 UTC [61] LOG:  duration: 0.021 ms
2024-12-09 08:15:43.884 UTC [61] LOG:  duration: 0.032 ms
2024-12-09 08:15:43.884 UTC [61] LOG:  duration: 0.006 ms
2024-12-09 08:15:43.884 UTC [61] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:15:43.884 UTC [61] LOG:  duration: 0.021 ms
2024-12-09 08:15:43.922 UTC [61] LOG:  duration: 0.228 ms
2024-12-09 08:15:43.922 UTC [61] LOG:  duration: 0.076 ms
2024-12-09 08:15:43.922 UTC [61] LOG:  execute <unnamed>: select version()
2024-12-09 08:15:43.922 UTC [61] LOG:  duration: 0.029 ms
2024-12-09 08:15:43.986 UTC [61] LOG:  duration: 0.028 ms
2024-12-09 08:15:43.986 UTC [61] LOG:  duration: 0.007 ms
2024-12-09 08:15:44.009 UTC [61] LOG:  duration: 0.183 ms
2024-12-09 08:15:44.009 UTC [61] LOG:  duration: 0.033 ms
2024-12-09 08:15:44.009 UTC [61] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2024-12-09 08:15:44.010 UTC [61] LOG:  duration: 0.028 ms
2024-12-09 08:15:44.045 UTC [61] LOG:  duration: 0.711 ms
2024-12-09 08:15:44.046 UTC [61] LOG:  duration: 0.697 ms
2024-12-09 08:15:44.046 UTC [61] LOG:  execute <unnamed>: SELECT e.typdelim FROM pg_catalog.pg_type t, pg_catalog.pg_type e WHERE t.oid = $1 and t.typelem = e.oid
2024-12-09 08:15:44.046 UTC [61] DETAIL:  parameters: $1 = '1003'
2024-12-09 08:15:44.046 UTC [61] LOG:  duration: 0.029 ms
2024-12-09 08:15:44.070 UTC [61] LOG:  duration: 0.158 ms
2024-12-09 08:15:44.070 UTC [61] LOG:  duration: 0.036 ms
2024-12-09 08:15:44.070 UTC [61] LOG:  execute <unnamed>: select current_database(), current_schema(), current_user
2024-12-09 08:15:44.070 UTC [61] LOG:  duration: 0.018 ms
2024-12-09 08:15:44.121 UTC [61] LOG:  duration: 0.223 ms
2024-12-09 08:15:44.122 UTC [61] LOG:  duration: 0.036 ms
2024-12-09 08:15:44.122 UTC [61] LOG:  execute <unnamed>: select round(extract(epoch from pg_postmaster_start_time() at time zone 'UTC')) as startup_time
2024-12-09 08:15:44.122 UTC [61] LOG:  duration: 0.124 ms
2024-12-09 08:15:44.150 UTC [61] LOG:  duration: 0.331 ms
2024-12-09 08:15:44.151 UTC [61] LOG:  duration: 0.230 ms
2024-12-09 08:15:44.151 UTC [61] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	where not datistemplate
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2024-12-09 08:15:44.151 UTC [61] LOG:  duration: 0.048 ms
2024-12-09 08:15:44.164 UTC [61] LOG:  duration: 0.333 ms
2024-12-09 08:15:44.165 UTC [61] LOG:  duration: 0.484 ms
2024-12-09 08:15:44.165 UTC [61] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:15:44.165 UTC [61] LOG:  duration: 0.078 ms
2024-12-09 08:15:44.172 UTC [61] LOG:  duration: 0.263 ms
2024-12-09 08:15:44.172 UTC [61] LOG:  duration: 0.339 ms
2024-12-09 08:15:44.172 UTC [61] LOG:  execute <unnamed>: SELECT n.nspname = ANY(current_schemas(true)), n.nspname, t.typname FROM pg_catalog.pg_type t JOIN pg_catalog.pg_namespace n ON t.typnamespace = n.oid WHERE t.oid = $1
2024-12-09 08:15:44.172 UTC [61] DETAIL:  parameters: $1 = '28'
2024-12-09 08:15:44.172 UTC [61] LOG:  duration: 0.085 ms
2024-12-09 08:15:44.175 UTC [61] LOG:  duration: 0.619 ms
2024-12-09 08:15:44.175 UTC [61] LOG:  duration: 0.395 ms
2024-12-09 08:15:44.175 UTC [61] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc, typtype   FROM pg_catalog.pg_type   LEFT   JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE typname = $1  ORDER BY sp.r, pg_type.oid DESC LIMIT 1
2024-12-09 08:15:44.175 UTC [61] DETAIL:  parameters: $1 = 'xid'
2024-12-09 08:15:44.175 UTC [61] LOG:  duration: 0.118 ms
2024-12-09 08:15:44.186 UTC [61] LOG:  duration: 0.575 ms
2024-12-09 08:15:44.186 UTC [61] LOG:  duration: 0.607 ms
2024-12-09 08:15:44.187 UTC [61] LOG:  execute <unnamed>: select R.oid::bigint as role_id, rolname as role_name,
	  rolsuper is_super, rolinherit is_inherit,
	  rolcreaterole can_createrole, rolcreatedb can_createdb,
	  rolcanlogin can_login, rolreplication /* false */ is_replication,
	  rolconnlimit conn_limit, rolvaliduntil valid_until,
	  rolbypassrls /* false */ bypass_rls, rolconfig config,
	  D.description
	from pg_catalog.pg_roles R
	  left join pg_catalog.pg_shdescription D on D.objoid = R.oid
2024-12-09 08:15:44.187 UTC [61] LOG:  duration: 0.131 ms
2024-12-09 08:15:44.208 UTC [61] LOG:  duration: 0.235 ms
2024-12-09 08:15:44.208 UTC [61] LOG:  duration: 0.273 ms
2024-12-09 08:15:44.208 UTC [61] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	where not datistemplate
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2024-12-09 08:15:44.208 UTC [61] LOG:  duration: 0.103 ms
2024-12-09 08:15:44.222 UTC [61] LOG:  duration: 0.217 ms
2024-12-09 08:15:44.223 UTC [61] LOG:  duration: 0.451 ms
2024-12-09 08:15:44.223 UTC [61] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:15:44.223 UTC [61] LOG:  duration: 0.072 ms
2024-12-09 08:15:44.239 UTC [61] LOG:  duration: 0.236 ms
2024-12-09 08:15:44.239 UTC [61] LOG:  duration: 0.489 ms
2024-12-09 08:15:44.239 UTC [61] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:15:44.239 UTC [61] LOG:  duration: 0.114 ms
2024-12-09 08:15:44.259 UTC [61] LOG:  duration: 0.254 ms
2024-12-09 08:15:44.259 UTC [61] LOG:  duration: 0.254 ms
2024-12-09 08:15:44.259 UTC [61] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       datname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.datdba) as "owner"
	from pg_catalog.pg_database N
	  left join pg_catalog.pg_shdescription D on N.oid = D.objoid
	where not datistemplate
	order by case when datname = pg_catalog.current_database() then -1::bigint else N.oid::bigint end
2024-12-09 08:15:44.259 UTC [61] LOG:  duration: 0.097 ms
2024-12-09 08:15:44.279 UTC [61] LOG:  duration: 0.228 ms
2024-12-09 08:15:44.279 UTC [61] LOG:  duration: 0.484 ms
2024-12-09 08:15:44.279 UTC [61] LOG:  execute <unnamed>: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:15:44.279 UTC [61] LOG:  duration: 0.133 ms
2024-12-09 08:15:44.296 UTC [61] LOG:  duration: 0.219 ms
2024-12-09 08:15:44.297 UTC [61] LOG:  duration: 0.435 ms
2024-12-09 08:15:44.297 UTC [61] LOG:  execute S_1: select N.oid::bigint as id,
	       N.xmin as state_number,
	       nspname as name,
	       D.description,
	       pg_catalog.pg_get_userbyid(N.nspowner) as "owner"
	from pg_catalog.pg_namespace N
	  left join pg_catalog.pg_description D on N.oid = D.objoid
	/* */where N.nspname not like 'pg_toast%' and N.nspname not like 'pg_temp%' 
	order by case when nspname = current_schema then -1::bigint else N.oid::bigint end
2024-12-09 08:15:44.297 UTC [61] LOG:  duration: 0.078 ms
2024-12-09 08:15:44.310 UTC [61] LOG:  duration: 0.172 ms
2024-12-09 08:15:44.310 UTC [61] LOG:  duration: 0.095 ms
2024-12-09 08:15:44.310 UTC [61] LOG:  execute <unnamed>: select case
	  when pg_catalog.pg_is_in_recovery()
	    then $1
	  else
	    pg_catalog.txid_current()::varchar::bigint
	  end as current_txid
2024-12-09 08:15:44.310 UTC [61] DETAIL:  parameters: $1 = '0'
2024-12-09 08:15:44.310 UTC [61] LOG:  duration: 0.051 ms
2024-12-09 08:15:44.322 UTC [61] LOG:  duration: 0.498 ms
2024-12-09 08:15:44.322 UTC [61] LOG:  duration: 0.253 ms
2024-12-09 08:15:44.322 UTC [61] LOG:  execute <unnamed>: select L.transactionid::varchar::bigint as transaction_id
	from pg_catalog.pg_locks L
	where L.transactionid is not null
	order by pg_catalog.age(L.transactionid) desc
	limit 1
2024-12-09 08:15:44.322 UTC [61] LOG:  duration: 0.104 ms
2024-12-09 08:15:44.331 UTC [61] LOG:  duration: 0.349 ms
2024-12-09 08:15:44.332 UTC [61] LOG:  duration: 0.154 ms
2024-12-09 08:15:44.332 UTC [61] LOG:  execute <unnamed>: select usesuper
	from pg_user
	where usename = current_user
2024-12-09 08:15:44.332 UTC [61] LOG:  duration: 0.017 ms
2024-12-09 08:15:44.340 UTC [61] LOG:  duration: 0.217 ms
2024-12-09 08:15:44.340 UTC [61] LOG:  duration: 0.136 ms
2024-12-09 08:15:44.340 UTC [61] LOG:  execute <unnamed>: select lanname
	from pg_catalog.pg_language
	order by lanname
2024-12-09 08:15:44.340 UTC [61] LOG:  duration: 0.052 ms
2024-12-09 08:15:44.354 UTC [61] LOG:  duration: 0.310 ms
2024-12-09 08:15:44.355 UTC [61] LOG:  duration: 0.884 ms
2024-12-09 08:15:44.355 UTC [61] LOG:  execute <unnamed>: select distinct oid
	from pg_catalog.pg_am
	union
	select distinct oid
	from pg_catalog.pg_foreign_data_wrapper
	union
	select distinct oid
	from pg_catalog.pg_foreign_server
	union
	select distinct oid
	from pg_catalog.pg_extension
	
	union
	select distinct oid
	from pg_catalog.pg_user_mapping
	
2024-12-09 08:15:44.355 UTC [61] LOG:  duration: 0.128 ms
2024-12-09 08:15:44.370 UTC [61] LOG:  duration: 0.221 ms
2024-12-09 08:15:44.371 UTC [61] LOG:  duration: 0.122 ms
2024-12-09 08:15:44.371 UTC [61] LOG:  execute <unnamed>: select D.objoid id
	from pg_catalog.pg_description D
	where D.classoid in (
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
2024-12-09 08:15:44.371 UTC [61] LOG:  duration: 0.582 ms
2024-12-09 08:15:44.384 UTC [61] LOG:  duration: 0.119 ms
2024-12-09 08:15:44.384 UTC [61] LOG:  duration: 0.067 ms
2024-12-09 08:15:44.384 UTC [61] LOG:  execute <unnamed>: select pg_catalog.age($1::varchar::xid) as database_age
2024-12-09 08:15:44.384 UTC [61] DETAIL:  parameters: $1 = '0'
2024-12-09 08:15:44.384 UTC [61] LOG:  duration: 0.015 ms
2024-12-09 08:15:44.397 UTC [61] LOG:  duration: 0.354 ms
2024-12-09 08:15:44.398 UTC [61] LOG:  duration: 0.687 ms
2024-12-09 08:15:44.398 UTC [61] LOG:  execute <unnamed>: select A.oid as access_method_id,
	       A.xmin as state_number,
	       A.amname as access_method_name
	       ,
	       A.amhandler::oid as handler_id,
	       pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as handler_name,
	       A.amtype as access_method_type
	       
	from pg_am A
	  join pg_proc P on A.amhandler::oid = P.oid
	  join pg_namespace N on P.pronamespace = N.oid
	  
	where pg_catalog.age(A.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:15:44.398 UTC [61] DETAIL:  parameters: $1 = '0'
2024-12-09 08:15:44.398 UTC [61] LOG:  duration: 0.145 ms
2024-12-09 08:15:44.411 UTC [61] LOG:  duration: 0.309 ms
2024-12-09 08:15:44.412 UTC [61] LOG:  duration: 0.680 ms
2024-12-09 08:15:44.412 UTC [61] LOG:  execute <unnamed>: select fdw.oid as id,
	       fdw.xmin as state_number,
	       fdw.fdwname as name,
	       pr.proname as handler,
	       nspc.nspname as handler_schema,
	       pr2.proname as validator,
	       nspc2.nspname as validator_schema,
	       fdw.fdwoptions as options,
	       pg_catalog.pg_get_userbyid(fdw.fdwowner) as "owner"
	from pg_catalog.pg_foreign_data_wrapper fdw
	     left outer join pg_catalog.pg_proc pr on fdw.fdwhandler = pr.oid
	     left outer join pg_catalog.pg_namespace nspc on pr.pronamespace = nspc.oid
	     left outer join pg_catalog.pg_proc pr2 on fdw.fdwvalidator = pr2.oid
	     left outer join pg_catalog.pg_namespace nspc2 on pr2.pronamespace = nspc2.oid
	  where pg_catalog.age(fdw.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:15:44.412 UTC [61] DETAIL:  parameters: $1 = '0'
2024-12-09 08:15:44.412 UTC [61] LOG:  duration: 0.056 ms
2024-12-09 08:15:44.423 UTC [61] LOG:  duration: 0.172 ms
2024-12-09 08:15:44.423 UTC [61] LOG:  duration: 0.099 ms
2024-12-09 08:15:44.423 UTC [61] LOG:  execute <unnamed>: select srv.oid as id,
	       srv.srvfdw as fdw_id,
	       srv.xmin as state_number,
	       srv.srvname as name,
	       srv.srvtype as type,
	       srv.srvversion as version,
	       srv.srvoptions as options,
	       pg_catalog.pg_get_userbyid(srv.srvowner) as "owner"
	from pg_catalog.pg_foreign_server srv
	  where pg_catalog.age(srv.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:15:44.423 UTC [61] DETAIL:  parameters: $1 = '0'
2024-12-09 08:15:44.423 UTC [61] LOG:  duration: 0.013 ms
2024-12-09 08:15:44.432 UTC [61] LOG:  duration: 0.251 ms
2024-12-09 08:15:44.432 UTC [61] LOG:  duration: 0.222 ms
2024-12-09 08:15:44.432 UTC [61] LOG:  execute <unnamed>: select pg_extension.oid as id,
	       pg_extension.xmin as state_number,
	       extname as name,
	       extversion as version,
	       extnamespace as schema_id,
	       nspname as schema_name,
	       array(select target
	             from pg_extension_update_paths(extname)
	             where source = extversion and path is not null) as available_updates
	from pg_catalog.pg_extension
	  join pg_namespace on pg_extension.extnamespace = pg_namespace.oid
	where pg_catalog.age(pg_extension.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:15:44.432 UTC [61] DETAIL:  parameters: $1 = '0'
2024-12-09 08:15:44.432 UTC [61] LOG:  duration: 0.208 ms
2024-12-09 08:15:44.438 UTC [61] LOG:  duration: 0.104 ms
2024-12-09 08:15:44.438 UTC [61] LOG:  duration: 0.229 ms
2024-12-09 08:15:44.438 UTC [61] LOG:  execute <unnamed>: SELECT e.typdelim FROM pg_catalog.pg_type t, pg_catalog.pg_type e WHERE t.oid = $1 and t.typelem = e.oid
2024-12-09 08:15:44.438 UTC [61] DETAIL:  parameters: $1 = '1009'
2024-12-09 08:15:44.438 UTC [61] LOG:  duration: 0.052 ms
2024-12-09 08:15:44.445 UTC [61] LOG:  duration: 0.373 ms
2024-12-09 08:15:44.445 UTC [61] LOG:  duration: 0.157 ms
2024-12-09 08:15:44.445 UTC [61] LOG:  execute <unnamed>: select D.objoid id, case
	    when 'pg_catalog.pg_am'::regclass = classoid then 'A'
	    when 'pg_catalog.pg_foreign_data_wrapper'::regclass = classoid then 'W'
	    when 'pg_catalog.pg_foreign_server'::regclass = classoid then 'S'
	    when 'pg_catalog.pg_extension'::regclass = classoid then 'E'
	    
	  end as kind,
	  D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	where classoid in (
	  'pg_catalog.pg_am'::regclass,
	  'pg_catalog.pg_foreign_data_wrapper'::regclass,
	  'pg_catalog.pg_foreign_server'::regclass
	  ,
	  'pg_catalog.pg_extension'::regclass
	  
	)
	and pg_catalog.age(D.xmin) <= pg_catalog.age($1::varchar::xid)
2024-12-09 08:15:44.445 UTC [61] DETAIL:  parameters: $1 = '0'
2024-12-09 08:15:44.446 UTC [61] LOG:  duration: 0.700 ms
2024-12-09 08:15:44.454 UTC [61] LOG:  duration: 0.389 ms
2024-12-09 08:15:44.454 UTC [61] LOG:  duration: 0.488 ms
2024-12-09 08:15:44.455 UTC [61] LOG:  execute <unnamed>: select 'sequence' as dependent_kind,
	       'table' as owner_kind,
	       D.objid as dependent_id,
	       D.refobjid as owner_id,
	       D.refobjsubid as owner_subobject_id
	from pg_depend D
	  join pg_class C_SEQ on D.objid = C_SEQ.oid
	  join pg_class C_TAB on D.refobjid = C_TAB.oid
	where C_SEQ.relkind = 'S'
	  and C_TAB.relkind = 'r'
	  and D.refobjsubid <> 0
	  and (D.deptype = 'a' or D.deptype = 'i')
2024-12-09 08:15:44.456 UTC [61] LOG:  duration: 1.591 ms
2024-12-09 08:15:44.466 UTC [61] LOG:  duration: 0.938 ms
2024-12-09 08:15:44.470 UTC [61] LOG:  duration: 4.064 ms
2024-12-09 08:15:44.470 UTC [61] LOG:  execute <unnamed>: with saved_age as (select greatest(pg_catalog.age($1::varchar::xid), pg_catalog.age($2::varchar::xid)) as "value")
	select pg_catalog.age(C.last_tx) <= (case when SA."value" < 0 then 2147483647 else SA."value" end) as has_changes from
	(
	  select X.last_tx as last_tx
	  from (
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_type
	      where typnamespace = $3::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_class
	      where relnamespace = $4::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_proc
	      where pronamespace = $5::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_operator
	      where oprnamespace = $6::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select A.xmin as last_tx
	      from pg_catalog.pg_attribute A join pg_catalog.pg_class K on K.oid = A.attrelid
	      where K.relnamespace = $7::oid
	      order by pg_catalog.age(A.xmin)
	      limit 1
	    )
	    union all
	    (
	    select E.xmin as last_tx
	      from pg_catalog.pg_enum E join pg_catalog.pg_type T on T.oid = E.enumtypid
	      where T.typnamespace = $8::oid
	      order by pg_catalog.age(E.xmin)
	      limit 1
	    )
	    union all
	    (
	    select xmin as last_tx
	      from pg_catalog.pg_constraint
	      where connamespace = $9::oid
	      order by pg_catalog.age(xmin)
	      limit 1
	    )
	    union all
	    (
	    select CO.xmin as last_tx
	      from pg_catalog.pg_collation CO
	      where CO.collnamespace = $10::oid
	      order by pg_catalog.age(CO.xmin)
	      limit 1
	    )
	    union all
	    
	    (
	    select IX.xmin as last_tx
	      from pg_catalog.pg_index IX,
	           pg_catalog.pg_class IC
	      where IC.oid = IX.indrelid
	        and IC.relnamespace = $11::oid
	        order by pg_catalog.age(IX.xmin)
	        limit 1
	    )
	    union all
	    (
	    select RU.xmin as last_tx
	      from pg_catalog.pg_rewrite RU,
	           pg_catalog.pg_class RC
	      where RC.oid = RU.ev_class
	        and RC.relnamespace = $12::oid
	        order by pg_catalog.age(RU.xmin)
	        limit 1
	    )
	    union all
	    (
	    select TG.xmin as last_tx
	      from pg_catalog.pg_trigger TG,
	           pg_catalog.pg_class TC
	      where TC.oid = TG.tgrelid
	        and TC.relnamespace = $13::oid
	        order by pg_catalog.age(TG.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_class C on C.oid = D.objoid
	      where C.relnamespace = $14::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_constraint C on C.oid = D.objoid
	      where C.connamespace = $15::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_trigger T on T.oid = D.objoid
	        join pg_catalog.pg_class C on C.oid = T.tgrelid
	      where C.relnamespace = $16::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_rewrite R on R.oid = D.objoid
	        join pg_catalog.pg_class C on C.oid = R.ev_class
	      where C.relnamespace = $17::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_proc P on P.oid = D.objoid
	      where P.pronamespace = $18::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_type T on T.oid = D.objoid
	      where T.typnamespace = $19::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_operator O on O.oid = D.objoid
	      where O.oprnamespace = $20::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    union all
	    (
	    select D.xmin as last_tx
	      from pg_catalog.pg_description D
	        join pg_catalog.pg_collation C on C.oid = D.objoid
	      where C.collnamespace = $21::oid
	        order by pg_catalog.age(D.xmin)
	        limit 1
	    )
	    
	  ) X
	  order by pg_catalog.age(X.last_tx)
	  limit 1
	) C, saved_age SA
2024-12-09 08:15:44.470 UTC [61] DETAIL:  parameters: $1 = '0', $2 = '0', $3 = '2200', $4 = '2200', $5 = '2200', $6 = '2200', $7 = '2200', $8 = '2200', $9 = '2200', $10 = '2200', $11 = '2200', $12 = '2200', $13 = '2200', $14 = '2200', $15 = '2200', $16 = '2200', $17 = '2200', $18 = '2200', $19 = '2200', $20 = '2200', $21 = '2200'
2024-12-09 08:15:44.471 UTC [61] LOG:  duration: 1.150 ms
2024-12-09 08:15:44.479 UTC [61] LOG:  duration: 0.164 ms
2024-12-09 08:15:44.479 UTC [61] LOG:  duration: 0.042 ms
2024-12-09 08:15:44.479 UTC [61] LOG:  execute <unnamed>: select case
	  when pg_catalog.pg_is_in_recovery()
	    then $1
	  else
	    pg_catalog.txid_current()::varchar::bigint
	  end as current_txid
2024-12-09 08:15:44.479 UTC [61] DETAIL:  parameters: $1 = '0'
2024-12-09 08:15:44.479 UTC [61] LOG:  duration: 0.023 ms
2024-12-09 08:15:44.487 UTC [61] LOG:  duration: 0.135 ms
2024-12-09 08:15:44.487 UTC [61] LOG:  duration: 0.120 ms
2024-12-09 08:15:44.487 UTC [61] LOG:  execute <unnamed>: select L.transactionid::varchar::bigint as transaction_id
	from pg_catalog.pg_locks L
	where L.transactionid is not null
	order by pg_catalog.age(L.transactionid) desc
	limit 1
2024-12-09 08:15:44.487 UTC [61] LOG:  duration: 0.084 ms
2024-12-09 08:15:44.498 UTC [61] LOG:  duration: 0.323 ms
2024-12-09 08:15:44.498 UTC [61] LOG:  duration: 0.287 ms
2024-12-09 08:15:44.499 UTC [61] LOG:  execute <unnamed>: select cls.xmin as sequence_state_number,
	       sq.seqrelid as sequence_id,
	       cls.relname as sequence_name,
	       pg_catalog.format_type(sq.seqtypid, null) as data_type,
	       sq.seqstart as next_value,
	       sq.seqincrement as inc_value,
	       sq.seqmin as min_value,
	       sq.seqmax as max_value,
	       sq.seqcache as cache_size,
	       sq.seqcycle as cycle_option,
	       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
	from pg_catalog.pg_sequence sq
	    join pg_class cls on sq.seqrelid = cls.oid
	    where cls.relnamespace = $1::oid
	          --  and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid)
2024-12-09 08:15:44.499 UTC [61] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:15:44.499 UTC [61] LOG:  duration: 0.120 ms
2024-12-09 08:15:44.508 UTC [61] LOG:  duration: 0.377 ms
2024-12-09 08:15:44.508 UTC [61] LOG:  duration: 0.530 ms
2024-12-09 08:15:44.509 UTC [61] LOG:  execute <unnamed>: select T.oid as type_id,
	       T.xmin as type_state_number,
	       T.typname as type_name,
	       T.typtype as type_sub_kind,
	       T.typcategory as type_category,
	       T.typrelid as class_id,
	       T.typbasetype as base_type_id,
	       case when T.typtype in ('c','e') then null
	            else pg_catalog.format_type(T.typbasetype, T.typtypmod) end as type_def,
	       T.typdefault as default_expression,
	       T.typnotnull as mandatory,
	       pg_catalog.pg_get_userbyid(T.typowner) as "owner"
	from pg_catalog.pg_type T
	         left outer join pg_catalog.pg_class C
	             on T.typrelid = C.oid
	where T.typnamespace = $1::oid
	  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
	  and (T.typtype in ('d','e') or C.relkind = 'c'::"char" or T.typtype = 'b' and (T.typelem = 0 OR T.typcategory <> 'A'))
	order by 1
2024-12-09 08:15:44.509 UTC [61] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:15:44.509 UTC [61] LOG:  duration: 0.112 ms
2024-12-09 08:15:44.520 UTC [61] LOG:  duration: 0.472 ms
2024-12-09 08:15:44.520 UTC [61] LOG:  duration: 0.452 ms
2024-12-09 08:15:44.521 UTC [61] LOG:  execute <unnamed>: select T.relkind as table_kind,
	       T.relname as table_name,
	       T.oid as table_id,
	       T.xmin as table_state_number,
	       false /* T.relhasoids */ as table_with_oids,
	       T.relnamespace as tablespace_id,
	       T.reloptions as options,
	       (select pg_catalog.array_agg(inhparent)::varchar from (select inhparent::bigint from pg_catalog.pg_inherits where T.oid = inhrelid order by inhseqno) as bts) as ancestors,
	       (select pg_catalog.array_agg(inhrelid)::varchar from (select inhrelid::bigint from pg_catalog.pg_inherits where T.oid = inhparent order by inhrelid) as its) as successors,
	       T.relispartition /* false */ as is_partition,
	       pg_catalog.pg_get_partkeydef(T.oid) /* null */ as partition_key,
	       pg_catalog.pg_get_expr(T.relpartbound, T.oid) /* null */ as partition_expression,
	       pg_catalog.pg_get_userbyid(T.relowner) as "owner"
	from pg_catalog.pg_class T
	where relnamespace = $1::oid
	  and relkind in ('r', 'm', 'v', 'f', 'p')
	  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
	order by table_kind, table_id
2024-12-09 08:15:44.521 UTC [61] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:15:44.521 UTC [61] LOG:  duration: 0.243 ms
2024-12-09 08:15:44.533 UTC [61] LOG:  duration: 0.237 ms
2024-12-09 08:15:44.533 UTC [61] LOG:  duration: 0.377 ms
2024-12-09 08:15:44.533 UTC [61] LOG:  execute <unnamed>: select ft.ftrelid as table_id,
	       srv.srvname as table_server,
	       ft.ftoptions as table_options,
	       pg_catalog.pg_get_userbyid(cls.relowner) as "owner"
	from pg_catalog.pg_foreign_table ft
	     left outer join pg_catalog.pg_foreign_server srv on ft.ftserver = srv.oid
	     join pg_catalog.pg_class cls on ft.ftrelid = cls.oid
	where cls.relnamespace = $1::oid
	  --  and pg_catalog.age(ft.xmin) <= pg_catalog.age(:tx::varchar::xid)
	order by table_id
2024-12-09 08:15:44.533 UTC [61] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:15:44.533 UTC [61] LOG:  duration: 0.106 ms
2024-12-09 08:15:44.543 UTC [61] LOG:  duration: 0.706 ms
2024-12-09 08:15:44.544 UTC [61] LOG:  duration: 0.992 ms
2024-12-09 08:15:44.544 UTC [61] LOG:  execute <unnamed>: with schema_procs as (select prorettype, proargtypes, proallargtypes
	                      from pg_catalog.pg_proc
	                      where pronamespace = $1::oid
	                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
	     schema_opers as (select oprleft, oprright, oprresult
	                      from pg_catalog.pg_operator
	                      where oprnamespace = $2::oid
	                        /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */ ),
	     schema_aggregates as (select A.aggtranstype , A.aggmtranstype 
	                           from pg_catalog.pg_aggregate A
	                           join pg_catalog.pg_proc P
	                             on A.aggfnoid = P.oid
	                           where P.pronamespace = $3::oid
	                           /* and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid)) */),
	     schema_arg_types as ( select prorettype as type_id
	                           from schema_procs
	                           union
	                           select distinct unnest(proargtypes) as type_id
	                           from schema_procs
	                           union
	                           select distinct unnest(proallargtypes) as type_id
	                           from schema_procs
	                           union
	                           select oprleft as type_id
	                           from schema_opers
	                           where oprleft is not null
	                           union
	                           select oprright as type_id
	                           from schema_opers
	                           where oprright is not null
	                           union
	                           select oprresult as type_id
	                           from schema_opers
	                           where oprresult is not null
	                           union
	                           select aggtranstype::oid as type_id
	                           from schema_aggregates
	                           union
	                           select aggmtranstype::oid as type_id
	                           from schema_aggregates
	                           
	                           )
	select type_id, pg_catalog.format_type(type_id, null) as type_spec
	from schema_arg_types
	where type_id <> 0
2024-12-09 08:15:44.544 UTC [61] DETAIL:  parameters: $1 = '2200', $2 = '2200', $3 = '2200'
2024-12-09 08:15:44.545 UTC [61] LOG:  duration: 0.995 ms
2024-12-09 08:15:44.558 UTC [61] LOG:  duration: 0.395 ms
2024-12-09 08:15:44.558 UTC [61] LOG:  duration: 0.518 ms
2024-12-09 08:15:44.558 UTC [61] LOG:  execute <unnamed>: with languages as (select oid as lang_oid, lanname as lang
	                   from pg_catalog.pg_language),
	     routines as (select proname as r_name,
	                         prolang as lang_oid,
	                         oid as r_id,
	                         xmin as r_state_number,
	                         proargnames as arg_names,
	                         proargmodes as arg_modes,
	                         proargtypes::int[] as in_arg_types,
	                         proallargtypes::int[] as all_arg_types,
	                         pg_catalog.pg_get_expr(proargdefaults, 0) as arg_defaults,
	                         provariadic as arg_variadic_id,
	                         prorettype as ret_type_id,
	                         proretset as ret_set,
	                         prokind /* case when proiswindow then 'w'
	                                                when proisagg then 'a'
	                                                else 'f'
	                                           end */ as kind,
	                         provolatile as volatile_kind,
	                         proisstrict as is_strict,
	                         prosecdef as is_security_definer,
	                         proconfig as configuration_parameters,
	                         procost as cost,
	                         pg_catalog.pg_get_userbyid(proowner) as "owner",
	                         prorows as rows ,
	                         proleakproof as is_leakproof  ,
	                         proparallel as concurrency_kind 
	                  from pg_catalog.pg_proc
	                  where pronamespace = $1::oid
	                    and not (prokind = 'a') /* proisagg */
	                    /* and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid) */)
	select *
	from routines natural join languages
2024-12-09 08:15:44.558 UTC [61] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:15:44.559 UTC [61] LOG:  duration: 0.531 ms
2024-12-09 08:15:44.582 UTC [61] LOG:  duration: 0.879 ms
2024-12-09 08:15:44.610 UTC [61] LOG:  duration: 27.748 ms
2024-12-09 08:15:44.611 UTC [61] LOG:  execute <unnamed>: with procedures as (
	  select P.oid as function_id,
	         pg_catalog.quote_ident(N.nspname) || '.' || pg_catalog.quote_ident(P.proname) as function_name,
	         P.prorettype as return_type
	  from pg_catalog.pg_proc P
	  join pg_catalog.pg_namespace N
	    on P.pronamespace = N.oid
	),
	operators as (
	  select O.oid as operator_id,
	         pg_catalog.quote_ident(N.nspname) || '.' || O.oprname as operator_name
	  from pg_catalog.pg_operator O
	  join pg_catalog.pg_namespace N
	    on O.oprnamespace = N.oid
	)
	select P.oid as aggregate_id,
	       P.xmin as state_number,
	       P.proname as aggregate_name,
	       P.proargnames as arg_names,
	       P.proargmodes as arg_modes,
	       P.proargtypes::int[] as in_arg_types,
	       P.proallargtypes::int[] as all_arg_types,
	       A.aggtransfn::oid as transition_function_id,
	       PT.function_name::text as transition_function_name,
	       A.aggtranstype as transition_type,
	       A.aggfinalfn::oid as final_function_id,
	       case when A.aggfinalfn::oid = 0 then null else PF.function_name end as final_function_name,
	       case when A.aggfinalfn::oid = 0 then 0 else PF.return_type end as final_return_type,
	       A.agginitval as initial_value,
	       A.aggsortop as sort_operator_id,
	       case when A.aggsortop = 0 then null else O.operator_name end as sort_operator_name,
	       pg_catalog.pg_get_userbyid(P.proowner) as "owner"
	       ,
	       A.aggfinalextra as final_extra,
	       A.aggtransspace as state_size,
	       A.aggmtransfn::oid as moving_transition_id,
	       case when A.aggmtransfn::oid = 0 then null else FTP.function_name end as moving_transition_name,
	       A.aggminvtransfn::oid as inverse_transition_id,
	       case when A.aggminvtransfn::oid = 0 then null else ITP.function_name end as inverse_transition_name,
	       A.aggmtranstype::oid as moving_state_type,
	       A.aggmtransspace as moving_state_size,
	       A.aggmfinalfn::oid as moving_final_id,
	       case when A.aggmfinalfn::oid = 0 then null else FFP.function_name end as moving_final_name,
	       A.aggmfinalextra as moving_final_extra,
	       A.aggminitval as moving_initial_value,
	       A.aggkind as aggregate_kind,
	       A.aggnumdirectargs as direct_args
	       
	       ,
	       A.aggcombinefn::oid as combine_function_id,
	       case when A.aggcombinefn::oid = 0 then null else CP.function_name end as combine_function_name,
	       A.aggserialfn::oid as serialization_function_id,
	       case when A.aggserialfn::oid = 0 then null else SP.function_name end as serialization_function_name,
	       A.aggdeserialfn::oid as deserialization_function_id,
	       case when A.aggdeserialfn::oid = 0 then null else DP.function_name end as deserialization_function_name,
	       P.proparallel as concurrency_kind
	       
	from pg_catalog.pg_aggregate A
	join pg_catalog.pg_proc P
	  on A.aggfnoid = P.oid
	join procedures PT
	  on A.aggtransfn::oid = PT.function_id
	left outer join procedures PF
	  on A.aggfinalfn::oid = PF.function_id
	left outer join operators O
	  on A.aggsortop = O.operator_id
	left outer join procedures FTP
	  on A.aggmtransfn = FTP.function_id
	left outer join procedures ITP
	  on A.aggminvtransfn = ITP.function_id
	left outer join procedures FFP
	  on A.aggmfinalfn = FFP.function_id
	
	left outer join procedures CP
	  on A.aggcombinefn = CP.function_id
	left outer join procedures SP
	  on A.aggserialfn = SP.function_id
	left outer join procedures DP
	  on A.aggdeserialfn = DP.function_id
	
	where P.pronamespace = $1::oid
	--  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(P.xmin) <= pg_catalog.age(:tx::varchar::xid))
	order by P.oid
2024-12-09 08:15:44.611 UTC [61] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:15:45.990 UTC [61] LOG:  duration: 1379.539 ms
2024-12-09 08:15:46.002 UTC [61] LOG:  duration: 0.229 ms
2024-12-09 08:15:46.002 UTC [61] LOG:  duration: 0.138 ms
2024-12-09 08:15:46.002 UTC [61] LOG:  execute <unnamed>: select O.oid as op_id,
	       O.xmin as state_number,
	       oprname as op_name,
	       oprkind as op_kind,
	       oprleft as arg_left_type_id,
	       oprright as arg_right_type_id,
	       oprresult as arg_result_type_id,
	       oprcode as func_main,
	       pg_catalog.pg_get_userbyid(O.oprowner) as "owner"
	from pg_catalog.pg_operator O
	where oprnamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
2024-12-09 08:15:46.002 UTC [61] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:15:46.002 UTC [61] LOG:  duration: 0.097 ms
2024-12-09 08:15:46.009 UTC [61] LOG:  duration: 0.134 ms
2024-12-09 08:15:46.009 UTC [61] LOG:  duration: 0.101 ms
2024-12-09 08:15:46.009 UTC [61] LOG:  execute <unnamed>: select oid as id,
	       xmin as state_number,
	       collname as name,
	       collcollate as lc_collate,
	       collctype as lc_ctype,
	       pg_catalog.pg_get_userbyid(collowner) as "owner"
	from pg_catalog.pg_collation
	where collnamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= pg_catalog.age(:tx::varchar::xid)
2024-12-09 08:15:46.009 UTC [61] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:15:46.009 UTC [61] LOG:  duration: 0.061 ms
2024-12-09 08:15:46.015 UTC [61] LOG:  duration: 0.421 ms
2024-12-09 08:15:46.016 UTC [61] LOG:  duration: 0.738 ms
2024-12-09 08:15:46.016 UTC [61] LOG:  execute <unnamed>: with T as ( select distinct T.oid as table_id, T.relname as table_name
	            from pg_catalog.pg_class T,
	                 pg_catalog.pg_attribute A
	            where T.relnamespace = $1::oid
	              and T.relkind in ('r', 'm', 'v', 'f', 'p')
	              --  and (pg_catalog.age(A.xmin) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid))
	              and A.attrelid = T.oid )
	select T.table_id,
	       C.attnum as column_position,
	       C.attname as column_name,
	       C.xmin as column_state_number,
	       C.atttypmod as type_mod,
	       C.attndims as dimensions_number,
	       pg_catalog.format_type(C.atttypid, C.atttypmod) as type_spec,
	       C.atttypid as type_id,
	       C.attnotnull as mandatory,
	       pg_catalog.pg_get_expr(D.adbin, T.table_id) /* D.adsrc */ as column_default_expression,
	       not C.attislocal as column_is_inherited,
	       C.attfdwoptions as options,
	       C.attisdropped as column_is_dropped,
	       C.attidentity /* null */ as identity_kind
	from T
	  inner join pg_catalog.pg_attribute C on T.table_id = C.attrelid
	  left outer join pg_catalog.pg_attrdef D on (C.attrelid, C.attnum) = (D.adrelid, D.adnum)
	where attnum > 0
	order by table_id, attnum
2024-12-09 08:15:46.016 UTC [61] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:15:46.016 UTC [61] LOG:  duration: 0.304 ms
2024-12-09 08:15:46.025 UTC [61] LOG:  duration: 0.457 ms
2024-12-09 08:15:46.026 UTC [61] LOG:  duration: 0.604 ms
2024-12-09 08:15:46.026 UTC [61] LOG:  execute <unnamed>: with tab as ( select relnamespace as schema_id,
	                     oid as table_id,
	                     relkind as table_kind
	              from pg_catalog.pg_class
	              where relnamespace = $1::oid
	                and relkind in ('r','m','v','p')),
	    ind_head as ( select indrelid as table_id,
	                         indexrelid as index_id,
	                         indisunique as is_unique,
	                         indisprimary as is_primary,
	                         indkey as column_positions,
	                         indclass as column_operators,
	                         indoption as column_options,
	                         pg_catalog.pg_get_expr(indpred, indrelid) as condition,
	                         case when indexprs is not null
	                             then pg_catalog.array_to_string(array(
	                                      select case when indkey[k] = 0
	                                             then chr(27) || pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
	                                             else pg_catalog.pg_get_indexdef(indexrelid, k + 1, true)
	                                             end
	                                      from pg_catalog.generate_subscripts(indkey, 1) as k
	                                      order by k),
	                                  chr(28))
	                             else null end as expressions
	                  from pg_catalog.pg_index ),
	    ind_stor as ( select cls.relnamespace as schema_id,
	                         cls.oid as index_id,
	                         cls.xmin as state_number,
	                         cls.relname as index_name,
	                         pg_catalog.pg_indexam_has_property(cls.relam, 'can_order') /* am.amcanorder */ as can_order
	                  from pg_catalog.pg_class cls
	                    /* join pg_catalog.pg_am am on (cls.relam = am.oid)*/
	                  where cls.relkind = 'i'
	                    /* and pg_catalog.age(cls.xmin) <= pg_catalog.age(:tx::varchar::xid) */)
	select table_id, table_kind,
	       index_name, index_id, state_number,
	       is_unique, is_primary,
	       column_positions, column_operators, column_options,
	       condition, expressions, can_order
	from tab natural join ind_head natural join ind_stor
2024-12-09 08:15:46.026 UTC [61] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:15:46.026 UTC [61] LOG:  duration: 0.201 ms
2024-12-09 08:15:46.032 UTC [61] LOG:  duration: 0.169 ms
2024-12-09 08:15:46.032 UTC [61] LOG:  duration: 0.175 ms
2024-12-09 08:15:46.032 UTC [61] LOG:  execute <unnamed>: SELECT n.nspname = ANY(current_schemas(true)), n.nspname, t.typname FROM pg_catalog.pg_type t JOIN pg_catalog.pg_namespace n ON t.typnamespace = n.oid WHERE t.oid = $1
2024-12-09 08:15:46.032 UTC [61] DETAIL:  parameters: $1 = '22'
2024-12-09 08:15:46.032 UTC [61] LOG:  duration: 0.034 ms
2024-12-09 08:15:46.034 UTC [61] LOG:  duration: 0.128 ms
2024-12-09 08:15:46.034 UTC [61] LOG:  duration: 0.221 ms
2024-12-09 08:15:46.034 UTC [61] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc, typtype   FROM pg_catalog.pg_type   LEFT   JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE typname = $1  ORDER BY sp.r, pg_type.oid DESC LIMIT 1
2024-12-09 08:15:46.034 UTC [61] DETAIL:  parameters: $1 = 'int2vector'
2024-12-09 08:15:46.034 UTC [61] LOG:  duration: 0.087 ms
2024-12-09 08:15:46.035 UTC [61] LOG:  duration: 0.116 ms
2024-12-09 08:15:46.035 UTC [61] LOG:  duration: 0.165 ms
2024-12-09 08:15:46.035 UTC [61] LOG:  execute <unnamed>: SELECT n.nspname = ANY(current_schemas(true)), n.nspname, t.typname FROM pg_catalog.pg_type t JOIN pg_catalog.pg_namespace n ON t.typnamespace = n.oid WHERE t.oid = $1
2024-12-09 08:15:46.035 UTC [61] DETAIL:  parameters: $1 = '30'
2024-12-09 08:15:46.035 UTC [61] LOG:  duration: 0.029 ms
2024-12-09 08:15:46.036 UTC [61] LOG:  duration: 0.167 ms
2024-12-09 08:15:46.037 UTC [61] LOG:  duration: 0.223 ms
2024-12-09 08:15:46.037 UTC [61] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc, typtype   FROM pg_catalog.pg_type   LEFT   JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE typname = $1  ORDER BY sp.r, pg_type.oid DESC LIMIT 1
2024-12-09 08:15:46.037 UTC [61] DETAIL:  parameters: $1 = 'oidvector'
2024-12-09 08:15:46.037 UTC [61] LOG:  duration: 0.080 ms
2024-12-09 08:15:46.044 UTC [61] LOG:  duration: 0.327 ms
2024-12-09 08:15:46.045 UTC [61] LOG:  duration: 0.384 ms
2024-12-09 08:15:46.045 UTC [61] LOG:  execute <unnamed>: with T as ( select oid as table_id,
	                   relkind as table_kind,
	                   xmin as table_state_id
	            from pg_catalog.pg_class
	            where relkind in ('r','v','f','p')
	              and relnamespace = $1::oid ),
	     C as ( select conrelid as table_id,
	                   oid::bigint as con_id,
	                   xmin as con_state_id,
	                   conname as con_name,
	                   contype as con_kind,
	                   conkey as con_columns,
	                   conindid as index_id,
	                   confrelid as ref_table_id,
	                   confkey as ref_columns,
	                   condeferrable as is_deferrable,
	                   condeferred as is_init_deferred,
	                   confupdtype as on_update,
	                   confdeltype as on_delete,
	                   conbin /* consrc */
	            from pg_catalog.pg_constraint
	            where contype in ('p','u','f','c')
	              and connamespace = $2::oid )
	select table_id,
	       table_kind,
	       con_id,
	       con_state_id::varchar::bigint as con_state_id,
	       con_name,
	       con_kind,
	       con_columns,
	       index_id,
	       ref_table_id,
	       is_deferrable,
	       is_init_deferred,
	       on_update,
	       on_delete,
	       pg_catalog.pg_get_expr(conbin, table_id) /* consrc */ as con_expression,
	       ref_columns
	from T natural join C
	--  where pg_catalog.age(table_state_id) <= pg_catalog.age(:tx::varchar::xid) or pg_catalog.age(con_state_id) <= pg_catalog.age(:tx::varchar::xid)
	order by pg_catalog.strpos('pufc', con_kind)
2024-12-09 08:15:46.045 UTC [61] DETAIL:  parameters: $1 = '2200', $2 = '2200'
2024-12-09 08:15:46.045 UTC [61] LOG:  duration: 0.072 ms
2024-12-09 08:15:46.053 UTC [61] LOG:  duration: 0.227 ms
2024-12-09 08:15:46.053 UTC [61] LOG:  duration: 0.219 ms
2024-12-09 08:15:46.053 UTC [61] LOG:  execute <unnamed>: select R.ev_class as table_id,
	       R.oid as rule_id,
	       R.xmin as rule_state_number,
	       R.rulename as rule_name,
	       pg_catalog.translate(ev_type,'1234','SUID') as rule_event_code,
	       R.ev_enabled as rule_fire_mode,
	       R.is_instead as rule_is_instead
	from pg_catalog.pg_rewrite R
	where R.ev_class in (select oid
	                     from pg_catalog.pg_class
	                     where relnamespace = $1::oid)
	  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:tx::varchar::xid)
	  and R.rulename != '_RETURN'::name
	order by R.ev_class::bigint, ev_type
2024-12-09 08:15:46.053 UTC [61] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:15:46.053 UTC [61] LOG:  duration: 0.086 ms
2024-12-09 08:15:46.060 UTC [61] LOG:  duration: 0.254 ms
2024-12-09 08:15:46.060 UTC [61] LOG:  duration: 0.215 ms
2024-12-09 08:15:46.060 UTC [61] LOG:  execute <unnamed>: select T.tgrelid as table_id,
	       T.oid as trigger_id,
	       T.xmin as trigger_state_number,
	       T.tgname as trigger_name,
	       T.tgfoid as function_id,
	       T.tgtype & 31 as bits,
	       T.tgdeferrable as is_deferrable,
	       T.tginitdeferred as is_init_deferred,
	       T.tgenabled as trigger_fire_mode,
	       T.tgattr as columns,
	       pg_catalog.pg_get_triggerdef(T.oid, true) as source_code
	from pg_catalog.pg_trigger T
	where T.tgrelid in (select oid
	                    from pg_catalog.pg_class
	                    where relnamespace = $1::oid)
	  --  and pg_catalog.age(T.xmin) <= pg_catalog.age(:tx::varchar::xid)
	  and not T.tgisinternal
2024-12-09 08:15:46.060 UTC [61] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:15:46.060 UTC [61] LOG:  duration: 0.098 ms
2024-12-09 08:15:46.068 UTC [61] LOG:  duration: 0.438 ms
2024-12-09 08:15:46.069 UTC [61] LOG:  duration: 1.124 ms
2024-12-09 08:15:46.069 UTC [61] LOG:  execute <unnamed>: select D.objoid id, C.relkind as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_class C on D.objoid = C.oid
	where C.relnamespace = $1::oid and C.relkind != 'c'
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select T.oid id, 'T' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_type T on T.oid = D.objoid or T.typrelid = D.objoid
	  left join pg_catalog.pg_class C on T.typrelid = C.oid
	where T.typnamespace = $2::oid and (C.relkind = 'c' or C.relkind is null)
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, pg_catalog.translate(C.contype, 'pufc', 'kkxz') as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_constraint C on D.objoid = C.oid
	where C.connamespace = $3::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 't' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_trigger T on T.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = T.tgrelid
	where C.relnamespace = $4::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'R' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_rewrite R on R.oid = D.objoid
	  join pg_catalog.pg_class C on C.oid = R.ev_class
	where C.relnamespace = $5::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'F' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_proc P on P.oid = D.objoid
	where P.pronamespace = $6::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'O' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_operator O on O.oid = D.objoid
	where O.oprnamespace = $7::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	union all
	select D.objoid id, 'C' as kind, D.objsubid sub_id, D.description
	from pg_catalog.pg_description D
	  join pg_catalog.pg_collation C on C.oid = D.objoid
	where C.collnamespace = $8::oid
	--  and pg_catalog.age(D.xmin) <= pg_catalog.age(:tx::varchar::xid)
	
2024-12-09 08:15:46.069 UTC [61] DETAIL:  parameters: $1 = '2200', $2 = '2200', $3 = '2200', $4 = '2200', $5 = '2200', $6 = '2200', $7 = '2200', $8 = '2200'
2024-12-09 08:15:46.070 UTC [61] LOG:  duration: 0.642 ms
2024-12-09 08:15:46.079 UTC [61] LOG:  duration: 0.315 ms
2024-12-09 08:15:46.079 UTC [61] LOG:  duration: 0.248 ms
2024-12-09 08:15:46.079 UTC [61] LOG:  execute <unnamed>: select distinct
	       T.relkind as view_kind,
	       T.oid as view_id,
	       pg_catalog.pg_get_viewdef(T.oid, true) as source_text
	from pg_catalog.pg_class T
	  join pg_catalog.pg_namespace N on T.relnamespace = N.oid
	  left outer join pg_catalog.pg_attribute A on (A.attrelid = T.oid)
	where N.oid = $1::oid
	  and T.relkind in ('m','v')
	  --  and (pg_catalog.age(T.xmin) <= pg_catalog.age(:src_tx::varchar::xid) or pg_catalog.age(A.xmin) <= pg_catalog.age(:src_tx::varchar::xid))
2024-12-09 08:15:46.079 UTC [61] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:15:46.079 UTC [61] LOG:  duration: 0.094 ms
2024-12-09 08:15:46.089 UTC [61] LOG:  duration: 0.284 ms
2024-12-09 08:15:46.090 UTC [61] LOG:  duration: 0.478 ms
2024-12-09 08:15:46.090 UTC [61] LOG:  execute <unnamed>: with A as ( select oid as table_id, pg_catalog.upper(relkind) as table_kind
	            from pg_catalog.pg_class
	            where relnamespace = $1::oid
	              and relkind in ('r', 'm', 'v', 'f', 'p') )
	select table_kind,
	       table_id,
	       R.oid as rule_id,
	       pg_catalog.pg_get_ruledef(R.oid, true) as source_text
	from A join pg_catalog.pg_rewrite R
	        on A.table_id = R.ev_class
	where R.rulename != '_RETURN'::name
	  --  and pg_catalog.age(R.xmin) <= pg_catalog.age(:src_tx::varchar::xid)
2024-12-09 08:15:46.090 UTC [61] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:15:46.090 UTC [61] LOG:  duration: 0.102 ms
2024-12-09 08:15:46.098 UTC [61] LOG:  duration: 0.251 ms
2024-12-09 08:15:46.098 UTC [61] LOG:  duration: 0.282 ms
2024-12-09 08:15:46.098 UTC [61] LOG:  execute <unnamed>: with system_languages as ( select oid as lang
	                           from pg_catalog.pg_language
	                           where lanname in ('c','internal') )
	select oid as id,
	       pg_catalog.pg_get_function_arguments(oid) as arguments_def,
	       pg_catalog.pg_get_function_result(oid) as result_def,
	       prosrc as source_text
	from pg_catalog.pg_proc
	where pronamespace = $1::oid
	  --  and pg_catalog.age(xmin) <= pg_catalog.age(:src_tx::varchar::xid)
	  and not (prokind = 'a') /* proisagg */
	  and prolang not in (select lang from system_languages)
	  and prosrc is not null
2024-12-09 08:15:46.098 UTC [61] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:15:46.099 UTC [61] LOG:  duration: 1.106 ms
2024-12-09 08:15:46.108 UTC [61] LOG:  duration: 0.165 ms
2024-12-09 08:15:46.108 UTC [61] LOG:  duration: 0.203 ms
2024-12-09 08:15:46.108 UTC [61] LOG:  execute <unnamed>: select distinct connamespace as schema_id
	from pg_catalog.pg_constraint F,
	     pg_catalog.pg_class O
	where F.contype = 'f'
	  and F.confrelid = O.oid
	  and O.relnamespace in ($1)
2024-12-09 08:15:46.108 UTC [61] DETAIL:  parameters: $1 = '2200'
2024-12-09 08:15:46.108 UTC [61] LOG:  duration: 0.041 ms
2024-12-09 08:15:46.144 UTC [61] LOG:  duration: 0.069 ms
2024-12-09 08:15:46.144 UTC [61] LOG:  duration: 0.023 ms
2024-12-09 08:15:46.144 UTC [61] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:15:46.144 UTC [61] LOG:  duration: 0.041 ms
2024-12-09 08:15:50.130 UTC [62] LOG:  connection received: host=172.18.0.1 port=57060
2024-12-09 08:15:50.132 UTC [62] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:15:50.135 UTC [62] LOG:  duration: 0.063 ms
2024-12-09 08:15:50.135 UTC [62] LOG:  duration: 0.007 ms
2024-12-09 08:15:50.135 UTC [62] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:15:50.135 UTC [62] LOG:  duration: 0.015 ms
2024-12-09 08:15:50.135 UTC [62] LOG:  duration: 0.022 ms
2024-12-09 08:15:50.135 UTC [62] LOG:  duration: 0.006 ms
2024-12-09 08:15:50.135 UTC [62] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:15:50.135 UTC [62] LOG:  duration: 0.018 ms
2024-12-09 08:15:50.137 UTC [62] LOG:  duration: 0.168 ms
2024-12-09 08:15:50.137 UTC [62] LOG:  duration: 0.053 ms
2024-12-09 08:15:50.137 UTC [62] LOG:  execute <unnamed>: select version()
2024-12-09 08:15:50.137 UTC [62] LOG:  duration: 0.017 ms
2024-12-09 08:15:50.150 UTC [62] LOG:  duration: 0.159 ms
2024-12-09 08:15:50.150 UTC [62] LOG:  duration: 0.006 ms
2024-12-09 08:15:50.196 UTC [62] LOG:  duration: 0.135 ms
2024-12-09 08:15:50.196 UTC [62] LOG:  duration: 0.030 ms
2024-12-09 08:15:50.196 UTC [62] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2024-12-09 08:15:50.196 UTC [62] LOG:  duration: 0.028 ms
2024-12-09 08:15:50.203 UTC [62] LOG:  duration: 0.326 ms
2024-12-09 08:15:50.204 UTC [62] LOG:  duration: 0.509 ms
2024-12-09 08:15:50.204 UTC [62] LOG:  execute <unnamed>: SELECT e.typdelim FROM pg_catalog.pg_type t, pg_catalog.pg_type e WHERE t.oid = $1 and t.typelem = e.oid
2024-12-09 08:15:50.204 UTC [62] DETAIL:  parameters: $1 = '1003'
2024-12-09 08:15:50.204 UTC [62] LOG:  duration: 0.024 ms
2024-12-09 08:15:50.209 UTC [62] LOG:  duration: 0.228 ms
2024-12-09 08:15:50.209 UTC [62] LOG:  duration: 0.111 ms
2024-12-09 08:15:50.209 UTC [62] LOG:  execute <unnamed>: SELECT t.*
	FROM public."Currencies" t
	LIMIT 501
2024-12-09 08:15:50.209 UTC [62] LOG:  duration: 0.019 ms
2024-12-09 08:15:50.214 UTC [62] LOG:  duration: 0.422 ms
2024-12-09 08:15:50.215 UTC [62] LOG:  duration: 1.321 ms
2024-12-09 08:15:50.215 UTC [62] LOG:  execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity != '' OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 16387 AS oid , 1 AS attnum UNION ALL SELECT 16387, 2 UNION ALL SELECT 16387, 3 UNION ALL SELECT 16387, 4) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum) 
2024-12-09 08:15:50.216 UTC [62] LOG:  duration: 0.196 ms
2024-12-09 08:15:50.237 UTC [62] LOG:  duration: 0.127 ms
2024-12-09 08:15:50.237 UTC [62] LOG:  duration: 0.012 ms
2024-12-09 08:15:50.237 UTC [62] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:15:50.237 UTC [62] LOG:  duration: 0.029 ms
2024-12-09 08:15:55.176 UTC [63] LOG:  connection received: host=172.18.0.1 port=57076
2024-12-09 08:15:55.179 UTC [63] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:15:55.181 UTC [63] LOG:  duration: 0.091 ms
2024-12-09 08:15:55.181 UTC [63] LOG:  duration: 0.007 ms
2024-12-09 08:15:55.181 UTC [63] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:15:55.181 UTC [63] LOG:  duration: 0.033 ms
2024-12-09 08:15:55.182 UTC [63] LOG:  duration: 0.022 ms
2024-12-09 08:15:55.182 UTC [63] LOG:  duration: 0.006 ms
2024-12-09 08:15:55.182 UTC [63] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:15:55.182 UTC [63] LOG:  duration: 0.020 ms
2024-12-09 08:15:55.184 UTC [63] LOG:  duration: 0.137 ms
2024-12-09 08:15:55.184 UTC [63] LOG:  duration: 0.062 ms
2024-12-09 08:15:55.184 UTC [63] LOG:  execute <unnamed>: select version()
2024-12-09 08:15:55.184 UTC [63] LOG:  duration: 0.012 ms
2024-12-09 08:15:55.192 UTC [63] LOG:  duration: 0.022 ms
2024-12-09 08:15:55.192 UTC [63] LOG:  duration: 0.006 ms
2024-12-09 08:15:55.197 UTC [63] LOG:  duration: 0.179 ms
2024-12-09 08:15:55.197 UTC [63] LOG:  duration: 0.038 ms
2024-12-09 08:15:55.197 UTC [63] LOG:  execute <unnamed>: select current_database() as a, current_schemas(false) as b
2024-12-09 08:15:55.197 UTC [63] LOG:  duration: 0.037 ms
2024-12-09 08:15:55.203 UTC [63] LOG:  duration: 0.474 ms
2024-12-09 08:15:55.203 UTC [63] LOG:  duration: 0.580 ms
2024-12-09 08:15:55.203 UTC [63] LOG:  execute <unnamed>: SELECT e.typdelim FROM pg_catalog.pg_type t, pg_catalog.pg_type e WHERE t.oid = $1 and t.typelem = e.oid
2024-12-09 08:15:55.203 UTC [63] DETAIL:  parameters: $1 = '1003'
2024-12-09 08:15:55.203 UTC [63] LOG:  duration: 0.028 ms
2024-12-09 08:15:55.208 UTC [63] LOG:  duration: 0.117 ms
2024-12-09 08:15:55.208 UTC [63] LOG:  duration: 0.033 ms
2024-12-09 08:15:55.208 UTC [63] LOG:  execute <unnamed>: select current_database(), current_schema(), current_user
2024-12-09 08:15:55.208 UTC [63] LOG:  duration: 0.033 ms
2024-12-09 08:15:55.217 UTC [63] LOG:  duration: 0.605 ms
2024-12-09 08:15:55.219 UTC [63] LOG:  duration: 1.594 ms
2024-12-09 08:15:55.219 UTC [63] LOG:  execute <unnamed>: select distinct oid, xmin
	from pg_catalog.pg_namespace
	where oid in (16387)
	union
	select distinct oid, xmin
	from pg_catalog.pg_type
	where oid in (16387)
	union
	select distinct oid, xmin
	from pg_catalog.pg_class
	where oid in (16387)
	union
	select distinct oid, xmin
	from pg_catalog.pg_proc
	where oid in (16387)
	union
	select distinct oid, xmin
	from pg_catalog.pg_operator
	where oid in (16387)
	union
	select distinct oid, xmin
	from pg_catalog.pg_constraint
	where oid in (16387)
	union
	select distinct oid, xmin
	from pg_catalog.pg_collation
	where oid in (16387)
	union
	
	select distinct oid, xmin
	from pg_catalog.pg_rewrite
	where oid in (16387)
	union
	select distinct oid, xmin
	from pg_catalog.pg_trigger
	where oid in (16387)
	union
	select distinct oid, xmin
	from pg_catalog.pg_am
	where oid in (16387)
	union
	select distinct oid, xmin
	from pg_catalog.pg_foreign_data_wrapper
	where oid in (16387)
	union
	select distinct oid, xmin
	from pg_catalog.pg_foreign_server
	where oid in (16387)
	union
	select distinct oid, xmin
	from pg_catalog.pg_extension
	where oid in (16387)
	
	/* union
	select distinct oid, xmin
	from pg_catalog.pg_user_mapping
	where oid in (16387)
	*/
2024-12-09 08:15:55.219 UTC [63] LOG:  duration: 0.194 ms
2024-12-09 08:15:55.225 UTC [63] LOG:  duration: 0.220 ms
2024-12-09 08:15:55.225 UTC [63] LOG:  duration: 0.213 ms
2024-12-09 08:15:55.225 UTC [63] LOG:  execute <unnamed>: SELECT n.nspname = ANY(current_schemas(true)), n.nspname, t.typname FROM pg_catalog.pg_type t JOIN pg_catalog.pg_namespace n ON t.typnamespace = n.oid WHERE t.oid = $1
2024-12-09 08:15:55.225 UTC [63] DETAIL:  parameters: $1 = '28'
2024-12-09 08:15:55.225 UTC [63] LOG:  duration: 0.050 ms
2024-12-09 08:15:55.227 UTC [63] LOG:  duration: 0.506 ms
2024-12-09 08:15:55.227 UTC [63] LOG:  duration: 0.314 ms
2024-12-09 08:15:55.227 UTC [63] LOG:  execute <unnamed>: SELECT typinput='array_in'::regproc, typtype   FROM pg_catalog.pg_type   LEFT   JOIN (select ns.oid as nspoid, ns.nspname, r.r           from pg_namespace as ns           join ( select s.r, (current_schemas(false))[s.r] as nspname                    from generate_series(1, array_upper(current_schemas(false), 1)) as s(r) ) as r          using ( nspname )        ) as sp     ON sp.nspoid = typnamespace  WHERE typname = $1  ORDER BY sp.r, pg_type.oid DESC LIMIT 1
2024-12-09 08:15:55.227 UTC [63] DETAIL:  parameters: $1 = 'xid'
2024-12-09 08:15:55.227 UTC [63] LOG:  duration: 0.104 ms
2024-12-09 08:15:55.246 UTC [63] LOG:  duration: 0.058 ms
2024-12-09 08:15:55.246 UTC [63] LOG:  duration: 0.013 ms
2024-12-09 08:15:55.246 UTC [63] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:15:55.246 UTC [63] LOG:  duration: 0.015 ms
2024-12-09 08:20:45.924 UTC [74] LOG:  connection received: host=172.18.0.1 port=60936
2024-12-09 08:20:45.945 UTC [74] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:20:46.017 UTC [74] LOG:  duration: 0.103 ms
2024-12-09 08:20:46.017 UTC [74] LOG:  duration: 0.011 ms
2024-12-09 08:20:46.017 UTC [74] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:20:46.017 UTC [74] LOG:  duration: 0.020 ms
2024-12-09 08:20:46.019 UTC [74] LOG:  duration: 0.045 ms
2024-12-09 08:20:46.019 UTC [74] LOG:  duration: 0.006 ms
2024-12-09 08:20:46.019 UTC [74] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:20:46.019 UTC [74] LOG:  duration: 0.021 ms
2024-12-09 08:20:46.059 UTC [74] LOG:  duration: 0.024 ms
2024-12-09 08:20:46.059 UTC [74] LOG:  duration: 0.017 ms
2024-12-09 08:20:46.061 UTC [74] LOG:  duration: 0.089 ms
2024-12-09 08:20:46.061 UTC [74] LOG:  duration: 0.006 ms
2024-12-09 08:20:46.061 UTC [74] LOG:  execute <unnamed>: SHOW TRANSACTION ISOLATION LEVEL
2024-12-09 08:20:46.061 UTC [74] LOG:  duration: 0.019 ms
2024-12-09 08:20:46.193 UTC [75] LOG:  connection received: host=172.18.0.1 port=60944
2024-12-09 08:20:46.196 UTC [75] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:20:46.201 UTC [75] LOG:  duration: 0.069 ms
2024-12-09 08:20:46.201 UTC [75] LOG:  duration: 0.008 ms
2024-12-09 08:20:46.201 UTC [75] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:20:46.201 UTC [75] LOG:  duration: 0.017 ms
2024-12-09 08:20:46.202 UTC [75] LOG:  duration: 0.079 ms
2024-12-09 08:20:46.202 UTC [75] LOG:  duration: 0.008 ms
2024-12-09 08:20:46.202 UTC [75] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:20:46.203 UTC [75] LOG:  duration: 0.077 ms
2024-12-09 08:20:46.237 UTC [76] LOG:  connection received: host=172.18.0.1 port=60954
2024-12-09 08:20:46.240 UTC [76] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:20:46.243 UTC [76] LOG:  duration: 0.065 ms
2024-12-09 08:20:46.243 UTC [76] LOG:  duration: 0.006 ms
2024-12-09 08:20:46.243 UTC [76] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:20:46.243 UTC [76] LOG:  duration: 0.020 ms
2024-12-09 08:20:46.244 UTC [76] LOG:  duration: 0.024 ms
2024-12-09 08:20:46.244 UTC [76] LOG:  duration: 0.004 ms
2024-12-09 08:20:46.244 UTC [76] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:20:46.244 UTC [76] LOG:  duration: 0.018 ms
2024-12-09 08:20:46.283 UTC [77] LOG:  connection received: host=172.18.0.1 port=60966
2024-12-09 08:20:46.285 UTC [77] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:20:46.288 UTC [77] LOG:  duration: 0.083 ms
2024-12-09 08:20:46.288 UTC [77] LOG:  duration: 0.009 ms
2024-12-09 08:20:46.288 UTC [77] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:20:46.288 UTC [77] LOG:  duration: 0.020 ms
2024-12-09 08:20:46.290 UTC [77] LOG:  duration: 0.033 ms
2024-12-09 08:20:46.290 UTC [77] LOG:  duration: 0.006 ms
2024-12-09 08:20:46.290 UTC [77] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:20:46.290 UTC [77] LOG:  duration: 0.024 ms
2024-12-09 08:20:46.330 UTC [78] LOG:  connection received: host=172.18.0.1 port=60978
2024-12-09 08:20:46.334 UTC [78] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:20:46.337 UTC [78] LOG:  duration: 0.150 ms
2024-12-09 08:20:46.337 UTC [78] LOG:  duration: 0.010 ms
2024-12-09 08:20:46.337 UTC [78] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:20:46.337 UTC [78] LOG:  duration: 0.020 ms
2024-12-09 08:20:46.338 UTC [78] LOG:  duration: 0.023 ms
2024-12-09 08:20:46.338 UTC [78] LOG:  duration: 0.005 ms
2024-12-09 08:20:46.338 UTC [78] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:20:46.338 UTC [78] LOG:  duration: 0.021 ms
2024-12-09 08:20:46.376 UTC [79] LOG:  connection received: host=172.18.0.1 port=60982
2024-12-09 08:20:46.380 UTC [79] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:20:46.383 UTC [79] LOG:  duration: 0.060 ms
2024-12-09 08:20:46.383 UTC [79] LOG:  duration: 0.011 ms
2024-12-09 08:20:46.383 UTC [79] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:20:46.383 UTC [79] LOG:  duration: 0.015 ms
2024-12-09 08:20:46.384 UTC [79] LOG:  duration: 0.022 ms
2024-12-09 08:20:46.384 UTC [79] LOG:  duration: 0.006 ms
2024-12-09 08:20:46.384 UTC [79] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:20:46.384 UTC [79] LOG:  duration: 0.020 ms
2024-12-09 08:20:46.421 UTC [80] LOG:  connection received: host=172.18.0.1 port=60988
2024-12-09 08:20:46.424 UTC [80] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:20:46.427 UTC [80] LOG:  duration: 0.087 ms
2024-12-09 08:20:46.427 UTC [80] LOG:  duration: 0.009 ms
2024-12-09 08:20:46.427 UTC [80] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:20:46.428 UTC [80] LOG:  duration: 0.038 ms
2024-12-09 08:20:46.429 UTC [80] LOG:  duration: 0.026 ms
2024-12-09 08:20:46.429 UTC [80] LOG:  duration: 0.007 ms
2024-12-09 08:20:46.429 UTC [80] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:20:46.429 UTC [80] LOG:  duration: 0.027 ms
2024-12-09 08:20:46.466 UTC [81] LOG:  connection received: host=172.18.0.1 port=60998
2024-12-09 08:20:46.470 UTC [81] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:20:46.473 UTC [81] LOG:  duration: 0.081 ms
2024-12-09 08:20:46.473 UTC [81] LOG:  duration: 0.007 ms
2024-12-09 08:20:46.473 UTC [81] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:20:46.473 UTC [81] LOG:  duration: 0.016 ms
2024-12-09 08:20:46.474 UTC [81] LOG:  duration: 0.037 ms
2024-12-09 08:20:46.474 UTC [81] LOG:  duration: 0.009 ms
2024-12-09 08:20:46.474 UTC [81] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:20:46.474 UTC [81] LOG:  duration: 0.031 ms
2024-12-09 08:20:46.513 UTC [82] LOG:  connection received: host=172.18.0.1 port=32774
2024-12-09 08:20:46.515 UTC [82] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:20:46.519 UTC [82] LOG:  duration: 0.084 ms
2024-12-09 08:20:46.519 UTC [82] LOG:  duration: 0.008 ms
2024-12-09 08:20:46.519 UTC [82] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:20:46.519 UTC [82] LOG:  duration: 0.018 ms
2024-12-09 08:20:46.520 UTC [82] LOG:  duration: 0.026 ms
2024-12-09 08:20:46.520 UTC [82] LOG:  duration: 0.010 ms
2024-12-09 08:20:46.520 UTC [82] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:20:46.520 UTC [82] LOG:  duration: 0.020 ms
2024-12-09 08:20:46.560 UTC [83] LOG:  connection received: host=172.18.0.1 port=32780
2024-12-09 08:20:46.563 UTC [83] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:20:46.567 UTC [83] LOG:  duration: 0.079 ms
2024-12-09 08:20:46.567 UTC [83] LOG:  duration: 0.008 ms
2024-12-09 08:20:46.567 UTC [83] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:20:46.567 UTC [83] LOG:  duration: 0.016 ms
2024-12-09 08:20:46.568 UTC [83] LOG:  duration: 0.035 ms
2024-12-09 08:20:46.568 UTC [83] LOG:  duration: 0.008 ms
2024-12-09 08:20:46.568 UTC [83] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:20:46.569 UTC [83] LOG:  duration: 0.027 ms
2024-12-09 08:20:46.612 UTC [84] LOG:  connection received: host=172.18.0.1 port=32788
2024-12-09 08:20:46.615 UTC [84] LOG:  connection authorized: user=myuser database=currency_db
2024-12-09 08:20:46.618 UTC [84] LOG:  duration: 0.060 ms
2024-12-09 08:20:46.618 UTC [84] LOG:  duration: 0.005 ms
2024-12-09 08:20:46.618 UTC [84] LOG:  execute <unnamed>: SET extra_float_digits = 3
2024-12-09 08:20:46.618 UTC [84] LOG:  duration: 0.013 ms
2024-12-09 08:20:46.619 UTC [84] LOG:  duration: 0.017 ms
2024-12-09 08:20:46.619 UTC [84] LOG:  duration: 0.003 ms
2024-12-09 08:20:46.619 UTC [84] LOG:  execute <unnamed>: SET application_name = 'PostgreSQL JDBC Driver'
2024-12-09 08:20:46.619 UTC [84] LOG:  duration: 0.015 ms
2024-12-09 08:20:46.654 UTC [84] LOG:  duration: 0.026 ms
2024-12-09 08:20:46.655 UTC [84] LOG:  duration: 0.005 ms
2024-12-09 08:20:46.655 UTC [84] LOG:  execute <unnamed>: BEGIN
2024-12-09 08:20:46.655 UTC [84] LOG:  duration: 0.005 ms
2024-12-09 08:20:46.655 UTC [84] LOG:  duration: 0.683 ms
2024-12-09 08:20:46.656 UTC [84] LOG:  duration: 0.575 ms
2024-12-09 08:20:46.656 UTC [84] LOG:  execute <unnamed>: select string_agg(word, ',') from pg_catalog.pg_get_keywords() where word <> ALL ('{a,abs,absolute,action,ada,add,admin,after,all,allocate,alter,always,and,any,are,array,as,asc,asensitive,assertion,assignment,asymmetric,at,atomic,attribute,attributes,authorization,avg,before,begin,bernoulli,between,bigint,binary,blob,boolean,both,breadth,by,c,call,called,cardinality,cascade,cascaded,case,cast,catalog,catalog_name,ceil,ceiling,chain,char,char_length,character,character_length,character_set_catalog,character_set_name,character_set_schema,characteristics,characters,check,checked,class_origin,clob,close,coalesce,cobol,code_units,collate,collation,collation_catalog,collation_name,collation_schema,collect,column,column_name,command_function,command_function_code,commit,committed,condition,condition_number,connect,connection_name,constraint,constraint_catalog,constraint_name,constraint_schema,constraints,constructors,contains,continue,convert,corr,corresponding,count,covar_pop,covar_samp,create,cross,cube,cume_dist,current,current_collation,current_date,current_default_transform_group,current_path,current_role,current_time,current_timestamp,current_transform_group_for_type,current_user,cursor,cursor_name,cycle,data,date,datetime_interval_code,datetime_interval_precision,day,deallocate,dec,decimal,declare,default,defaults,deferrable,deferred,defined,definer,degree,delete,dense_rank,depth,deref,derived,desc,describe,descriptor,deterministic,diagnostics,disconnect,dispatch,distinct,domain,double,drop,dynamic,dynamic_function,dynamic_function_code,each,element,else,end,end-exec,equals,escape,every,except,exception,exclude,excluding,exec,execute,exists,exp,external,extract,false,fetch,filter,final,first,float,floor,following,for,foreign,fortran,found,free,from,full,function,fusion,g,general,get,global,go,goto,grant,granted,group,grouping,having,hierarchy,hold,hour,identity,immediate,implementation,in,including,increment,indicator,initially,inner,inout,input,insensitive,insert,instance,instantiable,int,integer,intersect,intersection,interval,into,invoker,is,isolation,join,k,key,key_member,key_type,language,large,last,lateral,leading,left,length,level,like,ln,local,localtime,localtimestamp,locator,lower,m,map,match,matched,max,maxvalue,member,merge,message_length,message_octet_length,message_text,method,min,minute,minvalue,mod,modifies,module,month,more,multiset,mumps,name,names,national,natural,nchar,nclob,nesting,new,next,no,none,normalize,normalized,not,"null",nullable,nullif,nulls,number,numeric,object,octet_length,octets,of,old,on,only,open,option,options,or,order,ordering,ordinality,others,out,outer,output,over,overlaps,overlay,overriding,pad,parameter,parameter_mode,parameter_name,parameter_ordinal_position,parameter_specific_catalog,parameter_specific_name,parameter_specific_schema,partial,partition,pascal,path,percent_rank,percentile_cont,percentile_disc,placing,pli,position,power,preceding,precision,prepare,preserve,primary,prior,privileges,procedure,public,range,rank,read,reads,real,recursive,ref,references,referencing,regr_avgx,regr_avgy,regr_count,regr_intercept,regr_r2,regr_slope,regr_sxx,regr_sxy,regr_syy,relative,release,repeatable,restart,result,return,returned_cardinality,returned_length,returned_octet_length,returned_sqlstate,returns,revoke,right,role,rollback,rollup,routine,routine_catalog,routine_name,routine_schema,row,row_count,row_number,rows,savepoint,scale,schema,schema_name,scope_catalog,scope_name,scope_schema,scroll,search,second,section,security,select,self,sensitive,sequence,serializable,server_name,session,session_user,set,sets,similar,simple,size,smallint,some,source,space,specific,specific_name,specifictype,sql,sqlexception,sqlstate,sqlwarning,sqrt,start,state,statement,static,stddev_pop,stddev_samp,structure,style,subclass_origin,submultiset,substring,sum,symmetric,system,system_user,table,table_name,tablesample,temporary,then,ties,time,timestamp,timezone_hour,timezone_minute,to,top_level_count,trailing,transaction,transaction_active,transactions_committed,transactions_rolled_back,transform,transforms,translate,translation,treat,trigger,trigger_catalog,trigger_name,trigger_schema,trim,true,type,uescape,unbounded,uncommitted,under,union,unique,unknown,unnamed,unnest,update,upper,usage,user,user_defined_type_catalog,user_defined_type_code,user_defined_type_name,user_defined_type_schema,using,value,values,var_pop,var_samp,varchar,varying,view,when,whenever,where,width_bucket,window,with,within,without,work,write,year,zone}'::text[])
2024-12-09 08:20:46.658 UTC [84] LOG:  duration: 2.336 ms
2024-12-09 08:20:46.687 UTC [84] LOG:  duration: 0.215 ms
2024-12-09 08:20:46.687 UTC [84] LOG:  duration: 0.096 ms
2024-12-09 08:20:46.687 UTC [84] LOG:  execute <unnamed>: select version()
2024-12-09 08:20:46.687 UTC [84] LOG:  duration: 0.014 ms
2024-12-09 08:20:46.740 UTC [84] LOG:  duration: 0.133 ms
2024-12-09 08:20:46.740 UTC [84] LOG:  duration: 0.039 ms
2024-12-09 08:20:46.740 UTC [84] LOG:  execute <unnamed>: select current_schema()
2024-12-09 08:20:46.740 UTC [84] LOG:  duration: 0.062 ms
2024-12-09 08:20:46.743 UTC [84] LOG:  duration: 0.062 ms
2024-12-09 08:20:46.743 UTC [84] LOG:  duration: 0.028 ms
2024-12-09 08:20:46.743 UTC [84] LOG:  execute <unnamed>: select current_schema()
2024-12-09 08:20:46.743 UTC [84] LOG:  duration: 0.010 ms
2024-12-09 08:20:46.754 UTC [84] LOG:  duration: 0.037 ms
2024-12-09 08:20:46.754 UTC [84] LOG:  duration: 0.013 ms
2024-12-09 08:20:46.754 UTC [84] LOG:  execute S_1: COMMIT
2024-12-09 08:20:46.754 UTC [84] LOG:  duration: 0.016 ms
2024-12-09 08:20:48.949 UTC [84] LOG:  duration: 0.466 ms
2024-12-09 08:20:48.951 UTC [84] LOG:  duration: 2.398 ms
2024-12-09 08:20:48.951 UTC [84] LOG:  execute <unnamed>: select * from information_schema.sequences
2024-12-09 08:20:48.952 UTC [84] LOG:  duration: 0.322 ms
2024-12-09 08:20:48.960 UTC [84] LOG:  duration: 0.964 ms
2024-12-09 08:20:48.962 UTC [84] LOG:  duration: 1.667 ms
2024-12-09 08:20:48.962 UTC [84] LOG:  execute <unnamed>: SELECT NULL AS TABLE_CAT, n.nspname AS TABLE_SCHEM, c.relname AS TABLE_NAME,  CASE n.nspname ~ '^pg_' OR n.nspname = 'information_schema'  WHEN true THEN CASE  WHEN n.nspname = 'pg_catalog' OR n.nspname = 'information_schema' THEN CASE c.relkind   WHEN 'r' THEN 'SYSTEM TABLE'   WHEN 'v' THEN 'SYSTEM VIEW'   WHEN 'i' THEN 'SYSTEM INDEX'   ELSE NULL   END  WHEN n.nspname = 'pg_toast' THEN CASE c.relkind   WHEN 'r' THEN 'SYSTEM TOAST TABLE'   WHEN 'i' THEN 'SYSTEM TOAST INDEX'   ELSE NULL   END  ELSE CASE c.relkind   WHEN 'r' THEN 'TEMPORARY TABLE'   WHEN 'p' THEN 'TEMPORARY TABLE'   WHEN 'i' THEN 'TEMPORARY INDEX'   WHEN 'S' THEN 'TEMPORARY SEQUENCE'   WHEN 'v' THEN 'TEMPORARY VIEW'   ELSE NULL   END  END  WHEN false THEN CASE c.relkind  WHEN 'r' THEN 'TABLE'  WHEN 'p' THEN 'PARTITIONED TABLE'  WHEN 'i' THEN 'INDEX'  WHEN 'P' then 'PARTITIONED INDEX'  WHEN 'S' THEN 'SEQUENCE'  WHEN 'v' THEN 'VIEW'  WHEN 'c' THEN 'TYPE'  WHEN 'f' THEN 'FOREIGN TABLE'  WHEN 'm' THEN 'MATERIALIZED VIEW'  ELSE NULL  END  ELSE NULL  END  AS TABLE_TYPE, d.description AS REMARKS,  '' as TYPE_CAT, '' as TYPE_SCHEM, '' as TYPE_NAME, '' AS SELF_REFERENCING_COL_NAME, '' AS REF_GENERATION  FROM pg_catalog.pg_namespace n, pg_catalog.pg_class c  LEFT JOIN pg_catalog.pg_description d ON (c.oid = d.objoid AND d.objsubid = 0  and d.classoid = 'pg_class'::regclass)  WHERE c.relnamespace = n.oid  AND n.nspname LIKE 'public' AND c.relname LIKE '%' AND (false  OR ( c.relkind = 'r' AND n.nspname !~ '^pg_' AND n.nspname <> 'information_schema' )  OR ( c.relkind = 'v' AND n.nspname <> 'pg_catalog' AND n.nspname <> 'information_schema' )  OR ( c.relkind = 'm' )  OR ( c.relkind = 'p' AND n.nspname !~ '^pg_' AND n.nspname <> 'information_schema' ) )  ORDER BY TABLE_TYPE,TABLE_SCHEM,TABLE_NAME 
2024-12-09 08:20:48.962 UTC [84] LOG:  duration: 0.319 ms
2024-12-09 08:20:48.968 UTC [84] LOG:  duration: 1.563 ms
2024-12-09 08:20:48.971 UTC [84] LOG:  duration: 2.411 ms
2024-12-09 08:20:48.971 UTC [84] LOG:  execute <unnamed>: SELECT * FROM (SELECT n.nspname,c.relname,a.attname,a.atttypid,a.attnotnull OR (t.typtype = 'd' AND t.typnotnull) AS attnotnull,a.atttypmod,a.attlen,t.typtypmod,row_number() OVER (PARTITION BY a.attrelid ORDER BY a.attnum) AS attnum, nullif(a.attidentity, '') as attidentity,nullif(a.attgenerated, '') as attgenerated,pg_catalog.pg_get_expr(def.adbin, def.adrelid) AS adsrc,dsc.description,t.typbasetype,t.typtype  FROM pg_catalog.pg_namespace n  JOIN pg_catalog.pg_class c ON (c.relnamespace = n.oid)  JOIN pg_catalog.pg_attribute a ON (a.attrelid=c.oid)  JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid)  LEFT JOIN pg_catalog.pg_attrdef def ON (a.attrelid=def.adrelid AND a.attnum = def.adnum)  LEFT JOIN pg_catalog.pg_description dsc ON (c.oid=dsc.objoid AND a.attnum = dsc.objsubid)  LEFT JOIN pg_catalog.pg_class dc ON (dc.oid=dsc.classoid AND dc.relname='pg_class')  LEFT JOIN pg_catalog.pg_namespace dn ON (dc.relnamespace=dn.oid AND dn.nspname='pg_catalog')  WHERE c.relkind in ('r','p','v','f','m') and a.attnum > 0 AND NOT a.attisdropped  AND n.nspname LIKE 'public') c WHERE true  AND attname LIKE '%' ORDER BY nspname,c.relname,attnum 
2024-12-09 08:20:48.972 UTC [84] LOG:  duration: 0.900 ms
2024-12-09 08:20:49.547 UTC [84] LOG:  duration: 0.147 ms
2024-12-09 08:20:49.547 UTC [84] LOG:  duration: 0.006 ms
2024-12-09 08:20:49.547 UTC [84] LOG:  execute <unnamed>: BEGIN
2024-12-09 08:20:49.547 UTC [84] LOG:  duration: 0.007 ms
2024-12-09 08:20:49.547 UTC [84] LOG:  duration: 0.096 ms
2024-12-09 08:20:49.548 UTC [84] LOG:  duration: 0.169 ms
2024-12-09 08:20:49.548 UTC [84] LOG:  execute <unnamed>: select c1_0."ID",c1_0."Code",c1_0."FullName",c1_0."Sign" from "Currencies" c1_0
2024-12-09 08:20:49.548 UTC [84] LOG:  duration: 0.019 ms
2024-12-09 08:20:49.568 UTC [84] LOG:  duration: 0.022 ms
2024-12-09 08:20:49.568 UTC [84] LOG:  execute S_1: COMMIT
2024-12-09 08:20:49.568 UTC [84] LOG:  duration: 0.020 ms
2024-12-09 08:21:50.945 UTC [1] LOG:  received fast shutdown request
2024-12-09 08:21:50.947 UTC [1] LOG:  aborting any active transactions
2024-12-09 08:21:50.947 UTC [83] FATAL:  terminating connection due to administrator command
2024-12-09 08:21:50.947 UTC [82] FATAL:  terminating connection due to administrator command
2024-12-09 08:21:50.948 UTC [80] FATAL:  terminating connection due to administrator command
2024-12-09 08:21:50.948 UTC [79] FATAL:  terminating connection due to administrator command
2024-12-09 08:21:50.948 UTC [78] FATAL:  terminating connection due to administrator command
2024-12-09 08:21:50.948 UTC [81] FATAL:  terminating connection due to administrator command
2024-12-09 08:21:50.948 UTC [84] FATAL:  terminating connection due to administrator command
2024-12-09 08:21:50.948 UTC [75] FATAL:  terminating connection due to administrator command
2024-12-09 08:21:50.948 UTC [77] FATAL:  terminating connection due to administrator command
2024-12-09 08:21:50.950 UTC [76] FATAL:  terminating connection due to administrator command
2024-12-09 08:21:50.950 UTC [49] FATAL:  terminating connection due to administrator command
2024-12-09 08:21:50.951 UTC [74] FATAL:  terminating connection due to administrator command
2024-12-09 08:21:50.951 UTC [62] FATAL:  terminating connection due to administrator command
2024-12-09 08:21:50.953 UTC [1] LOG:  background worker "logical replication launcher" (PID 34) exited with exit code 1
2024-12-09 08:21:50.955 UTC [29] LOG:  shutting down
2024-12-09 08:21:50.983 UTC [1] LOG:  database system is shut down
